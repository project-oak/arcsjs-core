var re=Object.defineProperty;var Be=(i,e,t)=>e in i?re(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var Ae=(i,e)=>()=>(i&&(e=i(i=0)),e);var se=(i,e)=>{for(var t in e)re(i,t,{get:e[t],enumerable:!0})};var j=(i,e,t)=>(Be(i,typeof e!="symbol"?e+"":e,t),t);var Se={};se(Se,{Particle:()=>D,ParticleApi:()=>_});var je,Pe,$e,mt,Z,gt,ft,T,Y,yt,F,bt,_,vt,D,ze=Ae(()=>{({create:je,assign:Pe,keys:$e,values:mt,entries:Z,defineProperty:gt,setPrototypeOf:ft}=Object),T=globalThis.scope,{log:Y,timeout:yt}=T,F=()=>je(null),bt=new class{get empty(){return this.length===0}get data(){return this}get pojo(){return this.data}get json(){return JSON.stringify(this.pojo)}get pretty(){return JSON.stringify(this.pojo,null,"  ")}get keys(){return $e(this.data)}get length(){return $e(this.data).length}get values(){return mt(this.data)}get entries(){return Z(this.data)}set(i,e){this.data[i]=e}setByIndex(i,e){this.data[this.keys[i]]=e}add(...i){i.forEach(e=>this.data[T.makeKey()]=e)}push(...i){this.add(...i)}remove(i){Z(this.data).find(([e,t])=>{if(t===i)return delete this.data[e],!0})}has(i){return this.data[i]!==void 0}get(i){return this.getByKey(i)}getByKey(i){return this.data[i]}getByIndex(i){return this.data[this.keys[i]]}delete(i){delete this.data[i]}deleteByIndex(i){delete this.data[this.keys[i]]}assign(i){Pe(this.data,i)}map(i){return this.values.map(i)}toString(){return this.pretty}},_=class{get template(){return null}shouldUpdate(e,t){return!0}async update(e,t,r){return null}shouldRender(e,t){return!0}render(e,t){return null}},vt=i=>{let e=i;return{get:()=>e,set:t=>e=t}},D=class{pipe;impl;internal;constructor(e,t,r){this.pipe=t,this.impl=je(e),gt(this,"internal",vt(F())),this.internal.$busy=0,this.internal.beStateful=!0,this.internal.state=F()}get log(){return this.pipe?.log||Y}get template(){return this.impl?.template}get config(){return{template:this.template}}set inputs(e){this.internal.inputs=e,this.invalidateInputs()}get inputs(){return this.internal.inputs}get state(){return this.internal.state}async service(e){return this.pipe?.service?.(e)}invalidateInputs(){this.invalidate()}invalidate(){this.internal.validator||(this.internal.validator=yt(this.validate.bind(this),1))}async(e){return Promise.resolve().then(e.bind(this))}async validate(){if(this.internal.validator){try{this.internal.$validateAfterBusy=this.internal.$busy,this.internal.$busy||(this.internal.beStateful||(this.internal.state=F()),this.internal.inputs=this.validateInputs(),await this.maybeUpdate())}catch(e){Y.error(e)}this.internal.validator=null}}validateInputs(){let e=Pe(F(),this.inputs);return Z(e).forEach(([t,r])=>{r&&typeof r=="object"&&(Array.isArray(r)||(r=ft({...r},bt)),e[t]=r)}),e}implements(e){return typeof this.impl?.[e]=="function"}async maybeUpdate(){await this.checkInit()&&(this.canUpdate()||this.outputData(null),await this.shouldUpdate(this.inputs,this.state)&&this.update())}async checkInit(){return this.internal.initialized||(this.internal.initialized=!0,this.implements("initialize")&&await this.asyncMethod(this.impl.initialize)),!0}canUpdate(){return this.implements("update")}async shouldUpdate(e,t){return!this.impl?.shouldUpdate||await this.impl.shouldUpdate(e,t)!==!1}update(){this.asyncMethod(this.impl?.update)}outputData(e){this.pipe?.output?.(e,this.maybeRender())}maybeRender(){if(this.template){let{inputs:e,state:t}=this.internal;if(this.impl?.shouldRender?.(e,t)!==!1)return this.implements("render")?this.impl.render(e,t):{...e,...t}}}async handleEvent({handler:e,data:t}){let r=this.impl?.[e];r&&(this.internal.inputs.eventlet=t,await this.asyncMethod(r.bind(this.impl),{eventlet:t}),this.internal.inputs.eventlet=null)}async asyncMethod(e,t){if(e){let{inputs:r,state:s}=this.internal,a={service:async l=>this.service(l),invalidate:()=>this.invalidate(),output:async l=>this.outputData(l)},o=e.bind(this.impl,r,s,{...a,...t});this.outputData(await this.try(o)),!this.internal.$busy&&this.internal.$validateAfterBusy&&this.invalidate()}}async try(e){this.internal.$busy++;try{return await e()}catch(t){Y.error(t)}finally{this.internal.$busy--}}};T.harden(globalThis);T.harden(D)});var u=class{listeners={};getEventListeners(e){return this.listeners[e]||(this.listeners[e]=[])}fire(e,...t){let r=this.getEventListeners(e);r?.forEach&&r.forEach(s=>s(...t))}listen(e,t,r){return this.getEventListeners(e).push(t),t._name=r||"(unnamed listener)",t}unlisten(e,t){let r=this.getEventListeners(e),s=typeof t=="string"?r.findIndex(a=>a._name===t):r.indexOf(t);s>=0?r.splice(s,1):console.warn("failed to unlisten from",e)}};var ae=["log","group","groupCollapsed","groupEnd","dir"],ne=["warn","error"];var{fromEntries:oe}=Object,le=(i,e,t,r="log")=>{if(!i)return()=>{};if(r==="dir")return console.dir.bind(console);let s=`background: ${t||"gray"}; color: white; padding: 1px 6px 2px 7px; border-radius: 6px 0 0 6px;`;return console[r].bind(console,`%c${e}`,s)},n=(i,e,t="")=>{let r=oe(ae.map(l=>[l,le(i,e,t,l)])),s=oe(ne.map(l=>[l,le(!0,e,t,l)])),a={...r,...s},o=a.log;return Object.assign(o,a),o};n.flags=globalThis.config?.logFlags||{};var Ue=i=>n(n.flags.arc,`Arc (${i})`,"slateblue"),{assign:Le,keys:B,entries:ce,create:Me}=Object,A=i=>Object.values(i),U=()=>Me(null),P=class extends u{log;id;meta;stores;hosts;surface;composer;hostService;constructor(e,t,r){super(),this.id=e,this.meta=t,this.surface=r,this.hosts=U(),this.stores=U(),this.log=Ue(e)}async addHost(e,t){return await this.ensureComposer(),this.hosts[e.id]=e,e.arc=this,this.updateHost(e),e}async ensureComposer(){!this.composer&&this.surface&&(this.composer=await this.surface.createComposer("root"),this.composer.onevent=this.onevent.bind(this))}removeHost(e){this.hosts[e]?.detach(),delete this.hosts[e]}addStore(e,t){t&&!this.stores[e]&&(this.stores[e]=t,t.listen("change",()=>this.storeChanged(e,t),this.id))}removeStore(e){let t=this.stores[e];t&&t.unlisten("change",this.id),delete this.stores[e]}storeChanged(e,t){this.log(`storeChanged: "${e}"`);let r=s=>s&&s.some(a=>A(a)[0]==e||B(a)[0]==e);A(this.hosts).forEach(s=>{let a=s.meta?.inputs;(a==="*"||r(a))&&(this.log(`host "${s.id}" has interest in "${e}"`),this.updateHost(s))}),this.fire("store-changed",e)}updateParticleMeta(e,t){let r=this.hosts[e];r.meta=t,this.updateHost(r)}updateHost(e){e.inputs=this.computeInputs(e)}computeInputs(e){let t=U(),r=e.meta?.inputs;if(r==="*")ce(this.stores).forEach(([s,a])=>t[s]=a.pojo);else{let s=e.meta?.staticInputs;Le(t,s),r&&(r.forEach(a=>this.computeInput(ce(a)[0],t)),this.log(`computeInputs(${e.id}) =`,t))}return t}computeInput([e,t],r){let s=t||e,a=this.stores[s];a?r[e]=a.pojo:this.log.warn(`computeInput: "${s}" (bound to "${e}") not found`)}assignOutputs({id:e,meta:t},r){let s=B(r);t?.outputs&&s.length&&(s.forEach(a=>this.assignOutput(a,r[a],t.outputs)),this.log(`[end][${e}] assignOutputs:`,r))}assignOutput(e,t,r){if(t!==void 0){let s=this.findOutputByName(r,e)||e,a=this.stores[s];a?(this.log(`assignOutputs: "${e}" is dirty, updating Store "${s}"`,t),a.data=t):r?.[e]&&this.log.warn(`assignOutputs: no "${s}" store for output "${e}"`)}}findOutputByName(e,t){let r=e?.find(s=>B(s)[0]===t);if(r)return A(r)[0]}async render(e){this.composer&&this.composer.render(e)}onevent(e,t){let r=this.hosts[e];r&&r.handleEvent(t)}async service(e,t){let r=await this.surface?.service(t);return r===void 0&&(r=this.hostService?.(e,t)),r}};var Ne=(i,e)=>{let t=e;if(e){if(Array.isArray(e)){Array.isArray(i)||(i=[]);for(let s=0;s<e.length;s++){let a=e[s];i[s]!==a&&(i[s]=a)}let r=i.length-e.length;r>0&&i.splice(e.length,r)}else if(typeof e=="object"){t=i&&typeof i=="object"?i:Object.create(null);let r={};Object.keys(e).forEach(s=>{t[s]=e[s],r[s]=!0}),Object.keys(t).forEach(s=>{r[s]||delete t[s]})}}return t},Ie=(i,e)=>{if(e==null)return null;if(typeof e=="object"){let t=i&&typeof i=="object"?i:Object.create(null);return Object.keys(e).forEach(r=>t[r]=e[r]),t}return e};function d(i){if(i){if(Array.isArray(i))return i.map(e=>d(e));if(typeof i=="object"){let e=Object.create(null);return Object.entries(i).forEach(([t,r])=>{e[t]=d(r)}),e}else return i}else return i}var v=(i,e)=>{let t=typeof i;if(t!==typeof e)return!1;if(t==="object"&&i&&e){let r=Object.getOwnPropertyNames(i),s=Object.getOwnPropertyNames(e);return r.length==s.length&&!r.some(a=>!v(i[a],e[a]))}return i===e},ue=i=>i===void 0?null:(i&&typeof i=="object"&&Object.getOwnPropertyNames(i).forEach(t=>{let r=i[t];r===void 0?delete i[t]:ue(r)}),i);var{floor:pe,pow:Re,random:L}=Math,He=i=>pe((1+L()*9)*Re(10,i-1)),S=i=>pe(L()*i),y=i=>i[S(i.length)],Ke=i=>Boolean(L()<i);var M=n(n.flags.decorator,"Decorator","plum"),{values:We,entries:he}=Object,de={},N={setOpaqueData(i,e){return de[i]=d(e),i},getOpaqueData(i){return de[i]},maybeDecorateModel(i,e){return i&&!Array.isArray(i)&&We(i).forEach(t=>{t&&typeof t=="object"&&(t.models?(M("applying decorator(s) to list:",t),this.maybeDecorateItem(t,e)):(i?.filter||i?.decorator||i?.collateBy)&&(M("scanning for lists in sub-model:",t),this.maybeDecorateModel(t,e)))}),i},maybeDecorateItem(i,e){let t=typeof i.models=="string"?this.getOpaqueData(i.models):i.models;t=Je(t,i.decorator,e),t=Ve(t,i.filter,e.impl),t=Ge(t,i),i.models=t}},Je=(i,e,t)=>{e=t.impl[e]??e;let{inputs:r,state:s}=t.internal;if(e){let a=Object.freeze(d(r)),o=Object.freeze(d(s));i=i.map(l=>{l.privateData=l.privateData||{};let p=Object.freeze(d(l)),b=e(p,a,o);return l.privateData=b.privateData,{...b,...l}}),i.sort(Qe("sortKey")),M("decoration was performed")}return i},Ve=(i,e,t)=>(e=t[e]??e,e&&i&&(i=i.filter(e)),i),Ge=(i,e)=>(he(e).forEach(([t,r])=>{if(r?.collateBy){let s=Ye(i,r.collateBy);i=Ze(s,t,r.$template)}}),i),Qe=i=>(e,t)=>Xe(String(e[i]).toLowerCase(),String(t[i]).toLowerCase()),Xe=(i,e)=>i<e?-1:i>e?1:0,Ye=(i,e)=>{let t={};return i.forEach(r=>{let s=r[e];s&&(t[s]||(t[s]=[])).push(r)}),t},Ze=(i,e,t)=>he(i).map(([r,s])=>({key:r,[e]:{models:s,$template:t},single:s.length===1,...s?.[0]}));var{entries:me,keys:_e}=Object,et=i=>n(n.flags.host,`Host (${i})`,y(["#5a189a","#51168b","#48137b","#6b2fa4","#7b46ae","#3f116c"])),w=class extends u{arc;id;lastOutput;log;meta;particle;constructor(e){super(),this.log=et(e),this.id=e}onevent(e){this.arc?.onevent(e)}installParticle(e,t){this.particle&&this.detachParticle(),e&&(this.particle=e,this.meta=t||this.meta)}get container(){return this.meta?.container||"root"}detach(){this.detachParticle(),this.arc=null}detachParticle(){let{particle:e}=this;e&&(this.render({$clear:!0}),this.particle=null,this.meta=null)}async service(e){return e?.decorate?N.maybeDecorateModel(e.model,this.particle):this.arc?.service(this,e)}output(e,t){e&&(this.lastOutput=e,this.arc?.assignOutputs(this,e)),this.template&&(N.maybeDecorateModel(t,this.particle),this.log(t),this.render(t))}render(e){let{id:t,container:r,template:s}=this;this.arc?.render({id:t,container:r,content:{template:s,model:e}})}set inputs(e){if(this.particle&&e){let t=this.particle.internal.inputs;this.dirtyCheck(e,t,this.lastOutput)?(this.particle.inputs={...this.meta?.staticInputs,...e},this.fire("inputs-changed")):this.log("inputs are uninteresting, skipping update")}}dirtyCheck(e,t,r){let s=([a,o])=>r?.[a]&&!v(r[a],o)||!v(t?.[a],o);return!t||me(e).length!==this.lastInputsLength(t)||me(e).some(s)}lastInputsLength(e){return _e(e).filter(t=>!this.meta?.staticInputs?.[t]&&t!=="eventlet").length}get config(){return this.particle?.config}get template(){return this.config?.template}invalidate(){this.particle?.invalidate()}handleEvent(e){return this.particle?.handleEvent(e)}};var{create:tt,keys:it}=Object,{stringify:ge,parse:fe}=JSON,I=class extends u{privateData;constructor(){super()}setPrivateData(e){this.privateData=e}set data(e){this.setPrivateData(e)}get data(){return this.privateData}toString(){return this.pretty}get isObject(){return this.data&&typeof this.data=="object"}get pojo(){return this.data}get json(){return ge(this.data)}set json(e){let t=null;try{t=fe(e)}catch{}this.data=t}get pretty(){let e={},t=this.pojo;return it(t).sort().forEach(r=>e[r]=t[r]),ge(e,null,"  ")}},R=class extends I{change(e){e(this),this.doChange()}doChange(){this.fire("change",this),this.onChange(this)}onChange(e){}set data(e){this.change(t=>t.setPrivateData(e))}get data(){return this.privateData}set(e,t){this.data||this.setPrivateData(tt(null)),t!==void 0?this.change(r=>r.data[e]=t):this.delete(e)}delete(e){this.change(t=>delete t.data[e])}},H=class extends R{meta;persistor;willPersist;constructor(e){super(),this.meta={...e}}toString(){return`${JSON.stringify(this.meta,null,"  ")}, ${this.pretty}`}get tags(){return this.meta.tags??(this.meta.tags=[])}is(...e){return e.every(t=>this.tags.includes(t))}isCollection(){return this.meta.type?.[0]==="["}async doChange(){return this.persist(),super.doChange()}async persist(){!this.willPersist&&this.persistor&&(this.willPersist=!0,setTimeout(()=>{this.willPersist=!1,this.persistor.persist(this)},500))}async restore(e){!await this.persistor?.restore(this)&&e!==void 0&&(this.data=e)}delete(){this.persistor?.remove(this)}save(){return this.json}load(e,t){let r=t;try{e&&(r=fe(e))}catch{}r!==void 0&&(this.data=r)}},z=class extends H{};var O=(i,e,t)=>{i=i||2,e=e||2,t=t||"-";let r=Math.pow(10,e-1),s=Math.pow(10,e)-r,a=[];for(let o=0;o<i;o++)a.push(`${S(s-r)+r}`);return a.join(t)};var ye=n(n.flags.runtime,"runtime","#873600"),be={},K={},{keys:rt}=Object,g=class extends u{log;uid;nid;arcs;stores;peers;shares;endpoint;network;surfaces;persistor;prettyUid;constructor(e){e=e||"user",super(),this.arcs={},this.surfaces={},this.stores={},this.peers=new Set,this.shares=new Set,this.setUid(e),this.log=n(n.flags.runtime,`runtime:[${this.prettyUid}]`,"#873600"),g.securityLockdown?.(g.particleOptions)}setUid(e){this.uid=e,this.nid=`${e}:${O(1,2)}`,this.prettyUid=e.substring(0,e.indexOf("@")+1)||e}async bootstrapArc(e,t,r,s){let a=new P(e,t,r);return a.hostService=this.serviceFactory(s),await this.addArc(a),a}serviceFactory(e){return async(t,r)=>e.handle(this,t,r)}async bootstrapParticle(e,t,r){let s=new w(t);await this.marshalParticle(s,r);let a=e.addHost(s);return ye("bootstrapped particle",t),a}addSurface(e,t){this.surfaces[e]=t}getSurface(e){return this.surfaces[e]}addArc(e){let{id:t}=e;if(t&&!this.arcs[t])return this.arcs[t]=e;throw`arc has no id, or id "${t}" is already in use`}removeArc(e){let{id:t}=e;if(!t||!this.arcs[t])throw t?`id "${t}" is not in use`:"arc has no id";delete this.arcs[t]}async marshalParticle(e,t){let r=await this.createParticle(e,t.kind);e.installParticle(r,t)}async installParticle(e,t,r){if(this.log("installParticle",r,t,e.id),r=r||O(),e.hosts[r]){let a=1;for(;e.hosts[`${r}-${a}`];a++);r=`${r}-${a}`}let s=new w(r);return await this.marshalParticle(s,t),e.addHost(s),s}addStore(e,t){t.marshal&&t.marshal(this),t.persistor&&(t.persistor.persist=a=>this.persistor?.persist(e,a));let r=`${this.nid}:${e}-changed`,s=this.storeChanged.bind(this,e);t.listen("change",s,r),this.stores[e]=t,this.maybeShareStore(e)}storeChanged(e,t){this.log("storeChanged",e),this.network?.invalidatePeers(e),this.onStoreChange(e,t),this.fire("store-changed",{storeId:e,store:t})}onStoreChange(e,t){}do(e,t){t(this.stores[e])}removeStore(e){this.do(e,t=>{t?.unlisten("change",`${this.nid}:${e}-changed`)}),delete this.stores[e]}maybeShareStore(e){this.do(e,t=>{t?.is("shared")&&this.shareStore(e)})}addPeer(e){this.peers.add(e),[...this.shares].forEach(t=>this.maybeShareStoreWithPeer(t,e))}shareStore(e){this.shares.add(e),[...this.peers].forEach(t=>this.maybeShareStoreWithPeer(e,t))}maybeShareStoreWithPeer(e,t){this.do(e,r=>{let s=this.uid.replace(/\./g,"_");(!r.is("private")||t.startsWith(s))&&this.shareStoreWithPeer(e,t)})}shareStoreWithPeer(e,t){this.network?.shareStore(e,t)}async createParticle(e,t){try{return(await this.marshalParticleFactory(t))(e)}catch(r){ye.error(`createParticle(${t}):`,r)}}async marshalParticleFactory(e){return be[e]??this.lateBindParticle(e)}lateBindParticle(e){return g.registerParticleFactory(e,g?.particleIndustry(e,g.particleOptions))}static registerParticleFactory(e,t){return be[e]=t}requireStore(e){let t=this.stores[e.name];return t||(t=this.createStore(e),this.addStore(e.name,t)),t}createStore(e){let t=rt(K).find(s=>e.tags?.includes?.(s)),r=K[String(t)]||z;return new r(e)}static registerStoreClass(e,t){K[e]=t}},h=g;j(h,"securityLockdown"),j(h,"particleIndustry"),j(h,"particleOptions");var W=n(n.flags.recipe,"flan","violet"),{entries:st,create:at}=Object,k=class{stores;particles;slots;meta;constructor(e){this.stores=[],this.particles=[],this.slots=[],this.meta=at(null),e&&this.parse(e)}parse(e){let t=this.normalize(e);return this.parseSlotSpec(t,"root",""),this}normalize(e){if(typeof e!="object")throw Error("recipe must be an Object");return e}parseSlotSpec(e,t,r){for(let s in e)switch(s){case"$meta":this.meta={...this.meta,...e.$meta};break;case"$stores":this.parseStoresNode(e.$stores);break;default:{let a=r?`${r}#${t}`:t;this.parseParticleSpec(a,s,e[s]);break}}}parseStoresNode(e){for(let t in e)this.parseStoreSpec(t,e[t])}parseStoreSpec(e,t){if(this.stores.find(s=>s.name===e)){W("duplicate store name");return}let r={name:e,type:t.$type,tags:t.$tags,value:t.$value};this.stores.push(r)}parseParticleSpec(e,t,r){if(!r.$kind)throw W.warn('parseParticleSpec: malformed spec has no "kind":',r),Error();if(this.particles.find(s=>s.id===t)){W("duplicate particle name");return}this.particles.push({id:t,container:e,spec:r}),r.$slots&&this.parseSlotsNode(r.$slots,t)}parseSlotsNode(e,t){st(e).forEach(([r,s])=>this.parseSlotSpec(s,r,t))}};function J(i,e){for(let t in e)if(i[t]!==e[t])return!1;return!0}var V=n(n.flags.recipe,"StoreCook","#187e13"),{values:nt}=Object,ot=(i,e)=>nt(i.stores).filter(t=>J(t?.meta,e)),lt=(i,{name:e,type:t})=>ot(i,{name:e,type:t})?.[0],C=class{static async execute(e,t,r){return this.forEachStore(this.realizeStore,e,t,r)}static async evacipate(e,t,r){return this.forEachStore(this.derealizeStore,e,t,r)}static async forEachStore(e,t,r,s){return Promise.all(s.map(a=>e.call(this,t,r,a)))}static async realizeStore(e,t,r){let s=this.constructMeta(e,t,r),a=lt(e,s);a&&V(`realizeStore: mapped "${r.name}" to "${a.meta.name}"`),a?(V(`realizeStore: mapped to "${s.name}", setting data to:`,s?.value),s?.value!==void 0&&(a.data=s?.value)):(a=e.createStore(s),a&&(a.persistor={restore:o=>e.persistor?.restore(s.name,o),persist:()=>{}}),e.addStore(s.name,a),await a?.restore(s?.value),V(`realizeStore: created "${s.name}"`)),t.addStore(s.name,a)}static async derealizeStore(e,t,r){e.removeStore(r.$name),t.removeStore(r.$name)}static constructMeta(e,t,r){let s={...r,arcid:t.id,uid:e.uid};return{...s,owner:s.uid,shareid:`${s.name}:${s.arcid}:${s.uid}`}}};var ct=n(n.flags.recipe,"ParticleCook","#096f33"),x=class{static async execute(e,t,r){for(let s of r)await this.realizeParticle(e,t,s)}static async realizeParticle(e,t,r){ct("realizedParticle:",r.id);let s=this.specToMeta(r.spec);return s.container||=r.container,e.bootstrapParticle(t,r.id,s)}static specToMeta(e){let{$kind:t,$container:r,$staticInputs:s}=e,a=this.formatBindings(e.$inputs),o=this.formatBindings(e.$outputs);return{kind:t,staticInputs:s,inputs:a,outputs:o,container:r}}static formatBindings(e){return e?.map?.(t=>typeof t=="string"?{[t]:t}:t)}static async evacipate(e,t,r){return Promise.all(r.map(s=>this.derealizeParticle(e,t,s)))}static async derealizeParticle(e,t,r){t.removeHost(r.id)}};var $=n(n.flags.recipe,"Chef","#087f23"),ve=class{static async execute(e,t,r){if(r instanceof Promise){$.error("`arc` must be an Arc, not a Promise. Make sure `boostrapArc` is awaited.");return}$("|-->...| executing recipe: ",e.$meta??"");let s=new k(e);await C.execute(t,r,s.stores),await x.execute(t,r,s.particles),r.meta={...r.meta,...s.meta},$("|...-->| recipe complete: ",e.$meta??"")}static async evacipate(e,t,r){$("|-->...| evacipating recipe: ",e.$meta);let s=new k(e);await x.evacipate(t,r,s.particles),$("|...-->| recipe evacipated: ",e.$meta)}static async executeAll(e,t,r){for(let s of e)await this.execute(s,t,r)}static async evacipateAll(e,t,r){return Promise.all(e?.map(s=>this.evacipate(s,t,r)))}};var G=n(n.flags.composer,"composer","red"),q=class extends u{slots;pendingPackets;constructor(){super(),this.slots={},this.pendingPackets=[]}activate(){this.fire("activate")}processPendingPackets(){let e=this.pendingPackets;e.length&&(this.pendingPackets=[],e.forEach(t=>{t.pendCount=(t.pendCount||0)+1,this.render(t)}))}render(e){let{id:t,container:r,content:{template:s,model:a}}=e;G({id:t,container:r,model:a});let o=this.slots[t];if(a?.$clear){o&&(this.processPendingPackets(),this.slots[t]=null,this.clearSlot(o));return}if(!o){let l=this.findContainer(r);if(!l){this.pendingPackets.push(e),++e.pendCount%1e4===0&&G.warn(`container [${r}] unavailable for slot [${t}] (x1e4)`);return}o=this.generateSlot(t,s,l),this.slots[t]=o}o&&a&&(this.maybeReattachSlot(o,r),o.set(a),this.processPendingPackets())}clearSlot(e){}findContainer(e){return null}generateSlot(e,t,r){return null}maybeReattachSlot(e,t){}onevent(e,t){G(`[${e}] sent [${t.handler}] event`)}requestFontFamily(e){return!1}};var Ei=n(n.flags.composer,"surface","tomato"),we=class{async createComposer(e){return await this.createComposerInstance(e)}async createComposerInstance(e){return new q}async service(e){}};var ke=class{map;constructor(i){this.map={},this.setRoot(i)}add(i){Object.assign(this.map,i||{})}resolve(i){let e=i.split("/"),t=e.shift();return[this.map[t]||t,...e].join("/")}setRoot(i){i.length&&i[i.length-1]==="/"&&(i=i.slice(0,-1)),this.add({$root:i,$arcs:i})}getAbsoluteHereUrl(i,e){let t=i.url.split("/").slice(0,-(e??1)).join("/");if(globalThis?.document){let r=document.URL;r[r.length-1]!=="/"&&(r=r.split("/").slice(0,-1).join("/"));let s=new URL(t,r).href;return s[s.length-1]==="/"&&(s=s.slice(0,-1)),s}else return t}},ut=import.meta.url.split("/").slice(0,-3).join("/"),m=globalThis.Paths=new ke(ut);m.add(globalThis.config?.paths);var Q=n(n.flags.code,"code","gold"),pt="$arcs/js/core/Particle.js",E=async i=>{if(!E.source){let e=m.resolve(i||pt);Q("particle base code path: ",e);let r=await(await fetch(e)).text()+`
//# sourceURL=`+e+`
`;E.source=r.replace(/export /g,"")}return E.source};E.source=null;var xe=async(i,e)=>{let t=e?.code||await dt(i);return t.slice(t.indexOf("({"))},dt=async i=>{if(i)return await ht(i);Q.error("fetchParticleCode: empty 'kind'")},ht=async i=>{let e=X(i);try{return await(await fetch(e)).text()}catch{Q.error(`could not locate implementation for particle "${i}" [${e}]`)}},X=i=>i?(!"$./".includes(i[0])&&!i.includes("://")&&(i=`$library/${i}`),i?.split("/").pop().includes(".")||(i=`${i}.js`),m.resolve(i)):"404";var ee=n(n.flags.ses,"vanilla","goldenrod"),Oe=i=>i;globalThis.harden=Oe;globalThis.scope={harden:Oe};var wt=()=>`i${Math.floor((1+Math.random()*9)*1e14)}`,kt=async(i,e)=>new Promise(t=>setTimeout(()=>t(i()),e)),xt=i=>{try{let t={...{log:ee,resolve:Ce,html:qe,makeKey:wt,timeout:kt},...i?.injections};Object.assign(globalThis.scope,t),Object.assign(globalThis,t)}finally{}},Ce=m.resolve.bind(m),qe=(i,...e)=>`${i[0]}${e.map((t,r)=>`${t}${i[r+1]}`).join("")}`.trim(),$t=async(i,e)=>{let{Particle:t}=await Promise.resolve().then(()=>(ze(),Se)),r=await jt(i,e),s=zt(i),a={log:s,resolve:Ce,html:qe,...e?.injections},o=r(a);return p=>{let b={log:s,output:p.output.bind(p),service:p.service.bind(p)};return new t(o,b,!0)}},jt=async(i,e)=>{let t=await xe(i,e),r=(0,eval)(t);return typeof r=="object"&&(r=Pt(r,i),ee(`repackaged factory:
`,r)),globalThis.harden(r)},Pt=(i,e)=>{let{constNames:t,rewriteConsts:r,funcNames:s,rewriteFuncs:a}=St(i),o=`{${[...t,...s]}}`,l=`
({log, ...utils}) => {
// protect utils
globalThis.harden(utils);
// these are just handy
const {assign, keys, entries, values, create} = Object;
// declarations
${[...r,...a].join(`

`)}
// hardened Object (map) of declarations,
// suitable to be a prototype
return globalThis.harden(${o});
// name the file for debuggers
//# sourceURL=sandbox/${X(e).split("/").pop()}
};
  `;return ee(`rewritten:

`,l),(0,eval)(l)},St=i=>{let e=Object.entries(i),t=([c,f])=>typeof f=="function",r=([c,f])=>c=="harden"||c=="globalThis",s=e.filter(c=>t(c)&&!r(c)),a=s.map(([c,f])=>{let ie=f?.toString?.()??"",De=ie.includes("async"),Te=ie.replace("async ","").replace("function ","");return`${De?"async":""} function ${Te};`}),o=s.map(([c])=>c),l=e.filter(c=>!t(c)&&!r(c)),p=l.map(([c,f])=>`const ${c} = \`${f}\`;`);return{constNames:l.map(([c])=>c),rewriteConsts:p,funcNames:o,rewriteFuncs:a}},zt=i=>{let e=n(n.flags.particles,i,"#002266");return(t,...r)=>{let a=(t?.stack?.split(`
`)?.slice(1,2)||new Error().stack?.split(`
`).slice(2,3)).map(o=>o.replace(/\([^()]*?\)/,"").replace(/ \([^()]*?\)/,"").replace("<anonymous>, <anonymous>","").replace("Object.","").replace("eval at :","").replace(/\(|\)/g,"").replace(/\[[^\]]*?\] /,"").replace(/at (.*) (\d)/,'at "$1" $2')).reverse().join(`
`).trim();t?.message?e.error(t.message,...r,`(${a})`):e(t,...r,`(${a})`)}};h.particleIndustry=$t;h.securityLockdown=xt;var te={};se(te,{PathMapper:()=>ke,Paths:()=>m,arand:()=>y,async:()=>Dt,asyncTask:()=>Tt,computeAgeString:()=>Ot,debounce:()=>Ft,deepCopy:()=>d,deepEqual:()=>v,deepUndefinedToNull:()=>ue,irand:()=>S,kebabToCaps:()=>Fe,key:()=>He,logFactory:()=>n,makeCapName:()=>Ct,makeId:()=>O,makeName:()=>Ee,matches:()=>J,prob:()=>Ke,shallowMerge:()=>Ie,shallowUpdate:()=>Ne});var Ot=(i,e)=>{let t=Math.round((e-i)/1e3);if(isNaN(t))return"\u2022";let r="";return t<60?(t>1&&(r="s"),`${t} second${r} ago`):(t=Math.round(t/60),t<60?(t>1&&(r="s"),`${t} minute${r} ago`):(t=Math.round(t/60),t<24?(t>1&&(r="s"),`${t} hour${r} ago`):(t=Math.round(t/24),t<30?(t>1&&(r="s"),`${t} day${r} ago`):(t=Math.round(t/30),t<12?(t>1&&(r="s"),`${t} month${r} ago`):(t=Math.round(t/12),t>1&&(r="s"),`${t} year${r} ago`)))))};var Ee=i=>`${y(qt)}${i||"-"}${y(Et)}`,Ct=()=>Fe(Ee()),Fe=i=>{let e=[];for(let t=0,r;r=i[t];t++)e.push(t>0&&r!=="-"?r:i[t>0?++t:t].toUpperCase());return e.join("")},qt=["abandoned","able","absolute","adorable","adventurous","academic","acceptable","acclaimed","accomplished","accurate","aching","acidic","acrobatic","active","actual","adept","admirable","admired","adolescent","adorable","adored","advanced","afraid","affectionate","aged","aggravating","aggressive","agile","agitated","agonizing","agreeable","ajar","alarmed","alarming","alert","alienated","alive","all","altruistic","amazing","ambitious","ample","amused","amusing","anchored","ancient","angelic","angry","anguished","animated","annual","another","antique","anxious","any","apprehensive","appropriate","apt","arctic","arid","aromatic","artistic","ashamed","assured","astonishing","athletic","attached","attentive","attractive","austere","authentic","authorized","automatic","avaricious","average","aware","awesome","awful","awkward","babyish","bad","back","baggy","bare","barren","basic","beautiful","belated","beloved","beneficial","better","best","bewitched","big","big-hearted","biodegradable","bite-sized","bitter","black","black-and-white","bland","blank","blaring","bleak","blind","blissful","blond","blue","blushing","bogus","boiling","bold","bony","boring","bossy","both","bouncy","bountiful","bowed","brave","breakable","brief","bright","brilliant","brisk","broken","bronze","brown","bruised","bubbly","bulky","bumpy","buoyant","burdensome","burly","bustling","busy","buttery","buzzing","calculating","calm","candid","canine","capital","carefree","careful","careless","caring","cautious","cavernous","celebrated","charming","cheap","cheerful","cheery","chief","chilly","chubby","circular","classic","clean","clear","clear-cut","clever","close","closed","cloudy","clueless","clumsy","cluttered","coarse","cold","colorful","colorless","colossal","comfortable","common","compassionate","competent","complete","complex","complicated","composed","concerned","concrete","confused","conscious","considerate","constant","content","conventional","cooked","cool","cooperative","coordinated","corny","corrupt","costly","courageous","courteous","crafty","crazy","creamy","creative","creepy","criminal","crisp","critical","crooked","crowded","cruel","crushing","cuddly","cultivated","cultured","cumbersome","curly","curvy","cute","cylindrical","damaged","damp","dangerous","dapper","daring","darling","dark","dazzling","dead","deadly","deafening","dear","dearest","decent","decimal","decisive","deep","defenseless","defensive","defiant","deficient","definite","definitive","delayed","delectable","delicious","delightful","delirious","demanding","dense","dental","dependable","dependent","descriptive","deserted","detailed","determined","devoted","different","difficult","digital","diligent","dim","dimpled","dimwitted","direct","discrete","distant","downright","dreary","dirty","disguised","dishonest","dismal","distant","distinct","distorted","dizzy","dopey","doting","double","downright","drab","drafty","dramatic","droopy","dry","dual","dutiful","each","eager","earnest","early","easy","easy-going","ecstatic","edible","educated","elaborate","elastic","elated","elderly","electric","elegant","elementary","elliptical","embarrassed","embellished","eminent","emotional","empty","enchanted","enchanting","energetic","enlightened","enormous","enraged","entire","envious","equal","equatorial","essential","esteemed","ethical","euphoric","even","evergreen","everlasting","every","evil","exalted","excellent","exemplary","exhausted","excitable","excited","exciting","exotic","expensive","experienced","expert","extraneous","extroverted","extra-large","extra-small","fabulous","failing","faint","fair","faithful","fake","false","familiar","famous","fancy","fantastic","far","faraway","far-flung","far-off","fast","fat","fatal","fatherly","favorable","favorite","fearful","fearless","feisty","feline","female","feminine","few","fickle","filthy","fine","finished","firm","first","firsthand","fitting","fixed","flaky","flamboyant","flashy","flat","flawed","flawless","flickering","flimsy","flippant","flowery","fluffy","fluid","flustered","focused","fond","foolhardy","foolish","forceful","forked","formal","forsaken","forthright","fortunate","fragrant","frail","frank","frayed","free","French","fresh","frequent","friendly","frightened","frightening","frigid","frilly","frizzy","frivolous","front","frosty","frozen","frugal","fruitful","full","fumbling","functional","funny","fussy","fuzzy","gargantuan","gaseous","general","generous","gentle","genuine","giant","giddy","gigantic","gifted","giving","glamorous","glaring","glass","gleaming","gleeful","glistening","glittering","gloomy","glorious","glossy","glum","golden","good","good-natured","gorgeous","graceful","gracious","grand","grandiose","granular","grateful","gray","great","green","gregarious","gripping","grizzled","grouchy","grounded","growing","growling","grown","grubby","gruesome","grumpy","guilty","gullible","gummy","hairy","half","handmade","handsome","handy","happy","happy-go-lucky","hard","hard-to-find","harmful","harmless","harmonious","harsh","hasty","hateful","haunting","healthy","heartfelt","hearty","heavenly","heavy","hefty","helpful","helpless","hidden","hideous","high","high-level","hilarious","hoarse","hollow","homely","honest","honorable","honored","hopeful","horrible","hospitable","hot","huge","humble","humiliating","humming","humongous","hungry","hurtful","husky","icky","icy","ideal","idealistic","identical","idle","idiotic","idolized","ignorant","ill","illegal","ill-fated","ill-informed","illiterate","illustrious","imaginary","imaginative","immaculate","immaterial","immediate","immense","impassioned","impeccable","impartial","imperfect","imperturbable","impish","impolite","important","impossible","impractical","impressionable","impressive","improbable","impure","inborn","incomparable","incompatible","incomplete","inconsequential","incredible","indelible","inexperienced","indolent","infamous","infantile","infatuated","inferior","infinite","informal","innocent","insistent","instructive","insubstantial","intelligent","intent","intentional","interesting","internal","international","intrepid","ironclad","itchy","jaded","jagged","jam-packed","jaunty","jealous","jittery","joint","jolly","jovial","joyful","joyous","jubilant","judicious","juicy","jumbo","junior","jumpy","juvenile","kaleidoscopic","keen","key","kind","kindhearted","kindly","klutzy","knobby","knotty","knowledgeable","knowing","known","kooky","kosher","lanky","large","last","lasting","late","lavish","lawful","lazy","leading","lean","leafy","left","legal","legitimate","light","lighthearted","likable","likely","limited","limp","limping","linear","lined","liquid","little","live","lively","livid","lone","lonely","long","long-term","loose","lopsided","lost","loud","lovable","lovely","loving","low","loyal","lucky","lumbering","luminous","lumpy","lustrous","luxurious","mad","made-up","magnificent","majestic","major","male","mammoth","married","marvelous","masculine","massive","mature","meager","mealy","mean","measly","meaty","medical","mediocre","medium","meek","mellow","melodic","memorable","menacing","merry","messy","metallic","mild","milky","mindless","miniature","minor","minty","miserable","miserly","misguided","misty","mixed","modern","modest","moist","monstrous","monthly","monumental","moral","mortified","motherly","motionless","mountainous","muddy","muffled","multicolored","mundane","murky","mushy","muted","mysterious","naive","narrow","nasty","natural","naughty","nautical","near","neat","necessary","negligible","neighboring","nervous","new","next","nice","nifty","nimble","nippy","nocturnal","noisy","nonstop","normal","notable","noted","noteworthy","novel","numb","nutritious","nutty","obedient","oblong","oily","oblong","obvious","occasional","odd","oddball","offbeat","offensive","official","old","old-fashioned","only","open","optimal","optimistic","opulent","orange","orderly","organic","ornate","ornery","ordinary","original","other","our","outlying","outgoing","outlandish","outrageous","outstanding","oval","overcooked","overdue","overjoyed","overlooked","palatable","pale","paltry","parallel","parched","partial","passionate","past","pastel","peaceful","peppery","perfect","perfumed","periodic","perky","personal","pertinent","pesky","pessimistic","petty","phony","physical","piercing","pink","pitiful","plain","plaintive","plastic","playful","pleasant","pleased","pleasing","plump","plush","polished","polite","political","pointed","pointless","poised","poor","popular","portly","posh","positive","possible","potable","powerful","powerless","practical","precious","present","prestigious","pretty","precious","previous","pricey","prickly","primary","prime","pristine","private","prize","probable","productive","profitable","profuse","proper","proud","prudent","punctual","pungent","puny","pure","purple","pushy","puzzled","puzzling","quaint","qualified","quarrelsome","quarterly","queasy","querulous","questionable","quick","quick-witted","quiet","quintessential","quirky","quixotic","quizzical","radiant","ragged","rapid","rare","rash","raw","recent","reckless","rectangular","ready","real","realistic","reasonable","red","reflecting","regal","regular","reliable","relieved","remarkable","remorseful","remote","repentant","required","respectful","responsible","repulsive","revolving","rewarding","rich","rigid","right","ringed","ripe","roasted","robust","rosy","rotating","rotten","rough","round","rowdy","royal","rubbery","rundown","ruddy","runny","rural","rusty","sad","safe","salty","same","sandy","sane","sarcastic","sardonic","satisfied","scaly","scarce","scared","scary","scented","scholarly","scientific","scratchy","scrawny","second","secondary","second-hand","secret","self-assured","self-reliant","selfish","sentimental","separate","serene","serious","serpentine","several","severe","shabby","shadowy","shady","shallow","shameful","shameless","sharp","shimmering","shiny","shocked","shocking","shoddy","short","short-term","showy","shrill","shy","sick","silent","silky","silly","silver","similar","simple","simplistic","sinful","single","sizzling","skeletal","skinny","sleepy","slight","slim","slimy","slippery","slow","slushy","small","smart","smoggy","smooth","smug","snappy","snarling","sneaky","sniveling","snoopy","sociable","soft","soggy","solid","somber","some","spherical","sophisticated","sore","sorrowful","soulful","soupy","sour","Spanish","sparkling","sparse","specific","spectacular","speedy","spicy","spiffy","spirited","spiteful","splendid","spotless","spotted","spry","square","squeaky","squiggly","stable","staid","stained","stale","standard","starchy","stark","starry","steep","sticky","stiff","stimulating","stingy","stormy","straight","strange","steel","strict","strident","striking","striped","strong","studious","stunning","stupendous","sturdy","stylish","subdued","submissive","substantial","subtle","suburban","sudden","sugary","sunny","super","superb","superficial","superior","supportive","sure-footed","surprised","suspicious","svelte","sweet","sweltering","swift","sympathetic","tall","talkative","tame","tan","tangible","tart","tasty","tattered","taut","tedious","teeming","tempting","tender","tense","tepid","terrible","terrific","testy","thankful","that","these","thick","thin","third","thirsty","this","thorough","thorny","those","thoughtful","threadbare","thrifty","thunderous","tidy","tight","timely","tinted","tiny","tired","torn","total","tough","traumatic","treasured","tremendous","tragic","trained","tremendous","triangular","tricky","trifling","trim","trivial","troubled","true","trusting","trustworthy","trusty","truthful","tubby","turbulent","twin","ugly","ultimate","unacceptable","unaware","uncomfortable","uncommon","unconscious","understated","unequaled","uneven","unfinished","unfit","unfolded","unfortunate","unhappy","unhealthy","uniform","unimportant","unique","united","unkempt","unknown","unlawful","unlined","unlucky","unnatural","unpleasant","unrealistic","unripe","unruly","unselfish","unsightly","unsteady","unsung","untidy","untimely","untried","untrue","unused","unusual","unwelcome","unwieldy","unwilling","unwitting","unwritten","upbeat","upright","upset","urban","usable","used","useful","useless","utilized","utter","vacant","vague","vain","valid","valuable","vapid","variable","vast","velvety","venerated","vengeful","verifiable","vibrant","vicious","victorious","vigilant","vigorous","villainous","violet","violent","virtual","virtuous","visible","vital","vivacious","vivid","voluminous","wan","warlike","warm","warmhearted","warped","wary","wasteful","watchful","waterlogged","watery","wavy","wealthy","weak","weary","webbed","wee","weekly","weepy","weighty","weird","welcome","well-documented","well-groomed","well-informed","well-lit","well-made","well-off","well-to-do","well-worn","wet","which","whimsical","whirlwind","whispered","white","whole","whopping","wicked","wide","wide-eyed","wiggly","wild","willing","wilted","winding","windy","winged","wiry","wise","witty","wobbly","woeful","wonderful","wooden","woozy","wordy","worldly","worn","worried","worrisome","worse","worst","worthless","worthwhile","worthy","wrathful","wretched","writhing","wrong","wry","yawning","yearly","yellow","yellowish","young","youthful","yummy","zany","zealous","zesty","zigzag","rocky"],Et=["people","history","way","art","world","information","map","family","government","health","system","computer","meat","year","thanks","music","person","reading","method","data","food","understanding","theory","law","bird","literature","problem","software","control","knowledge","power","ability","economics","love","internet","television","science","library","nature","fact","product","idea","temperature","investment","area","society","activity","story","industry","media","thing","oven","community","definition","safety","quality","development","language","management","player","variety","video","week","security","country","exam","movie","organization","equipment","physics","analysis","policy","series","thought","basis","boyfriend","direction","strategy","technology","army","camera","freedom","paper","environment","child","instance","month","truth","marketing","university","writing","article","department","difference","goal","news","audience","fishing","growth","income","marriage","user","combination","failure","meaning","medicine","philosophy","teacher","communication","night","chemistry","disease","disk","energy","nation","road","role","soup","advertising","location","success","addition","apartment","education","math","moment","painting","politics","attention","decision","event","property","shopping","student","wood","competition","distribution","entertainment","office","population","president","unit","category","cigarette","context","introduction","opportunity","performance","driver","flight","length","magazine","newspaper","relationship","teaching","cell","dealer","debate","finding","lake","member","message","phone","scene","appearance","association","concept","customer","death","discussion","housing","inflation","insurance","mood","woman","advice","blood","effort","expression","importance","opinion","payment","reality","responsibility","situation","skill","statement","wealth","application","city","county","depth","estate","foundation","grandmother","heart","perspective","photo","recipe","studio","topic","collection","depression","imagination","passion","percentage","resource","setting","ad","agency","college","connection","criticism","debt","description","memory","patience","secretary","solution","administration","aspect","attitude","director","personality","psychology","recommendation","response","selection","storage","version","alcohol","argument","complaint","contract","emphasis","highway","loss","membership","possession","preparation","steak","union","agreement","cancer","currency","employment","engineering","entry","interaction","limit","mixture","preference","region","republic","seat","tradition","virus","actor","classroom","delivery","device","difficulty","drama","election","engine","football","guidance","hotel","match","owner","priority","protection","suggestion","tension","variation","anxiety","atmosphere","awareness","bread","climate","comparison","confusion","construction","elevator","emotion","employee","employer","guest","height","leadership","mall","manager","operation","recording","respect","sample","transportation","boring","charity","cousin","disaster","editor","efficiency","excitement","extent","feedback","guitar","homework","leader","mom","outcome","permission","presentation","promotion","reflection","refrigerator","resolution","revenue","session","singer","tennis","basket","bonus","cabinet","childhood","church","clothes","coffee","dinner","drawing","hair","hearing","initiative","judgment","lab","measurement","mode","mud","orange","poetry","police","possibility","procedure","queen","ratio","relation","restaurant","satisfaction","sector","signature","significance","song","tooth","town","vehicle","volume","wife","accident","airport","appointment","arrival","assumption","baseball","chapter","committee","conversation","database","enthusiasm","error","explanation","farmer","gate","girl","hall","historian","hospital","injury","instruction","maintenance","manufacturer","meal","perception","pie","poem","presence","proposal","reception","replacement","revolution","river","son","speech","tea","village","warning","winner","worker","writer","assistance","breath","buyer","chest","chocolate","conclusion","contribution","cookie","courage","desk","drawer","establishment","examination","garbage","grocery","honey","impression","improvement","independence","insect","inspection","inspector","king","ladder","menu","penalty","piano","potato","profession","professor","quantity","reaction","requirement","salad","sister","supermarket","tongue","weakness","wedding","affair","ambition","analyst","apple","assignment","assistant","bathroom","bedroom","beer","birthday","celebration","championship","cheek","client","consequence","departure","diamond","dirt","ear","fortune","friendship","funeral","gene","girlfriend","hat","indication","intention","lady","midnight","negotiation","obligation","passenger","pizza","platform","poet","pollution","recognition","reputation","shirt","speaker","stranger","surgery","sympathy","tale","throat","trainer","uncle","youth","time","work","film","water","money","example","while","business","study","game","life","form","air","day","place","number","part","field","fish","back","process","heat","hand","experience","job","book","end","point","type","home","economy","value","body","market","guide","interest","state","radio","course","company","price","size","card","list","mind","trade","line","care","group","risk","word","fat","force","key","light","training","name","school","top","amount","level","order","practice","research","sense","service","piece","web","boss","sport","fun","house","page","term","test","answer","sound","focus","matter","kind","soil","board","oil","picture","access","garden","range","rate","reason","future","site","demand","exercise","image","case","cause","coast","action","age","bad","boat","record","result","section","building","mouse","cash","class","period","plan","store","tax","side","subject","space","rule","stock","weather","chance","figure","man","model","source","beginning","earth","program","chicken","design","feature","head","material","purpose","question","rock","salt","act","birth","car","dog","object","scale","sun","note","profit","rent","speed","style","war","bank","craft","half","inside","outside","standard","bus","exchange","eye","fire","position","pressure","stress","advantage","benefit","box","frame","issue","step","cycle","face","item","metal","paint","review","room","screen","structure","view","account","ball","discipline","medium","share","balance","bit","black","bottom","choice","gift","impact","machine","shape","tool","wind","address","average","career","culture","morning","pot","sign","table","task","condition","contact","credit","egg","hope","ice","network","north","square","attempt","date","effect","link","post","star","voice","capital","challenge","friend","self","shot","brush","couple","exit","front","function","lack","living","plant","plastic","spot","summer","taste","theme","track","wing","brain","button","click","desire","foot","gas","influence","notice","rain","wall","base","damage","distance","feeling","pair","savings","staff","sugar","target","text","animal","author","budget","discount","file","ground","lesson","minute","officer","phase","reference","register","sky","stage","stick","title","trouble","bowl","bridge","campaign","character","club","edge","evidence","fan","letter","lock","maximum","novel","option","pack","park","quarter","skin","sort","weight","baby","background","carry","dish","factor","fruit","glass","joint","master","muscle","red","strength","traffic","trip","vegetable","appeal","chart","gear","ideal","librarychen","land","log","mother","net","party","principle","relative","sale","season","signal","spirit","street","tree","wave","belt","bench","commission","copy","drop","minimum","path","progress","project","sea","south","status","stuff","ticket","tour","angle","blue","breakfast","confidence","daughter","degree","doctor","dot","dream","duty","essay","father","fee","finance","hour","juice","luck","milk","mouth","peace","pipe","stable","storm","substance","team","trick","afternoon","bat","beach","blank","catch","chain","consideration","cream","crew","detail","gold","interview","kid","mark","mission","pain","pleasure","score","screw","sex","shop","shower","suit","tone","window","agent","band","bath","block","bone","calendar","candidate","cap","coat","contest","corner","court","cup","district","door","east","finger","garage","guarantee","hole","hook","implement","layer","lecture","lie","manner","meeting","nose","parking","partner","profile","rice","routine","schedule","swimming","telephone","tip","winter","airline","bag","battle","bed","bill","bother","cake","code","curve","designer","dimension","dress","ease","emergency","evening","extension","farm","fight","gap","grade","holiday","horror","horse","host","husband","loan","mistake","mountain","nail","noise","occasion","package","patient","pause","phrase","proof","race","relief","sand","sentence","shoulder","smoke","stomach","string","tourist","towel","vacation","west","wheel","wine","arm","aside","associate","bet","blow","border","branch","breast","brother","buddy","bunch","chip","coach","cross","document","draft","dust","expert","floor","god","golf","habit","iron","judge","knife","landscape","league","mail","mess","native","opening","parent","pattern","pin","pool","pound","request","salary","shame","shelter","shoe","silver","tackle","tank","trust","assist","bake","bar","bell","bike","blame","boy","brick","chair","closet","clue","collar","comment","conference","devil","diet","fear","fuel","glove","jacket","lunch","monitor","mortgage","nurse","pace","panic","peak","plane","reward","row","sandwich","shock","spite","spray","surprise","till","transition","weekend","welcome","yard","alarm","bend","bicycle","bite","blind","bottle","cable","candle","clerk","cloud","concert","counter","flower","grandfather","harm","knee","lawyer","leather","load","mirror","neck","pension","plate","purple","ruin","ship","skirt","slice","snow","specialist","stroke","switch","trash","tune","zone","anger","award","bid","bitter","boot","bug","camp","candy","carpet","cat","champion","channel","clock","comfort","cow","crack","engineer","entrance","fault","grass","guy","hell","highlight","incident","island","joke","jury","leg","lip","mate","motor","nerve","passage","pen","pride","priest","prize","promise","resident","resort","ring","roof","rope","sail","scheme","script","sock","station","toe","tower","truck","witness","can","will","other","use","make","good","look","help","go","great","being","still","public","read","keep","start","give","human","local","general","specific","long","play","feel","high","put","common","set","change","simple","past","big","possible","particular","major","personal","current","national","cut","natural","physical","show","try","check","second","call","move","pay","let","increase","single","individual","turn","ask","buy","guard","hold","main","offer","potential","professional","international","travel","cook","alternative","special","working","whole","dance","excuse","cold","commercial","low","purchase","deal","primary","worth","fall","necessary","positive","produce","search","present","spend","talk","creative","tell","cost","drive","green","support","glad","remove","return","run","complex","due","effective","middle","regular","reserve","independent","leave","original","reach","rest","serve","watch","beautiful","charge","active","break","negative","safe","stay","visit","visual","affect","cover","report","rise","walk","white","junior","pick","unique","classic","final","lift","mix","private","stop","teach","western","concern","familiar","fly","official","broad","comfortable","gain","rich","save","stand","young","heavy","lead","listen","valuable","worry","handle","leading","meet","release","sell","finish","normal","press","ride","secret","spread","spring","tough","wait","brown","deep","display","flow","hit","objective","shoot","touch","cancel","chemical","cry","dump","extreme","push","conflict","eat","fill","formal","jump","kick","opposite","pass","pitch","remote","total","treat","vast","abuse","beat","burn","deposit","print","raise","sleep","somewhere","advance","consist","dark","double","draw","equal","fix","hire","internal","join","sensitive","tap","win","attack","claim","constant","drag","drink","guess","minor","pull","raw","soft","solid","wear","weird","wonder","annual","count","dead","doubt","feed","forever","impress","repeat","round","sing","slide","strip","wish","combine","command","dig","divide","equivalent","hang","hunt","initial","march","mention","spiritual","survey","tie","adult","brief","crazy","escape","gather","hate","prior","repair","rough","sad","scratch","sick","strike","employ","external","hurt","illegal","laugh","lay","mobile","nasty","ordinary","respond","royal","senior","split","strain","struggle","swim","train","upper","wash","yellow","convert","crash","dependent","fold","funny","grab","hide","miss","permit","quote","recover","resolve","roll","sink","slip","spare","suspect","sweet","swing","twist","upstairs","usual","abroad","brave","calm","concentrate","estimate","grand","male","mine","prompt","quiet","refuse","regret","reveal","rush","shake","shift","shine","steal","suck","surround","bear","brilliant","dare","dear","delay","drunk","female","hurry","inevitable","invite","kiss","neat","pop","punch","quit","reply","representative","resist","rip","rub","silly","smile","spell","stretch","tear","temporary","tomorrow","wake","wrap","yesterday"];var Ft=(i,e,t)=>{if(i&&clearTimeout(i),e&&t)return setTimeout(e,t)},Dt=i=>async(...e)=>{await Promise.resolve(),i(...e)},Tt=(i,e)=>{setTimeout(i,e??0)};var{logFactory:rr,Paths:Bt}=te;var At=import.meta.url.split("/").slice(0,-1).join("/");Bt.setRoot(At);export{P as Arc,ve as Chef,q as Composer,I as DataStore,N as Decorator,u as EventEmitter,w as Host,k as Parser,x as ParticleCook,Bt as Paths,h as Runtime,z as Store,we as Surface,dt as fetchParticleCode,xt as initVanilla,rr as logFactory,ht as maybeFetchParticleCode,X as pathForKind,E as requireParticleBaseCode,xe as requireParticleImplCode,te as utils};
//# sourceMappingURL=arcs.min.js.map
