{
  "version": 3,
  "sources": ["../../../core/js/core/Particle.js", "../../../core/js/core/EventEmitter.js", "../../../core/js/utils/types.js", "../../../core/js/utils/log.js", "../../../core/js/core/Arc.js", "../../../core/js/utils/object.js", "../../../core/js/utils/rand.js", "../../../core/js/core/Decorator.js", "../../../core/js/core/Host.js", "../../../core/js/core/Store.js", "../../../core/js/utils/id.js", "../../../core/js/Runtime.js", "../../../core/js/recipe/RecipeParser.js", "../../../core/js/utils/matching.js", "../../../core/js/recipe/StoreCook.js", "../../../core/js/recipe/ParticleCook.js", "../../../core/js/recipe/Chef.js", "../../../core/js/utils/paths.js", "../../../core/js/isolation/code.js", "../../../core/js/isolation/vanilla.js", "../../../core/js/utils/utils.js", "../../../core/js/utils/date.js", "../../../core/js/utils/task.js", "../../../core/src/arcs.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/*\n * PSA: code in this file is subject to isolation restrictions, including runtime processing.\n * Particle module interfaces with 3p code, and is often loaded into isolation contexts.\n**/\nconst { create, assign, keys, values, entries, defineProperty, setPrototypeOf } = Object;\nconst scope = globalThis['scope'] ?? {};\nconst { log, timeout } = scope;\nconst nob = () => create(null);\n// yay lambda, he gets a semi-colon ... named classes not so much\nconst storePrototype = new class {\n    get empty() {\n        return this.length === 0;\n    }\n    get data() {\n        return this;\n    }\n    get pojo() {\n        return this.data;\n    }\n    get json() {\n        return JSON.stringify(this.pojo);\n    }\n    get pretty() {\n        return JSON.stringify(this.pojo, null, '  ');\n    }\n    get keys() {\n        return keys(this.data);\n    }\n    get length() {\n        return keys(this.data).length;\n    }\n    get values() {\n        return values(this.data);\n    }\n    get entries() {\n        return entries(this.data);\n    }\n    set(key, value) {\n        this.data[key] = value;\n    }\n    setByIndex(index, value) {\n        this.data[this.keys[index]] = value;\n    }\n    add(...values) {\n        values.forEach(value => this.data[scope.makeKey()] = value);\n    }\n    push(...values) {\n        this.add(...values);\n    }\n    remove(value) {\n        entries(this.data).find(([key, entry]) => {\n            if (entry === value) {\n                delete this.data[key];\n                return true;\n            }\n        });\n    }\n    has(key) {\n        return this.data[key] !== undefined;\n    }\n    get(key) {\n        return this.getByKey(key);\n    }\n    getByKey(key) {\n        return this.data[key];\n    }\n    getByIndex(index) {\n        return this.data[this.keys[index]];\n    }\n    delete(key) {\n        delete this.data[key];\n    }\n    deleteByIndex(index) {\n        delete this.data[this.keys[index]];\n    }\n    assign(dictionary) {\n        assign(this.data, dictionary);\n    }\n    map(mapFunc) {\n        return this.values.map(mapFunc);\n    }\n    toString() {\n        return this.pretty;\n    }\n};\n/**\n * ParticleAPI functions are called at various points in the particle's lifecycle.\n * Developers should override these functions as needed to give a particle\n * functionality.\n */\nexport class ParticleApi {\n    /**\n     * Particles that render on a surface should provide a template. The template\n     * can include double curly bracketed keys that will be interpolated at\n     * runtime.\n     *\n     * To dynamically change the template, we double curly braced keys must be\n     * the only thing inside a div or span:\n     * ```\n     * <span>{{key}}</span>.\n     * <div>{{key}}</div>\n     * ```\n     *\n     * The value for each key is returned from the {@link render | render method}.\n     *\n     * Double curly bracketed keys can also be placed inside div definitions to\n     * change attributes. In this instance we place them inside quotation marks.\n     * For example:\n     * ```\n     * <div class=\u201D{{classKey}}\" hidden=\"{{hideKey}}\">\n     * ```\n     */\n    get template() {\n        return null;\n    }\n    /**\n     * shouldUpdate returns a boolean that indicates if runtime should update\n     * when inputs or state change.\n     *\n     * This function can be overwritten to implement the desired\n     * behaviour.\n     *\n     * @param inputs\n     * @param state\n     *\n     * @returns a boolean to indicate if updates should be allowed.\n     */\n    shouldUpdate(inputs, state) {\n        return true;\n    }\n    /**\n     * Update is called anytime an input to the particle changes.\n     *\n     * This function can be overwritten to implement the desired\n     * behaviour.\n     *\n     * Inputs are the stores the particle is bound to.\n     * State is an object that can be changed and passed to sub-functions.\n     * Tools allow the particle to perform supervised activities -\n     * for example services are a tool.\n     *\n     * The update function can return an object containing the new desired\n     * value(s) for the stores. For example, if we wanted to update the\n     * `Person` and `Address` stores we would return:\n     *\n     * ```\n     * return {\n     *   Person: 'Jane Smith',\n     *   Address: '123 Main Street'\n     * };\n     * ```\n     *\n     * @param inputs\n     * @param state\n     * @param tools\n     *\n     * @returns [OPTIONAL] object containing store to value mappings\n     */\n    async update(inputs, state, tools) {\n        return null;\n    }\n    /**\n     * shouldRender returns a boolean that indicates if runtime should\n     * render the template.\n     *\n     * This function can be overwritten to implement the desired\n     * behaviour.\n     *\n     * @param inputs\n     * @param state\n     *\n     * @returns a boolean to indicate if the template should be re-rendered.\n     */\n    shouldRender(inputs, state) {\n        return true;\n    }\n    /**\n     * Render returns an object that contains the key: value pairings\n     * that will be interpolated into the {@link template | template}.\n     * For example, if the template contained keys `class`,\n     * `hideDiv`, and `displayTxt` we could return:\n     * ```\n     * {\n     *   class: 'title`,\n     *   hideDiv: false,\n     *   displayTxt: \"My Page's Title\"\n     * }\n     * ```\n     *\n     * This functions can be overwritten to return the desired\n     * values.\n     *\n     * @param inputs\n     * @param state\n     */\n    render(inputs, state) {\n        return null;\n    }\n}\nconst privateProperty = initialValue => {\n    let value = initialValue;\n    return { get: () => value, set: v => value = v };\n};\nexport class Particle {\n    pipe;\n    impl;\n    internal;\n    constructor(proto, pipe, beStateful) {\n        this.pipe = pipe;\n        this.impl = create(proto);\n        defineProperty(this, 'internal', privateProperty(nob()));\n        this.internal.$busy = 0;\n        //if (beStateful) {\n        this.internal.beStateful = true;\n        this.internal.state = nob();\n        //}\n    }\n    get log() {\n        return this.pipe?.log || log;\n    }\n    get template() {\n        return this.impl?.template;\n    }\n    get config() {\n        return {\n            template: this.template\n        };\n    }\n    // set-trap for inputs, so we can do work when inputs change\n    set inputs(inputs) {\n        //this.log(inputs);\n        this.internal.inputs = inputs;\n        this.invalidateInputs();\n    }\n    get inputs() {\n        return this.internal.inputs;\n    }\n    get state() {\n        return this.internal.state;\n    }\n    async service(request) {\n        return this.pipe?.service?.(request);\n    }\n    invalidateInputs() {\n        this.invalidate();\n    }\n    // validate after the next microtask\n    invalidate() {\n        if (!this.internal.validator) {\n            //this.internal.validator = this.async(this.validate);\n            this.internal.validator = timeout(this.validate.bind(this), 1);\n        }\n    }\n    // call fn after a microtask boundary\n    async(fn) {\n        return Promise.resolve().then(fn.bind(this));\n    }\n    // activate particle lifecycle\n    async validate() {\n        //this.log('validate');\n        if (this.internal.validator) {\n            // try..finally to ensure we nullify `validator`\n            try {\n                this.internal.$validateAfterBusy = this.internal.$busy;\n                if (!this.internal.$busy) {\n                    // if we're not stateful\n                    if (!this.internal.beStateful) {\n                        // then it's a fresh state every validation\n                        this.internal.state = nob();\n                    }\n                    // inputs are immutable (changes to them are ignored)\n                    this.internal.inputs = this.validateInputs();\n                    // let the impl decide what to do\n                    await this.maybeUpdate();\n                }\n            }\n            catch (e) {\n                log.error(e);\n            }\n            // nullify validator _after_ methods so state changes don't reschedule validation\n            this.internal.validator = null;\n        }\n    }\n    validateInputs() {\n        // shallow-clone our input dictionary\n        const inputs = assign(nob(), this.inputs);\n        // for each input, try to provide prototypical helpers\n        entries(inputs).forEach(([key, value]) => {\n            if (value && (typeof value === 'object')) {\n                if (!Array.isArray(value)) {\n                    value = setPrototypeOf({ ...value }, storePrototype);\n                }\n                inputs[key] = value;\n            }\n        });\n        //return harden(inputs);\n        return inputs;\n    }\n    implements(methodName) {\n        return typeof this.impl?.[methodName] === 'function';\n    }\n    async maybeUpdate() {\n        if (await this.checkInit()) {\n            if (!this.canUpdate()) {\n                // we might want to render even if we don't update,\n                // if we `outputData` the system will add render models\n                this.outputData(null);\n            }\n            if (await this.shouldUpdate(this.inputs, this.state)) {\n                this.update();\n            }\n        }\n    }\n    async checkInit() {\n        if (!this.internal.initialized) {\n            this.internal.initialized = true;\n            if (this.implements('initialize')) {\n                await this.asyncMethod(this.impl.initialize);\n            }\n        }\n        return true;\n    }\n    canUpdate() {\n        return this.implements('update');\n    }\n    async shouldUpdate(inputs, state) {\n        //return true;\n        // not implementing `shouldUpdate`, means the value should always be true\n        // TODO(sjmiles): this violates our 'false by default' convention, but the\n        // naming is awkward: `shouldNotUpdate`? `preventUpdate`?\n        return !this.impl?.shouldUpdate || (await this.impl.shouldUpdate(inputs, state) !== false);\n    }\n    update() {\n        this.asyncMethod(this.impl?.update);\n    }\n    outputData(data) {\n        this.pipe?.output?.(data, this.maybeRender());\n    }\n    maybeRender() {\n        //this.log('maybeRender');\n        if (this.template) {\n            const { inputs, state } = this.internal;\n            if (this.impl?.shouldRender?.(inputs, state) !== false) {\n                //this.log('render');\n                if (this.implements('render')) {\n                    return this.impl.render(inputs, state);\n                }\n                else {\n                    return { ...inputs, ...state };\n                }\n            }\n        }\n    }\n    async handleEvent({ handler, data }) {\n        const onhandler = this.impl?.[handler];\n        if (onhandler) {\n            this.internal.inputs.eventlet = data;\n            await this.asyncMethod(onhandler.bind(this.impl), { eventlet: data });\n            this.internal.inputs.eventlet = null;\n        }\n        else {\n            //console.log(`[${this.id}] event handler [${handler}] not found`);\n        }\n    }\n    async asyncMethod(asyncMethod, injections) {\n        if (asyncMethod) {\n            const { inputs, state } = this.internal;\n            const stdlib = {\n                service: async (request) => this.service(request),\n                invalidate: () => this.invalidate(),\n                output: async (data) => this.outputData(data)\n            };\n            const task = asyncMethod.bind(this.impl, inputs, state, { ...stdlib, ...injections });\n            this.outputData(await this.try(task));\n            if (!this.internal.$busy && this.internal.$validateAfterBusy) {\n                this.invalidate();\n            }\n        }\n    }\n    async try(asyncFunc) {\n        this.internal.$busy++;\n        try {\n            return await asyncFunc();\n        }\n        catch (e) {\n            log.error(e);\n        }\n        finally {\n            this.internal.$busy--;\n        }\n    }\n}\nscope.harden(globalThis);\nscope.harden(Particle);\n// log('Any leaked values? Must pass three tests:');\n// try { globalThis['sneaky'] = 42; } catch(x) { log('sneaky test: pass'); }\n// try { Particle['foo'] = 42; } catch(x) { log('Particle.foo test: pass'); }\n// try { log['foo'] = 42; } catch(x) { log('log.foo test: pass'); };\nParticle;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport class EventEmitter {\n    // map of event name to listener array\n    listeners = {};\n    getEventListeners(eventName) {\n        return this.listeners[eventName] || (this.listeners[eventName] = []);\n    }\n    fire(eventName, ...args) {\n        const listeners = this.getEventListeners(eventName);\n        if (listeners?.forEach) {\n            listeners.forEach(listener => listener(...args));\n        }\n    }\n    listen(eventName, listener, listenerName) {\n        const listeners = this.getEventListeners(eventName);\n        listeners.push(listener);\n        listener._name = listenerName || '(unnamed listener)';\n        return listener;\n    }\n    unlisten(eventName, listener) {\n        const list = this.getEventListeners(eventName);\n        const index = (typeof listener === 'string') ? list.findIndex(l => l._name === listener) : list.indexOf(listener);\n        if (index >= 0) {\n            list.splice(index, 1);\n        }\n        else {\n            console.warn('failed to unlisten from', eventName);\n        }\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const logKinds = ['log', 'group', 'groupCollapsed', 'groupEnd', 'dir'];\nexport const errKinds = ['warn', 'error'];\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logKinds, errKinds } from './types.js';\nconst { fromEntries } = Object;\nconst _logFactory = (enable, preamble, bg, color, kind = 'log') => {\n    if (!enable) {\n        return () => { };\n    }\n    if (kind === 'dir') {\n        return console.dir.bind(console);\n    }\n    const style = `background: ${bg || 'gray'}; color: ${color || 'white'}; padding: 1px 6px 2px 7px; border-radius: 6px 0 0 6px;`;\n    return console[kind].bind(console, `%c${preamble}`, style);\n};\nexport const logFactory = (enable, preamble, bg = '', color = '') => {\n    const debugLoggers = fromEntries(logKinds.map(kind => [kind, _logFactory(enable, preamble, bg, color, kind)]));\n    const errorLoggers = fromEntries(errKinds.map(kind => [kind, _logFactory(true, preamble, bg, color, kind)]));\n    const loggers = { ...debugLoggers, ...errorLoggers };\n    // Inject `log` as default, keeping all loggers available to be invoked by name.\n    const log = loggers.log;\n    Object.assign(log, loggers);\n    return log;\n};\nlogFactory.flags = globalThis.config?.logFlags || {};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { EventEmitter } from './EventEmitter.js';\nimport { logFactory } from '../utils/log.js';\nconst customLogFactory = (id) => logFactory(logFactory.flags.arc, `Arc (${id})`, 'slateblue');\nconst { assign, keys, entries, create } = Object;\nconst values = (o) => Object.values(o);\nconst nob = () => create(null);\nexport class Arc extends EventEmitter {\n    log;\n    id;\n    meta;\n    stores;\n    hosts;\n    surface;\n    composer;\n    hostService;\n    constructor(id, meta, surface) {\n        super();\n        this.id = id;\n        this.meta = meta;\n        this.surface = surface;\n        this.hosts = nob();\n        this.stores = nob();\n        this.log = customLogFactory(id);\n    }\n    async addHost(host, surface) {\n        // to support hosts we need a composer\n        await this.ensureComposer();\n        // bookkeep\n        this.hosts[host.id] = host;\n        host.arc = this;\n        // TODO(sjmiles): support per host surfacing?\n        //await host.bindToSurface(surface ?? this.surface);\n        // begin work\n        this.updateHost(host);\n        return host;\n    }\n    async ensureComposer() {\n        if (!this.composer && this.surface) {\n            // create composer\n            this.composer = await this.surface.createComposer('root');\n            // pipeline for events from composer to this.onevent\n            // TODO(sjmiles): use 'bind' to avoid a closure and improve the stack trace\n            this.composer.onevent = this.onevent.bind(this);\n        }\n    }\n    rerender() {\n        values(this.hosts).forEach(h => h.rerender());\n    }\n    removeHost(id) {\n        this.hosts[id]?.detach();\n        delete this.hosts[id];\n    }\n    addStore(storeId, store) {\n        if (store && !this.stores[storeId]) {\n            this.stores[storeId] = store;\n            store.listen('change', () => this.storeChanged(storeId, store), this.id);\n        }\n    }\n    removeStore(storeId) {\n        const store = this.stores[storeId];\n        if (store) {\n            store.unlisten('change', this.id);\n        }\n        delete this.stores[storeId];\n    }\n    // TODO(sjmiles): 2nd param is used in overrides, make explicit\n    storeChanged(storeId, store) {\n        this.log(`storeChanged: \"${storeId}\"`);\n        const isBound = inputs => inputs && inputs.some(input => values(input)[0] == storeId || keys(input)[0] == storeId);\n        values(this.hosts).forEach(host => {\n            const inputs = host.meta?.inputs;\n            if (inputs === '*' || isBound(inputs)) {\n                this.log(`host \"${host.id}\" has interest in \"${storeId}\"`);\n                // TODO(sjmiles): we only have to update inputs for storeId, we lose efficiency here\n                this.updateHost(host);\n            }\n        });\n        this.fire('store-changed', storeId);\n    }\n    updateParticleMeta(hostId, meta) {\n        const host = this.hosts[hostId];\n        host.meta = meta;\n        this.updateHost(host);\n    }\n    updateHost(host) {\n        host.inputs = this.computeInputs(host);\n    }\n    // TODO(sjmiles): debounce? (update is sync-debounced already)\n    // complement to `assignOutputs`\n    computeInputs(host) {\n        const inputs = nob();\n        const inputBindings = host.meta?.inputs;\n        if (inputBindings === '*') {\n            // TODO(sjmiles): we could make the contract that the bindAll inputs are\n            // names (or names + meta) only. The Particle could look up values via\n            // service (to reduce throughput requirements)\n            entries(this.stores).forEach(([name, store]) => inputs[name] = store.pojo);\n        }\n        else {\n            const staticInputs = host.meta?.staticInputs;\n            assign(inputs, staticInputs);\n            if (inputBindings) {\n                inputBindings.forEach(input => this.computeInput(entries(input)[0], inputs));\n                this.log(`computeInputs(${host.id}) =`, inputs);\n            }\n        }\n        return inputs;\n    }\n    computeInput([name, binding], inputs) {\n        const storeName = binding || name;\n        const store = this.stores[storeName];\n        if (store) {\n            inputs[name] = store.pojo;\n        }\n        else {\n            this.log.warn(`computeInput: \"${storeName}\" (bound to \"${name}\") not found`);\n        }\n    }\n    // complement to `computeInputs`\n    assignOutputs({ id, meta }, outputs) {\n        const names = keys(outputs);\n        if (meta?.outputs && names.length) {\n            names.forEach(name => this.assignOutput(name, outputs[name], meta.outputs));\n            this.log(`[end][${id}] assignOutputs:`, outputs);\n        }\n    }\n    assignOutput(name, output, outputs) {\n        if (output !== undefined) {\n            const binding = this.findOutputByName(outputs, name) || name;\n            const store = this.stores[binding];\n            if (!store) {\n                if (outputs?.[name]) {\n                    this.log.warn(`assignOutputs: no \"${binding}\" store for output \"${name}\"`);\n                }\n            }\n            else {\n                // Note: users can mess up output data in any way they see fit, so we should\n                // probably invent `outputCleansing`.\n                this.log(`assignOutputs: \"${name}\" is dirty, updating Store \"${binding}\"`, output);\n                store.data = output;\n            }\n        }\n    }\n    findOutputByName(outputs, name) {\n        const output = outputs?.find(output => keys(output || 0)[0] === name);\n        if (output) {\n            return values(output)[0];\n        }\n    }\n    async render(packet) {\n        if (this.composer) {\n            this.composer.render(packet);\n        }\n        else {\n            //this.log.low('render called, but composer is null', packet);\n        }\n    }\n    onevent(pid, eventlet) {\n        const host = this.hosts[pid];\n        if (host) {\n            host.handleEvent(eventlet);\n        }\n    }\n    async service(host, request) {\n        let result = await this.surface?.service(request);\n        if (result === undefined) {\n            result = this.hostService?.(host, request);\n        }\n        return result;\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/*\n * update the fields of `obj` with the fields of `data`,\n * perturbing `obj` as little as possible (since it might be a magic proxy thing\n * like an Automerge document)\n */\nexport const shallowUpdate = (obj, data) => {\n    let result = data;\n    if (!data) {\n        //\n    }\n    else if (Array.isArray(data)) {\n        if (!Array.isArray(obj)) {\n            // TODO(sjmiles): eek, very perturbing to obj\n            obj = [];\n        }\n        for (let i = 0; i < data.length; i++) {\n            const value = data[i];\n            if (obj[i] !== value) {\n                obj[i] = value;\n            }\n        }\n        const overage = obj.length - data.length;\n        if (overage > 0) {\n            obj.splice(data.length, overage);\n        }\n    }\n    else if (typeof data === 'object') {\n        result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n        const seen = {};\n        // for each key in input data ...\n        Object.keys(data).forEach(key => {\n            // copy that data into output\n            result[key] = data[key];\n            // remember the key\n            seen[key] = true;\n        });\n        // for each key in the output data...\n        Object.keys(result).forEach(key => {\n            // if this key was not in the input, remove it\n            if (!seen[key]) {\n                delete result[key];\n            }\n        });\n    }\n    return result;\n};\nexport const shallowMerge = (obj, data) => {\n    if (data == null) {\n        return null;\n    }\n    if (typeof data === 'object') {\n        const result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n        Object.keys(data).forEach(key => result[key] = data[key]);\n        return result;\n    }\n    return data;\n};\nexport function deepCopy(datum) {\n    if (!datum) {\n        return datum;\n    }\n    else if (Array.isArray(datum)) {\n        // This is trivially type safe but tsc needs help\n        return datum.map(element => deepCopy(element));\n    }\n    else if (typeof datum === 'object') {\n        const clone = Object.create(null);\n        Object.entries(datum).forEach(([key, value]) => {\n            clone[key] = deepCopy(value);\n        });\n        return clone;\n    }\n    else {\n        return datum;\n    }\n}\nexport const deepEqual = (a, b) => {\n    const type = typeof a;\n    // must be same type to be equal\n    if (type !== typeof b) {\n        return false;\n    }\n    // we are `deep` because we recursively study object types\n    if (type === 'object' && a && b) {\n        const aProps = Object.getOwnPropertyNames(a);\n        const bProps = Object.getOwnPropertyNames(b);\n        // equal if same # of props, and no prop is not deepEqual\n        return (aProps.length == bProps.length) && !aProps.some(name => !deepEqual(a[name], b[name]));\n    }\n    // finally, perform simple comparison\n    return (a === b);\n};\nexport const deepUndefinedToNull = (obj) => {\n    if (obj === undefined) {\n        return null;\n    }\n    if (obj && (typeof obj === 'object')) {\n        // we are `deep` because we recursively study object types\n        const props = Object.getOwnPropertyNames(obj);\n        props.forEach(name => {\n            const prop = obj[name];\n            if (prop === undefined) {\n                delete obj[name];\n                //obj[name] = null;\n            }\n            else {\n                deepUndefinedToNull(prop);\n            }\n        });\n    }\n    return obj;\n};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nconst { floor, pow, random } = Math;\n// random n-digit number\nexport const key = (digits) => floor((1 + random() * 9) * pow(10, digits - 1));\n// random integer from [0..range)\nexport const irand = (range) => floor(random() * range);\n// random element from array\nexport const arand = (array) => array[irand(array.length)];\n// test if event has occured, where `probability` is between [0..1]\nexport const prob = (probability) => Boolean(random() < probability);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { deepCopy } from '../utils/object.js';\nconst log = logFactory(logFactory.flags.decorator, 'Decorator', 'plum');\nconst { values, entries } = Object;\nconst opaqueData = {};\nexport const Decorator = {\n    setOpaqueData(name, data) {\n        opaqueData[name] = data; //deepCopy(data);\n        return name;\n    },\n    getOpaqueData(name) {\n        return opaqueData[name];\n    },\n    maybeDecorateModel(model, particle) {\n        if (model && !Array.isArray(model)) {\n            // for each item in model, regardless of key\n            values(model).forEach((item) => {\n                // is an object?\n                if (item && (typeof item === 'object')) {\n                    // are there sub-models\n                    if (item['models']) {\n                        // the decorate this item\n                        log('applying decorator(s) to list:', item);\n                        this.maybeDecorateItem(item, particle);\n                    }\n                    else {\n                        // otherwise, check if there are sub-items to decorate\n                        if (model?.filter || model?.decorator || model?.collateBy) {\n                            log('scanning for lists in sub-model:', item);\n                            this.maybeDecorateModel(item, particle);\n                        }\n                    }\n                }\n            });\n        }\n        // possibly decorated model\n        return model;\n    },\n    maybeDecorateItem(item, particle) {\n        let models = (typeof item.models === 'string') ? this.getOpaqueData(item.models) : item.models;\n        if (models) {\n            // do a decorator\n            models = maybeDecorate(models, item.decorator, particle);\n            // do a filter\n            models = maybeFilter(models, item.filter, particle.impl);\n            // do a collator\n            models = maybeCollateBy(models, item);\n            // mutate items\n            item.models = models;\n            //console.log(JSON.stringify(models, null, '  '));\n        }\n    },\n};\nconst maybeDecorate = (models, decorator, particle) => {\n    decorator = particle.impl[decorator] ?? decorator;\n    const { inputs, state } = particle.internal;\n    if (decorator) {\n        // TODO(cromwellian): Could be expensive to do everything, store responsibility?\n        const immutableInputs = Object.freeze(deepCopy(inputs));\n        // we don't want the decorator to have access to mutable globals\n        const immutableState = Object.freeze(deepCopy(state));\n        // models become decorous\n        models = models.map(model => {\n            // use previously mutated data or initialize\n            // TODO(cromwellian): I'd like to do Object.freeze() here, also somehow not mutate the models inplace\n            // Possibly have setOpaqueData wrap the data so the privateData lives on the wrapper + internal immutable data\n            model.privateData = model.privateData || {};\n            // TODO(cromwellian): also could be done once during setOpaqueData() if we can track privateData differently\n            const immutableModel = Object.freeze(deepCopy(model));\n            const decorated = decorator(immutableModel, immutableInputs, immutableState);\n            // set new privateData from returned\n            model.privateData = decorated.privateData;\n            return { ...decorated, ...model, };\n        });\n        // sort (possible that all values undefined)\n        models.sort(sortByLc('sortKey'));\n        log('decoration was performed');\n    }\n    //models.forEach(model => delete model.privateData);\n    return models;\n};\nconst maybeFilter = (models, filter, impl) => {\n    filter = impl[filter] ?? filter;\n    if (filter && models) {\n        // models become filtrated\n        models = models.filter(filter);\n    }\n    return models;\n};\nconst maybeCollateBy = (models, item) => {\n    // construct requested sub-lists\n    entries(item).forEach(([name, collator]) => {\n        // generate named collations for items of the form `[name]: {collateBy}`\n        if (collator?.['collateBy']) {\n            // group the models into buckets based on the model-field named by `collateBy`\n            const collation = collate(models, collator['collateBy']);\n            models = collationToRenderModels(collation, name, collator['$template']);\n        }\n    });\n    return models;\n};\nconst sortByLc = key => (a, b) => sort(String(a[key]).toLowerCase(), String(b[key]).toLowerCase());\n//const sortBy = key => (a, b) => sort(a[key], b[key]);\nconst sort = (a, b) => a < b ? -1 : a > b ? 1 : 0;\nconst collate = (models, collateBy) => {\n    const collation = {};\n    models.forEach(model => {\n        const keyValue = model[collateBy];\n        if (keyValue) {\n            const category = collation[keyValue] || (collation[keyValue] = []);\n            category.push(model);\n        }\n    });\n    return collation;\n};\nconst collationToRenderModels = (collation, name, $template) => {\n    return entries(collation).map(([key, models]) => ({\n        key,\n        [name]: { models, $template },\n        single: !(models['length'] !== 1),\n        ...models?.[0]\n    }));\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { deepEqual, deepCopy } from '../utils/object.js';\nimport { arand } from '../utils/rand.js';\nimport { EventEmitter } from './EventEmitter.js';\nimport { Decorator } from './Decorator.js';\nconst { entries, keys } = Object;\nconst customLogFactory = (id) => logFactory(logFactory.flags.host, `Host (${id})`, arand(['#5a189a', '#51168b', '#48137b', '#6b2fa4', '#7b46ae', '#3f116c']));\n/**\n * Host owns metadata (e.g. `id`, `container`) that its Particle is not allowed to access.\n * Host knows how to talk, asynchronously, to its Particle (potentially using a bus).\n**/\n/* TODO(sjmiles):\nUpdate Cycle Documented Briefly\n1. when a Store changes it invokes it's listeners\n2. when an Arc hears a Store change, it updates Hosts bound to the Store\n3. Arc updates Host by creating an `inputs` object from Stores and metadata\n   - ignores fact inputs are accumulated\n   - ignores information about which Store has updated\n4. `inputs` object is assigned to `hosts.inputs` \uD83D\uDE43\n5. Host does an expensive `deepEqual` equality check. Turning on `host` logging should reveal `this.log('inputs are not interesting, skipping update');` if data is caught in this trap\n   - we can use reference testing here if we are more careful\n     about using immutable data\n6. the particle.inputs are assigned (but is really a *merge*)\n*/\nexport class Host extends EventEmitter {\n    arc;\n    id;\n    lastOutput;\n    lastPacket;\n    lastRenderModel;\n    log;\n    meta;\n    particle;\n    constructor(id) {\n        super();\n        this.log = customLogFactory(id);\n        this.id = id;\n    }\n    onevent(eventlet) {\n        this.arc?.onevent(eventlet);\n    }\n    // Particle and ParticleMeta are separate, host specifically integrates these on behalf of Particle\n    installParticle(particle, meta) {\n        if (this.particle) {\n            this.detachParticle();\n        }\n        if (particle) {\n            this.particle = particle;\n            this.meta = meta || this.meta;\n        }\n    }\n    get container() {\n        return this.meta?.container || 'root';\n    }\n    detach() {\n        this.detachParticle();\n        this.arc = null;\n    }\n    detachParticle() {\n        if (this.particle) {\n            this.render({ $clear: true });\n            this.particle = null;\n            this.meta = null;\n        }\n    }\n    async service(request) {\n        if (request?.decorate) {\n            return Decorator.maybeDecorateModel(request.model, this.particle);\n        }\n        return this.arc?.service(this, request);\n    }\n    output(outputModel, renderModel) {\n        if (outputModel) {\n            this.lastOutput = outputModel;\n            this.arc?.assignOutputs(this, outputModel);\n        }\n        if (this.template) {\n            Decorator.maybeDecorateModel(renderModel, this.particle);\n            this.lastRenderModel = { ...renderModel };\n            this.render(renderModel);\n        }\n    }\n    rerender() {\n        // does not re-render Frame/Slot content\n        // you probably want Arc::rerender\n        if (this.lastRenderModel) {\n            this.render(this.lastRenderModel);\n        }\n    }\n    render(model) {\n        const { id, container, template } = this;\n        const content = { model, template };\n        const packet = { id, container, content };\n        this.arc?.render(packet);\n        this.lastPacket = packet;\n    }\n    set inputs(inputs) {\n        if (this.particle && inputs) {\n            const lastInputs = this.particle.internal.inputs;\n            if (this.dirtyCheck(inputs, lastInputs, this.lastOutput)) {\n                this.particle.inputs = deepCopy({ ...this.meta?.staticInputs, ...inputs });\n                this.fire('inputs-changed');\n            }\n            else {\n                this.log('inputs are uninteresting, skipping update');\n            }\n        }\n    }\n    dirtyCheck(inputs, lastInputs, lastOutput) {\n        const dirtyBits = ([n, v]) => (lastOutput?.[n] && !deepEqual(lastOutput[n], v))\n            || !deepEqual(lastInputs?.[n], v);\n        return !lastInputs\n            || entries(inputs).length !== this.lastInputsLength(lastInputs)\n            || entries(inputs).some(dirtyBits);\n    }\n    lastInputsLength(lastInputs) {\n        return keys(lastInputs).filter(key => !this.meta?.staticInputs?.[key] && key !== 'eventlet').length;\n    }\n    get config() {\n        return this.particle?.config;\n    }\n    get template() {\n        return this.config?.template;\n    }\n    invalidate() {\n        this.particle?.invalidate();\n    }\n    handleEvent(eventlet) {\n        return this.particle?.handleEvent(eventlet);\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { EventEmitter } from './EventEmitter.js';\nconst { create, keys } = Object;\nconst { stringify, parse } = JSON;\nexport class DataStore extends EventEmitter {\n    privateData;\n    constructor() {\n        super();\n    }\n    setPrivateData(data) {\n        this.privateData = data;\n    }\n    set data(data) {\n        this.setPrivateData(data);\n    }\n    get data() {\n        return this.privateData;\n    }\n    toString() {\n        return this.pretty;\n    }\n    get isObject() {\n        return this.data && typeof this.data === 'object';\n    }\n    get pojo() {\n        return this.data;\n    }\n    get json() {\n        return stringify(this.data);\n    }\n    set json(json) {\n        let value = null;\n        try {\n            value = parse(json);\n        }\n        catch (x) {\n            //\n        }\n        this.data = value;\n    }\n    get pretty() {\n        const sorted = {};\n        const pojo = this.pojo;\n        keys(pojo).sort().forEach(key => sorted[key] = pojo[key]);\n        return stringify(sorted, null, '  ');\n    }\n}\nclass ObservableStore extends DataStore {\n    change(mutator) {\n        mutator(this);\n        this.doChange();\n    }\n    doChange() {\n        this.fire('change', this);\n        this.onChange(this);\n    }\n    onChange(store) {\n        // override\n    }\n    set data(data) {\n        this.change(self => self.setPrivateData(data));\n    }\n    // TODO(sjmiles): one of the compile/build/bundle tools\n    // evacipates the inherited getter, so we clone it\n    get data() {\n        return this['privateData'];\n    }\n    set(key, value) {\n        if (!this.data) {\n            this.setPrivateData(create(null));\n        }\n        if (value !== undefined) {\n            this.change(self => self.data[key] = value);\n        }\n        else {\n            this.delete(key);\n        }\n    }\n    delete(key) {\n        this.change(doc => delete doc.data[key]);\n    }\n}\nclass PersistableStore extends ObservableStore {\n    meta;\n    constructor(meta) {\n        super();\n        this.meta = { ...meta };\n    }\n    toString() {\n        return `${JSON.stringify(this.meta, null, '  ')}, ${this.pretty}`;\n    }\n    get tags() {\n        return this.meta.tags ?? (this.meta.tags = []);\n    }\n    is(...tags) {\n        // true if every member of `tags` is also in `this.tags`\n        return tags.every(tag => this.tags.includes(tag));\n    }\n    isCollection() {\n        return this.meta.type?.[0] === '[';\n    }\n    shouldPersist() {\n        return this.is('persisted') && !this.is('volatile');\n    }\n    async doChange() {\n        // do not await\n        this.persist();\n        return super.doChange();\n    }\n    // TODO(sjmiles): as of now the persist/restore methods\n    // are bound in Runtime:addStore\n    async persist() {\n    }\n    async restore( /*value: any*/) {\n    }\n    // delete() {\n    //   this.persistor?.remove(this);\n    // }\n    save() {\n        return this.json;\n    }\n    load(serial, defaultValue) {\n        let value = defaultValue;\n        try {\n            if (serial) {\n                value = parse(serial);\n            }\n        }\n        catch (x) {\n            //\n        }\n        if (value !== undefined) {\n            this.data = value;\n        }\n    }\n}\nexport class Store extends PersistableStore {\n}\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { irand } from \"./rand.js\";\nexport const makeId = (pairs, digits, delim) => {\n    pairs = pairs || 2;\n    digits = digits || 2;\n    delim = delim || '-';\n    const min = Math.pow(10, digits - 1);\n    const range = Math.pow(10, digits) - min;\n    const result = [];\n    for (let i = 0; i < pairs; i++) {\n        result.push(`${irand(range - min) + min}`);\n    }\n    return result.join(delim);\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { Arc } from './core/Arc.js';\nimport { Host } from './core/Host.js';\nimport { Store } from './core/Store.js';\nimport { EventEmitter } from './core/EventEmitter.js';\nimport { logFactory } from './utils/log.js';\nimport { makeId } from './utils/id.js';\nconst log = logFactory(logFactory.flags.runtime, 'runtime', '#873600');\nconst particleFactoryCache = {};\nconst storeFactories = {};\nconst { keys } = Object;\nexport class Runtime extends EventEmitter {\n    log;\n    uid; // user id\n    nid; // network id\n    arcs;\n    stores;\n    peers;\n    shares;\n    endpoint;\n    network;\n    surfaces;\n    persistor;\n    prettyUid;\n    static securityLockdown;\n    static particleIndustry;\n    static particleOptions;\n    constructor(uid) {\n        uid = uid || 'user';\n        super();\n        this.arcs = {};\n        this.surfaces = {};\n        this.stores = {};\n        this.peers = new Set();\n        this.shares = new Set();\n        this.setUid(uid);\n        this.log = logFactory(logFactory.flags.runtime, `runtime:[${this.prettyUid}]`, '#873600');\n        //Runtime.securityLockdown?.(Runtime.particleOptions);\n    }\n    setUid(uid) {\n        this.uid = uid;\n        this.nid = `${uid}:${makeId(1, 2)}`;\n        this.prettyUid = uid.substring(0, uid.indexOf('@') + 1) || uid;\n    }\n    async bootstrapArc(name, meta, surface, service) {\n        // make an arc on `surface`\n        const arc = new Arc(name, meta, surface);\n        // install service handler\n        arc.hostService = this.serviceFactory(service);\n        // add `arc` to runtime\n        await this.addArc(arc);\n        // fin\n        return arc;\n    }\n    serviceFactory(service) {\n        return async (host, request) => service.handle(this, host, request);\n    }\n    async bootstrapParticle(arc, id, meta) {\n        // make a host\n        const host = new Host(id);\n        // make a particle\n        await this.marshalParticle(host, meta);\n        // add `host` to `arc`\n        const promise = arc.addHost(host);\n        // report\n        log('bootstrapped particle', id);\n        //log(host);\n        // we'll call you when it's ready\n        return promise;\n    }\n    // no-op surface mapping\n    addSurface(id, surface) {\n        this.surfaces[id] = surface;\n    }\n    getSurface(id) {\n        return this.surfaces[id];\n    }\n    // map arcs by arc.id\n    addArc(arc) {\n        const { id } = arc;\n        if (id && !this.arcs[id]) {\n            return this.arcs[id] = arc;\n        }\n        throw `arc has no id, or id \"${id}\" is already in use`;\n    }\n    removeArc(arc) {\n        const { id } = arc;\n        if (!id || !this.arcs[id]) {\n            throw !id ? `arc has no id` : `id \"${id}\" is not in use`;\n        }\n        delete this.arcs[id];\n    }\n    // create a particle inside of host\n    async marshalParticle(host, particleMeta) {\n        const particle = await this.createParticle(host, particleMeta.kind);\n        host.installParticle(particle, particleMeta);\n    }\n    // create a host, install a particle, add host to arc\n    async installParticle(arc, particleMeta, name) {\n        this.log('installParticle', name, particleMeta, arc.id);\n        // provide a default name\n        name = name || makeId();\n        // deduplicate name\n        if (arc.hosts[name]) {\n            let n = 1;\n            for (; (arc.hosts[`${name}-${n}`]); n++)\n                ;\n            name = `${name}-${n}`;\n        }\n        // build the structure\n        const host = new Host(name);\n        await this.marshalParticle(host, particleMeta);\n        arc.addHost(host);\n        return host;\n    }\n    // map a store by a Runtime-specific storeId\n    // Stores have no intrinsic id\n    addStore(storeId, store) {\n        // if the store needs to discuss things with Runtime\n        // TODO(sjmiles): this is likely unsafe for re-entry\n        if (store.marshal) {\n            store.marshal(this);\n        }\n        // bind to persist/restore functions\n        store.persist = async () => this.persistStore(storeId, store);\n        store.restore = async () => this.restoreStore(storeId, store);\n        // override the Store's own persistor to use the runtime persistor\n        // TODO(sjmiles): why?\n        // if (store.persistor) {\n        //   store.persistor.persist = store => this.persistor?.persist(storeId, store);\n        // }\n        // bind this.storeChanged to store.change (and name the binding)\n        const name = `${this.nid}:${storeId}-changed`;\n        const onChange = this.storeChanged.bind(this, storeId);\n        store.listen('change', onChange, name);\n        // map the store\n        this.stores[storeId] = store;\n        // evaluate for sharing\n        this.maybeShareStore(storeId);\n        // notify listeners that a thing happened\n        // TODO(sjmiles): makes no sense without id\n        //this.fire('store-added', store);\n    }\n    async persistStore(storeId, store) {\n        if (store.shouldPersist()) {\n            this.log(`persistStore \"${storeId}\"`);\n            return this.persistor.persist?.(storeId, store);\n        }\n    }\n    async restoreStore(storeId, store) {\n        if (store.shouldPersist()) {\n            this.log(`restoreStore \"${storeId}\"`);\n            return this.persistor.restore?.(storeId);\n        }\n    }\n    storeChanged(storeId, store) {\n        this.log('storeChanged', storeId);\n        this.network?.invalidatePeers(storeId);\n        this.onStoreChange(storeId, store);\n        this.fire('store-changed', { storeId, store });\n    }\n    // TODO(sjmiles): evacipate this method\n    onStoreChange(storeId, store) {\n        // override for bespoke response\n    }\n    do(storeId, task) {\n        task(this.stores[storeId]);\n    }\n    removeStore(storeId) {\n        this.do(storeId, store => {\n            store?.unlisten('change', `${this.nid}:${storeId}-changed`);\n        });\n        delete this.stores[storeId];\n    }\n    maybeShareStore(storeId) {\n        this.do(storeId, store => {\n            if (store?.is('shared')) {\n                this.shareStore(storeId);\n            }\n        });\n    }\n    addPeer(peerId) {\n        this.peers.add(peerId);\n        [...this.shares].forEach(storeId => this.maybeShareStoreWithPeer(storeId, peerId));\n    }\n    shareStore(storeId) {\n        this.shares.add(storeId);\n        [...this.peers].forEach(peerId => this.maybeShareStoreWithPeer(storeId, peerId));\n    }\n    maybeShareStoreWithPeer(storeId, peerId) {\n        this.do(storeId, store => {\n            const nid = this.uid.replace(/\\./g, '_');\n            if (!store.is('private') || (peerId.startsWith(nid))) {\n                this.shareStoreWithPeer(storeId, peerId);\n            }\n        });\n    }\n    shareStoreWithPeer(storeId, peerId) {\n        this.network?.shareStore(storeId, peerId);\n    }\n    async createParticle(host, kind) {\n        try {\n            const factory = await this.marshalParticleFactory(kind);\n            return factory(host);\n        }\n        catch (x) {\n            log.error(`createParticle(${kind}):`, x);\n        }\n    }\n    async marshalParticleFactory(kind) {\n        return particleFactoryCache[kind] ?? this.lateBindParticle(kind);\n    }\n    lateBindParticle(kind) {\n        return Runtime.registerParticleFactory(kind, Runtime?.particleIndustry(kind, Runtime.particleOptions));\n    }\n    static registerParticleFactory(kind, factoryPromise) {\n        return particleFactoryCache[kind] = factoryPromise;\n    }\n    requireStore(meta) {\n        let store = this.stores[meta.name];\n        if (!store) {\n            store = this.createStore(meta);\n            this.addStore(meta.name, store);\n        }\n        return store;\n    }\n    createStore(meta) {\n        const key = keys(storeFactories).find(tag => meta.tags?.includes?.(tag));\n        const storeClass = storeFactories[String(key)] || Store;\n        return new storeClass(meta);\n    }\n    static registerStoreClass(tag, storeClass) {\n        storeFactories[tag] = storeClass;\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nconst log = logFactory(logFactory.flags.recipe, 'flan', 'violet');\nconst { entries, create } = Object;\nexport class Parser {\n    stores;\n    particles;\n    slots;\n    meta;\n    constructor(recipe) {\n        this.stores = [];\n        this.particles = [];\n        this.slots = [];\n        this.meta = create(null);\n        if (recipe) {\n            this.parse(recipe);\n        }\n    }\n    parse(recipe) {\n        // `normalize` converts shorthand to longhand before parsing\n        const normalized = this.normalize(recipe);\n        this.parseSlotSpec(normalized, 'root', '');\n        return this;\n    }\n    normalize(recipe) {\n        if (typeof recipe !== 'object') {\n            throw Error('recipe must be an Object');\n        }\n        // TODO(sjmiles): would be great if `normalize` normalized all the things\n        return recipe;\n    }\n    parseSlotSpec(spec, slotName, parentName) {\n        // process entries\n        for (const key in spec) {\n            switch (key) {\n                case '$meta':\n                    // value is a dictionary\n                    this.meta = { ...this.meta, ...spec.$meta };\n                    break;\n                case '$stores':\n                    // value is a StoreSpec\n                    this.parseStoresNode(spec.$stores);\n                    break;\n                default: {\n                    // value is a ParticleSpec\n                    const container = parentName ? `${parentName}#${slotName}` : slotName;\n                    this.parseParticleSpec(container, key, spec[key]);\n                    break;\n                }\n            }\n        }\n    }\n    parseStoresNode(stores) {\n        for (const key in stores) {\n            this.parseStoreSpec(key, stores[key]);\n        }\n    }\n    parseStoreSpec(name, spec) {\n        if (this.stores.find(s => s.name === name)) {\n            log('duplicate store name');\n            return;\n        }\n        const meta = {\n            name,\n            type: spec.$type,\n            tags: spec.$tags,\n            value: spec.$value\n        };\n        this.stores.push(meta);\n    }\n    parseParticleSpec(container, id, spec) {\n        if (!spec.$kind) {\n            log.warn(`parseParticleSpec: malformed spec has no \"kind\":`, spec);\n            throw Error();\n        }\n        if (this.particles.find(s => s.id === id)) {\n            log('duplicate particle name');\n            return;\n        }\n        this.particles.push({ id, container, spec });\n        if (spec.$slots) {\n            this.parseSlotsNode(spec.$slots, id);\n        }\n    }\n    parseSlotsNode(slots, parent) {\n        entries(slots).forEach(([key, spec]) => this.parseSlotSpec(spec, key, parent));\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport function matches(candidateMeta, targetMeta) {\n    for (const property in targetMeta) {\n        if (candidateMeta[property] !== targetMeta[property]) {\n            return false;\n        }\n    }\n    return true;\n}\n;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { matches } from '../utils/matching.js';\nconst log = logFactory(logFactory.flags.recipe, 'StoreCook', '#99bb15');\nconst { values } = Object;\nconst findStores = (runtime, criteria) => {\n    return values(runtime.stores).filter(store => matches(store?.meta, criteria));\n};\nconst mapStore = (runtime, { name, type }) => {\n    // TODO(b/244191110): Type matching API to be wired here.\n    return findStores(runtime, { name, type })?.[0];\n};\nexport class StoreCook {\n    static async execute(runtime, arc, stores) {\n        return this.forEachStore(this.realizeStore, runtime, arc, stores);\n    }\n    static async evacipate(runtime, arc, stores) {\n        return this.forEachStore(this.derealizeStore, runtime, arc, stores);\n    }\n    static async forEachStore(task, runtime, arc, stores) {\n        return Promise.all(stores.map(store => task.call(this, runtime, arc, store)));\n    }\n    static async realizeStore(runtime, arc, rawMeta) {\n        const meta = this.constructMeta(runtime, arc, rawMeta);\n        let value = meta?.value;\n        let store = mapStore(runtime, meta);\n        if (store) {\n            log(`realizeStore: mapped \"${rawMeta.name}\" to \"${store.meta.name}\"`);\n        }\n        else {\n            store = runtime.createStore(meta);\n            log(`realizeStore: created \"${meta.name}\"`);\n            // TODO(sjmiles): Stores no longer know their own id, so there is a wrinkle here as we\n            // re-route persistence through runtime (so we can bind in the id)\n            // Also: the 'id' is known as 'meta.name' here, this is also a problem\n            // store && (store.persistor = {\n            //   restore: store => runtime.persistor?.restore(meta.name, store),\n            //   persist: () => {}\n            // });\n            // runtime.addStore(meta.name, store);\n            //await store?.restore(meta?.value)\n            runtime.addStore(meta.name, store);\n            if (store.shouldPersist()) {\n                const cached = await store.restore();\n                value = cached === undefined ? value : cached;\n            }\n        }\n        if (value !== undefined) {\n            log(`setting data to:`, value);\n            store.data = value;\n        }\n        arc.addStore(meta.name, store);\n    }\n    static async derealizeStore(runtime, arc, spec) {\n        runtime.removeStore(spec.$name);\n        arc.removeStore(spec.$name);\n    }\n    static constructMeta(runtime, arc, rawMeta) {\n        const meta = {\n            ...rawMeta,\n            arcid: arc.id,\n            uid: runtime.uid,\n        };\n        return {\n            ...meta,\n            owner: meta.uid,\n            shareid: `${meta.name}:${meta.arcid}:${meta.uid}`\n        };\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nconst log = logFactory(logFactory.flags.recipe, 'ParticleCook', '#5fa530');\nexport class ParticleCook {\n    static async execute(runtime, arc, particles) {\n        // serial\n        for (const particle of particles) {\n            await this.realizeParticle(runtime, arc, particle);\n        }\n        // parallel\n        //return Promise.all(particles.map(particle => this.realizeParticle(runtime, arc, particle)));\n    }\n    static async realizeParticle(runtime, arc, node) {\n        log('realizedParticle:', node.id);\n        // convert spec to metadata\n        const meta = this.specToMeta(node.spec);\n        meta.container ||= node.container;\n        // make a (hosted) particle\n        return runtime.bootstrapParticle(arc, node.id, meta);\n    }\n    static specToMeta(spec) {\n        if (spec.$bindings) {\n            console.warn(`Particle '${spec.$kind}' spec contains deprecated $bindings property (${JSON.stringify(spec.$bindings)})`);\n        }\n        // TODO(sjmiles): impedance mismatch here is likely to cause problems\n        const { $kind: kind, $container: container, $staticInputs: staticInputs } = spec;\n        const inputs = this.formatBindings(spec.$inputs);\n        const outputs = this.formatBindings(spec.$outputs);\n        return { kind, staticInputs, inputs, outputs, container };\n    }\n    static formatBindings(bindings) {\n        return bindings?.map?.(binding => typeof binding === 'string' ? { [binding]: binding } : binding);\n    }\n    static async evacipate(runtime, arc, particles) {\n        return Promise.all(particles.map(particle => this.derealizeParticle(runtime, arc, particle)));\n    }\n    static async derealizeParticle(runtime, arc, node) {\n        arc.removeHost(node.id);\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { Parser } from './RecipeParser.js';\nimport { StoreCook } from './StoreCook.js';\nimport { ParticleCook } from './ParticleCook.js';\nconst log = logFactory(logFactory.flags.recipe, 'Chef', '#087f23');\nexport class Chef {\n    static async execute(recipe, runtime, arc) {\n        if (arc instanceof Promise) {\n            log.error('`arc` must be an Arc, not a Promise. Make sure `boostrapArc` is awaited.');\n            return;\n        }\n        //log.groupCollapsed('executing recipe...', recipe.$meta);\n        log('|-->...| executing recipe: ', recipe.$meta ?? '');\n        const plan = new Parser(recipe);\n        // `store` preparation\n        await StoreCook.execute(runtime, arc, plan.stores);\n        // `particle` preparation\n        await ParticleCook.execute(runtime, arc, plan.particles);\n        // seasoning\n        // TODO(sjmiles): what do we use this for?\n        arc.meta = { ...arc.meta, ...plan.meta };\n        log('|...-->| recipe complete: ', recipe.$meta ?? '');\n        //log.groupEnd();\n    }\n    static async evacipate(recipe, runtime, arc) {\n        //log.groupCollapsed('evacipating recipe...', recipe.$meta);\n        log('|-->...| evacipating recipe: ', recipe.$meta);\n        // TODO(sjmiles): this is work we already did\n        const plan = new Parser(recipe);\n        // `store` work\n        // TODO(sjmiles): not sure what stores are unique to this plan\n        //await StoreCook.evacipate(runtime, arc, plan);\n        // `particle` work\n        await ParticleCook.evacipate(runtime, arc, plan.particles);\n        // seasoning\n        // TODO(sjmiles): doh\n        //arc.meta = {...arc.meta, ...plan.meta};\n        log('|...-->| recipe evacipated: ', recipe.$meta);\n        //log.groupEnd();\n    }\n    static async executeAll(recipes, runtime, arc) {\n        for (const recipe of recipes) {\n            await this.execute(recipe, runtime, arc);\n        }\n        //return Promise.all(recipes?.map(recipe => this.execute(recipe, runtime, arc)));\n    }\n    static async evacipateAll(recipes, runtime, arc) {\n        return Promise.all(recipes?.map(recipe => this.evacipate(recipe, runtime, arc)));\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const PathMapper = class {\n    map;\n    constructor(root) {\n        this.map = {};\n        this.setRoot(root);\n    }\n    add(mappings) {\n        Object.assign(this.map, mappings || {});\n    }\n    resolve(path) {\n        const bits = path.split('/');\n        const top = bits.shift();\n        const prefix = this.map[top] || top;\n        return [prefix, ...bits].join('/');\n    }\n    setRoot(root) {\n        if (root.length && root[root.length - 1] === '/') {\n            root = root.slice(0, -1);\n        }\n        this.add({\n            '$root': root,\n            '$arcs': root\n        });\n    }\n    getAbsoluteHereUrl(meta, depth) {\n        // you are here\n        const localRelative = meta.url.split('/').slice(0, -(depth ?? 1)).join('/');\n        if (!globalThis?.document) {\n            return localRelative;\n        }\n        else {\n            // document root is here\n            let base = document.URL;\n            // if document URL has a filename, remove it\n            if (base[base.length - 1] !== '/') {\n                base = `${base.split('/').slice(0, -1).join('/')}/`;\n            }\n            // create absoute path to here (aka 'local')\n            let localAbsolute = new URL(localRelative, base).href;\n            // no trailing slash!\n            if (localAbsolute[localAbsolute.length - 1] === '/') {\n                localAbsolute = localAbsolute.slice(0, -1);\n            }\n            return localAbsolute;\n        }\n    }\n};\nconst root = import.meta.url.split('/').slice(0, -3).join('/');\nexport const Paths = globalThis['Paths'] = new PathMapper(root);\nPaths.add(globalThis.config?.paths);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { Paths } from '../utils/paths.js';\nimport { logFactory } from '../utils/log.js';\nconst log = logFactory(logFactory.flags.code, 'code', 'gold');\nconst defaultParticleBasePath = '$arcs/js/core/Particle.js';\nexport const requireParticleBaseCode = async (sourcePath) => {\n    if (!requireParticleBaseCode.source) {\n        const path = Paths.resolve(sourcePath || defaultParticleBasePath);\n        log('particle base code path: ', path);\n        const response = await fetch(path);\n        const moduleText = await response.text() + \"\\n//# sourceURL=\" + path + \"\\n\";\n        requireParticleBaseCode.source = moduleText.replace(/export /g, '');\n    }\n    return requireParticleBaseCode.source;\n};\nrequireParticleBaseCode.source = null;\nexport const requireParticleImplCode = async (kind, options) => {\n    const code = options?.code || await fetchParticleCode(kind);\n    // TODO(sjmiles): brittle content processing, needs to be documented\n    return code.slice(code.indexOf('({'));\n};\nexport const fetchParticleCode = async (kind) => {\n    if (kind) {\n        return await maybeFetchParticleCode(kind);\n    }\n    log.error(`fetchParticleCode: empty 'kind'`);\n};\nexport const maybeFetchParticleCode = async (kind) => {\n    const path = pathForKind(kind);\n    try {\n        const response = await fetch(path);\n        //if (response.ok) {\n        return await response.text();\n        //}\n    }\n    catch (x) {\n        log.error(`could not locate implementation for particle \"${kind}\" [${path}]`);\n    }\n};\nexport const pathForKind = (kind) => {\n    if (kind) {\n        if (!'$./'.includes(kind[0]) && !kind.includes('://')) {\n            kind = `$library/${kind}`;\n        }\n        if (!kind?.split('/').pop().includes('.')) {\n            kind = `${kind}.js`;\n        }\n        return Paths.resolve(kind);\n    }\n    return '404';\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { Paths } from '../utils/paths.js';\nimport { Runtime } from '../Runtime.js';\nimport { logFactory } from '../utils/log.js';\nimport { deepEqual } from '../utils/object.js';\nimport { requireParticleImplCode, pathForKind } from './code.js';\nconst log = logFactory(logFactory.flags.isolation, 'vanilla', 'goldenrod');\nconst harden = object => object;\nglobalThis.harden = harden;\nglobalThis.scope = {\n    harden\n};\nconst makeKey = () => `i${Math.floor((1 + Math.random() * 9) * 1e14)}`;\nconst timeout = async (func, delayMs) => new Promise(resolve => setTimeout(() => resolve(func()), delayMs));\nexport const initVanilla = (options) => {\n    // requiredLog.groupCollapsed('LOCKDOWN');\n    try {\n        log(deepEqual);\n        const utils = { log, resolve, html, makeKey, deepEqual, timeout };\n        const scope = {\n            // default injections\n            ...utils,\n            // app injections\n            ...options?.injections,\n        };\n        Object.assign(globalThis.scope, scope);\n        Object.assign(globalThis, scope);\n    }\n    finally {\n        /**/\n    }\n};\nconst resolve = Paths.resolve.bind(Paths);\nconst html = (strings, ...values) => `${strings[0]}${values.map((v, i) => `${v}${strings[i + 1]}`).join('')}`.trim();\nconst createParticleFactory = async (kind, options) => {\n    // ensure our canonical Particle class exists in the isolation chamber\n    const { Particle } = await import('../core/Particle.js');\n    //const Particle = await requireParticle();\n    // // evaluate custom code in isolation chamber\n    const implFactory = await requireImplFactory(kind, options);\n    // injections\n    const log = createLogger(kind);\n    const injections = { log, resolve, html, ...options?.injections };\n    // construct 3P prototype\n    const proto = implFactory(injections);\n    // // construct particleFactory\n    const particleFactory = (host) => {\n        const pipe = {\n            log,\n            output: host.output.bind(host),\n            service: host.service.bind(host)\n        };\n        return new Particle(proto, pipe, true);\n    };\n    return particleFactory;\n};\nconst requireImplFactory = async (kind, options) => {\n    // snatch up the custom particle code\n    const implCode = await requireParticleImplCode(kind, options);\n    let factory = (0, eval)(implCode);\n    // if it's an object\n    if (typeof factory === 'object') {\n        // repackage the code to eliminate closures\n        factory = repackageImplFactory(factory, kind);\n        log('repackaged factory:\\n', factory);\n    }\n    return globalThis.harden(factory);\n};\nconst { assign, keys, entries, values, create } = Object;\nglobalThis.SafeObject = {\n    create,\n    assign,\n    keys(o) {\n        return o ? keys(o) : [];\n    },\n    values(o) {\n        return o ? values(o) : [];\n    },\n    entries(o) {\n        return o ? entries(o) : [];\n    },\n    mapBy(a, keyGetter) {\n        return a ? values(a).reduce((map, item) => (map[keyGetter(item)] = item, map), {}) : {};\n    }\n};\nconst repackageImplFactory = (factory, kind) => {\n    const { constNames, rewriteConsts, funcNames, rewriteFuncs } = collectDecls(factory);\n    const proto = `{${[...constNames, ...funcNames]}}`;\n    const moduleRewrite = `\n({log, ...utils}) => {\n// protect utils\nglobalThis.harden(utils);\n// these are just handy\nconst {assign, keys, entries, values, create, mapBy} = globalThis.SafeObject;\n// declarations\n${[...rewriteConsts, ...rewriteFuncs].join('\\n\\n')}\n// hardened Object (map) of declarations,\n// suitable to be a prototype\nreturn globalThis.harden(${proto});\n// name the file for debuggers\n//# sourceURL=sandbox/${pathForKind(kind).split('/').pop()}\n};\n  `;\n    log('rewritten:\\n\\n', moduleRewrite);\n    return (0, eval)(moduleRewrite);\n};\nconst collectDecls = factory => {\n    // dictionary to 2-tuples\n    const props = Object.entries(factory);\n    // filter by typeof\n    const isFunc = ([n, p]) => typeof p === 'function';\n    // filter out forbidden names\n    const isForbidden = ([n, p]) => n == 'harden' || n == 'globalThis';\n    // get props that are functions\n    const funcs = props.filter(item => isFunc(item) && !isForbidden(item));\n    // rewrite object declarations as module declarations\n    const rewriteFuncs = funcs.map(([n, f]) => {\n        const code = f?.toString?.() ?? '';\n        const async = code.includes('async');\n        const body = code.replace('async ', '').replace('function ', '');\n        return `${async ? 'async' : ''} function ${body};`;\n    });\n    // array up the function names\n    const funcNames = funcs.map(([n]) => n);\n    // if it's not a Function, it's a const\n    const consts = props.filter(item => !isFunc(item) && !isForbidden(item));\n    // build const decls\n    const rewriteConsts = consts.map(([n, p]) => {\n        return `const ${n} = \\`${p}\\`;`;\n    });\n    // array up the const names\n    const constNames = consts.map(([n]) => n);\n    return {\n        constNames,\n        rewriteConsts,\n        funcNames,\n        rewriteFuncs\n    };\n};\nconst createLogger = kind => {\n    const _log = logFactory(logFactory.flags.particles, kind, '#002266');\n    return (msg, ...args) => {\n        const stack = msg?.stack?.split('\\n')?.slice(1, 2) || (new Error()).stack?.split('\\n').slice(2, 3);\n        const where = stack\n            .map(entry => entry\n            .replace(/\\([^()]*?\\)/, '')\n            .replace(/ \\([^()]*?\\)/, '')\n            .replace('<anonymous>, <anonymous>', '')\n            .replace('Object.', '')\n            .replace('eval at :', '')\n            .replace(/\\(|\\)/g, '')\n            .replace(/\\[[^\\]]*?\\] /, '')\n            .replace(/at (.*) (\\d)/, 'at \"$1\" $2'))\n            .reverse()\n            .join('\\n')\n            .trim();\n        if (msg?.message) {\n            _log.error(msg.message, ...args, `(${where})`);\n        }\n        else {\n            _log(msg, ...args, `(${where})`);\n        }\n    };\n};\n// give the runtime a safe way to instantiate Particles\nRuntime.particleIndustry = createParticleFactory;\nRuntime.securityLockdown = initVanilla;\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport * from './date.js';\nexport * from './id.js';\nexport * from './log.js';\nexport * from './matching.js';\nexport * from './object.js';\nexport * from './paths.js';\nexport * from './rand.js';\nexport * from './task.js';\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const computeAgeString = (date, now) => {\n    let deltaTime = Math.round((now - date) / 1000);\n    if (isNaN(deltaTime)) {\n        return `\u2022`;\n    }\n    let plural = '';\n    if (deltaTime < 60) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} second${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 60);\n    if (deltaTime < 60) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} minute${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 60);\n    if (deltaTime < 24) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} hour${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 24);\n    if (deltaTime < 30) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} day${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 30);\n    if (deltaTime < 12) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} month${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 12);\n    if (deltaTime > 1)\n        plural = 's';\n    return `${deltaTime} year${plural} ago`;\n};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/**\n * Perform `action` if `delay` ms have elapsed since last debounce call for `key`.\n *\n * ```\n * // invoke 'task' one second after last time this line executed\n * this.debounceTask = debounce(this.debounceTask, task, 1000);\n * ```\n */\nexport const debounce = (key, action, delay) => {\n    if (key) {\n        clearTimeout(key);\n    }\n    if (action && delay) {\n        return setTimeout(action, delay);\n    }\n};\nexport const async = task => {\n    return async (...args) => {\n        await Promise.resolve();\n        task(...args);\n    };\n};\nexport const asyncTask = (task, delayMs) => {\n    setTimeout(task, delayMs ?? 0);\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n\nexport * from '../js/Runtime.js';\nexport * from '../js/core/EventEmitter.js';\nexport * from '../js/core/Store.js';\nexport * from '../js/core/Arc.js';\nexport * from '../js/core/Host.js';\nexport * from '../js/core/Decorator.js';\nexport * from '../js/recipe/Chef.js';\nexport * from '../js/recipe/ParticleCook.js';\nexport * from '../js/recipe/StoreCook.js';\nexport * from '../js/recipe/RecipeParser.js';\nexport * from '../js/isolation/code.js';\nexport * from '../js/isolation/vanilla.js';\n\nimport * as utils from '../js/utils/utils.js';\nconst {logFactory, Paths} = utils;\nexport {logFactory, Paths, utils};\n\nconst root = import.meta.url.split('/').slice(0, -1).join('/');\nPaths.setRoot(root);\n"],
  "mappings": "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",
  "names": ["create", "assign", "keys", "values", "entries", "log", "nob", "key", "log", "output", "key", "values", "entries", "key", "entries", "keys", "customLogFactory", "key", "create", "keys", "key", "log", "keys", "key", "log", "entries", "create", "key", "log", "values", "log", "log", "root", "log", "log", "timeout", "resolve", "scope", "values", "Particle", "assign", "keys", "entries", "create", "async", "key", "logFactory", "Paths", "root", "Paths"]
}
