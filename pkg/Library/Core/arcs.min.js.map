{
  "version": 3,
  "sources": ["../../../core/js/core/Particle.js", "../../../core/js/core/EventEmitter.js", "../../../core/js/utils/types.js", "../../../core/js/utils/log.js", "../../../core/js/core/Arc.js", "../../../core/js/utils/object.js", "../../../core/js/utils/rand.js", "../../../core/js/core/Decorator.js", "../../../core/js/core/Host.js", "../../../core/js/core/Store.js", "../../../core/js/utils/id.js", "../../../core/js/Runtime.js", "../../../core/js/recipe/RecipeParser.js", "../../../core/js/utils/matching.js", "../../../core/js/recipe/StoreCook.js", "../../../core/js/recipe/ParticleCook.js", "../../../core/js/recipe/Chef.js", "../../../core/js/utils/paths.js", "../../../core/js/isolation/code.js", "../../../core/js/isolation/vanilla.js", "../../../core/js/utils/utils.js", "../../../core/js/utils/date.js", "../../../core/js/utils/task.js", "../../../core/src/arcs.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/*\n * PSA: code in this file is subject to isolation restrictions, including runtime processing.\n * Particle module interfaces with 3p code, and is often loaded into isolation contexts.\n**/\nconst { create, assign, keys, values, entries, defineProperty, setPrototypeOf } = Object;\nconst scope = globalThis['scope'] ?? {};\nconst { log, timeout } = scope;\nconst nob = () => create(null);\n// yay lambda, he gets a semi-colon ... named classes not so much\nconst storePrototype = new class {\n    get empty() {\n        return this.length === 0;\n    }\n    get data() {\n        return this;\n    }\n    get pojo() {\n        return this.data;\n    }\n    get json() {\n        return JSON.stringify(this.pojo);\n    }\n    get pretty() {\n        return JSON.stringify(this.pojo, null, '  ');\n    }\n    get keys() {\n        return keys(this.data);\n    }\n    get length() {\n        return keys(this.data).length;\n    }\n    get values() {\n        return values(this.data);\n    }\n    get entries() {\n        return entries(this.data);\n    }\n    set(key, value) {\n        this.data[key] = value;\n    }\n    setByIndex(index, value) {\n        this.data[this.keys[index]] = value;\n    }\n    add(...values) {\n        values.forEach(value => this.data[scope.makeKey()] = value);\n    }\n    push(...values) {\n        this.add(...values);\n    }\n    remove(value) {\n        entries(this.data).find(([key, entry]) => {\n            if (entry === value) {\n                delete this.data[key];\n                return true;\n            }\n        });\n    }\n    has(key) {\n        return this.data[key] !== undefined;\n    }\n    get(key) {\n        return this.getByKey(key);\n    }\n    getByKey(key) {\n        return this.data[key];\n    }\n    getByIndex(index) {\n        return this.data[this.keys[index]];\n    }\n    delete(key) {\n        delete this.data[key];\n    }\n    deleteByIndex(index) {\n        delete this.data[this.keys[index]];\n    }\n    assign(dictionary) {\n        assign(this.data, dictionary);\n    }\n    map(mapFunc) {\n        return this.values.map(mapFunc);\n    }\n    toString() {\n        return this.pretty;\n    }\n};\n/**\n * ParticleAPI functions are called at various points in the particle's lifecycle.\n * Developers should override these functions as needed to give a particle\n * functionality.\n */\nexport class ParticleApi {\n    /**\n     * Particles that render on a surface should provide a template. The template\n     * can include double curly bracketed keys that will be interpolated at\n     * runtime.\n     *\n     * To dynamically change the template, we double curly braced keys must be\n     * the only thing inside a div or span:\n     * ```\n     * <span>{{key}}</span>.\n     * <div>{{key}}</div>\n     * ```\n     *\n     * The value for each key is returned from the {@link render | render method}.\n     *\n     * Double curly bracketed keys can also be placed inside div definitions to\n     * change attributes. In this instance we place them inside quotation marks.\n     * For example:\n     * ```\n     * <div class=\u201D{{classKey}}\" hidden=\"{{hideKey}}\">\n     * ```\n     */\n    get template() {\n        return null;\n    }\n    /**\n     * shouldUpdate returns a boolean that indicates if runtime should update\n     * when inputs or state change.\n     *\n     * This function can be overwritten to implement the desired\n     * behaviour.\n     *\n     * @param inputs\n     * @param state\n     *\n     * @returns a boolean to indicate if updates should be allowed.\n     */\n    shouldUpdate(inputs, state) {\n        return true;\n    }\n    /**\n     * Update is called anytime an input to the particle changes.\n     *\n     * This function can be overwritten to implement the desired\n     * behaviour.\n     *\n     * Inputs are the stores the particle is bound to.\n     * State is an object that can be changed and passed to sub-functions.\n     * Tools allow the particle to perform supervised activities -\n     * for example services are a tool.\n     *\n     * The update function can return an object containing the new desired\n     * value(s) for the stores. For example, if we wanted to update the\n     * `Person` and `Address` stores we would return:\n     *\n     * ```\n     * return {\n     *   Person: 'Jane Smith',\n     *   Address: '123 Main Street'\n     * };\n     * ```\n     *\n     * @param inputs\n     * @param state\n     * @param tools\n     *\n     * @returns [OPTIONAL] object containing store to value mappings\n     */\n    async update(inputs, state, tools) {\n        return null;\n    }\n    /**\n     * shouldRender returns a boolean that indicates if runtime should\n     * render the template.\n     *\n     * This function can be overwritten to implement the desired\n     * behaviour.\n     *\n     * @param inputs\n     * @param state\n     *\n     * @returns a boolean to indicate if the template should be re-rendered.\n     */\n    shouldRender(inputs, state) {\n        return true;\n    }\n    /**\n     * Render returns an object that contains the key: value pairings\n     * that will be interpolated into the {@link template | template}.\n     * For example, if the template contained keys `class`,\n     * `hideDiv`, and `displayTxt` we could return:\n     * ```\n     * {\n     *   class: 'title`,\n     *   hideDiv: false,\n     *   displayTxt: \"My Page's Title\"\n     * }\n     * ```\n     *\n     * This functions can be overwritten to return the desired\n     * values.\n     *\n     * @param inputs\n     * @param state\n     */\n    render(inputs, state) {\n        return null;\n    }\n}\nconst privateProperty = initialValue => {\n    let value = initialValue;\n    return { get: () => value, set: v => value = v };\n};\nexport class Particle {\n    pipe;\n    impl;\n    internal;\n    constructor(proto, pipe, beStateful) {\n        this.pipe = pipe;\n        this.impl = create(proto);\n        defineProperty(this, 'internal', privateProperty(nob()));\n        this.internal.$busy = 0;\n        //if (beStateful) {\n        this.internal.beStateful = true;\n        this.internal.state = nob();\n        //}\n    }\n    get log() {\n        return this.pipe?.log || log;\n    }\n    get template() {\n        return this.impl?.template;\n    }\n    get config() {\n        return {\n            template: this.template\n        };\n    }\n    // set-trap for inputs, so we can do work when inputs change\n    set inputs(inputs) {\n        //this.log(inputs);\n        this.internal.inputs = inputs;\n        this.invalidateInputs();\n    }\n    get inputs() {\n        return this.internal.inputs;\n    }\n    get state() {\n        return this.internal.state;\n    }\n    async service(request) {\n        return this.pipe?.service?.(request);\n    }\n    invalidateInputs() {\n        this.invalidate();\n    }\n    // validate after the next microtask\n    invalidate() {\n        if (!this.internal.validator) {\n            //this.internal.validator = this.async(this.validate);\n            this.internal.validator = timeout(this.validate.bind(this), 1);\n        }\n    }\n    // call fn after a microtask boundary\n    async(fn) {\n        return Promise.resolve().then(fn.bind(this));\n    }\n    // activate particle lifecycle\n    async validate() {\n        //this.log('validate');\n        if (this.internal.validator) {\n            // try..finally to ensure we nullify `validator`\n            try {\n                this.internal.$validateAfterBusy = this.internal.$busy;\n                if (!this.internal.$busy) {\n                    // if we're not stateful\n                    if (!this.internal.beStateful) {\n                        // then it's a fresh state every validation\n                        this.internal.state = nob();\n                    }\n                    // inputs are immutable (changes to them are ignored)\n                    this.internal.inputs = this.validateInputs();\n                    // let the impl decide what to do\n                    await this.maybeUpdate();\n                }\n            }\n            catch (e) {\n                log.error(e);\n            }\n            // nullify validator _after_ methods so state changes don't reschedule validation\n            this.internal.validator = null;\n        }\n    }\n    validateInputs() {\n        // shallow-clone our input dictionary\n        const inputs = assign(nob(), this.inputs);\n        // for each input, try to provide prototypical helpers\n        entries(inputs).forEach(([key, value]) => {\n            if (value && (typeof value === 'object')) {\n                if (!Array.isArray(value)) {\n                    value = setPrototypeOf({ ...value }, storePrototype);\n                }\n                inputs[key] = value;\n            }\n        });\n        //return harden(inputs);\n        return inputs;\n    }\n    implements(methodName) {\n        return typeof this.impl?.[methodName] === 'function';\n    }\n    async maybeUpdate() {\n        if (await this.checkInit()) {\n            if (!this.canUpdate()) {\n                // we might want to render even if we don't update,\n                // if we `outputData` the system will add render models\n                this.outputData(null);\n            }\n            if (await this.shouldUpdate(this.inputs, this.state)) {\n                this.update();\n            }\n        }\n    }\n    async checkInit() {\n        if (!this.internal.initialized) {\n            this.internal.initialized = true;\n            if (this.implements('initialize')) {\n                await this.asyncMethod(this.impl.initialize);\n            }\n        }\n        return true;\n    }\n    canUpdate() {\n        return this.implements('update');\n    }\n    async shouldUpdate(inputs, state) {\n        //return true;\n        // not implementing `shouldUpdate`, means the value should always be true\n        // TODO(sjmiles): this violates our 'false by default' convention, but the\n        // naming is awkward: `shouldNotUpdate`? `preventUpdate`?\n        return !this.impl?.shouldUpdate || (await this.impl.shouldUpdate(inputs, state) !== false);\n    }\n    update() {\n        this.asyncMethod(this.impl?.update);\n    }\n    outputData(data) {\n        this.pipe?.output?.(data, this.maybeRender());\n    }\n    maybeRender() {\n        //this.log('maybeRender');\n        if (this.template) {\n            const { inputs, state } = this.internal;\n            if (this.impl?.shouldRender?.(inputs, state) !== false) {\n                //this.log('render');\n                if (this.implements('render')) {\n                    return this.impl.render(inputs, state);\n                }\n                else {\n                    return { ...inputs, ...state };\n                }\n            }\n        }\n    }\n    async handleEvent({ handler, data }) {\n        const onhandler = this.impl?.[handler];\n        if (onhandler) {\n            this.internal.inputs.eventlet = data;\n            await this.asyncMethod(onhandler.bind(this.impl), { eventlet: data });\n            this.internal.inputs.eventlet = null;\n        }\n        else {\n            //console.log(`[${this.id}] event handler [${handler}] not found`);\n        }\n    }\n    async asyncMethod(asyncMethod, injections) {\n        if (asyncMethod) {\n            const { inputs, state } = this.internal;\n            const stdlib = {\n                service: async (request) => this.service(request),\n                invalidate: () => this.invalidate(),\n                output: async (data) => this.outputData(data)\n            };\n            const task = asyncMethod.bind(this.impl, inputs, state, { ...stdlib, ...injections });\n            this.outputData(await this.try(task));\n            if (!this.internal.$busy && this.internal.$validateAfterBusy) {\n                this.invalidate();\n            }\n        }\n    }\n    async try(asyncFunc) {\n        this.internal.$busy++;\n        try {\n            return await asyncFunc();\n        }\n        catch (e) {\n            log.error(e);\n        }\n        finally {\n            this.internal.$busy--;\n        }\n    }\n}\nscope.harden(globalThis);\nscope.harden(Particle);\n// log('Any leaked values? Must pass three tests:');\n// try { globalThis['sneaky'] = 42; } catch(x) { log('sneaky test: pass'); }\n// try { Particle['foo'] = 42; } catch(x) { log('Particle.foo test: pass'); }\n// try { log['foo'] = 42; } catch(x) { log('log.foo test: pass'); };\nParticle;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport class EventEmitter {\n    // map of event name to listener array\n    listeners = {};\n    getEventListeners(eventName) {\n        return this.listeners[eventName] || (this.listeners[eventName] = []);\n    }\n    fire(eventName, ...args) {\n        const listeners = this.getEventListeners(eventName);\n        if (listeners?.forEach) {\n            listeners.forEach(listener => listener(...args));\n        }\n    }\n    listen(eventName, listener, listenerName) {\n        const listeners = this.getEventListeners(eventName);\n        listeners.push(listener);\n        listener._name = listenerName || '(unnamed listener)';\n        return listener;\n    }\n    unlisten(eventName, listener) {\n        const list = this.getEventListeners(eventName);\n        const index = (typeof listener === 'string') ? list.findIndex(l => l._name === listener) : list.indexOf(listener);\n        if (index >= 0) {\n            list.splice(index, 1);\n        }\n        else {\n            console.warn('failed to unlisten from', eventName);\n        }\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const logKinds = ['log', 'group', 'groupCollapsed', 'groupEnd', 'dir'];\nexport const errKinds = ['warn', 'error'];\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logKinds, errKinds } from './types.js';\nconst { fromEntries } = Object;\nconst _logFactory = (enable, preamble, bg, color, kind = 'log') => {\n    if (!enable) {\n        return () => { };\n    }\n    if (kind === 'dir') {\n        return console.dir.bind(console);\n    }\n    const style = `background: ${bg || 'gray'}; color: ${color || 'white'}; padding: 1px 6px 2px 7px; border-radius: 6px 0 0 6px;`;\n    return console[kind].bind(console, `%c${preamble}`, style);\n};\nexport const logFactory = (enable, preamble, bg = '', color = '') => {\n    const debugLoggers = fromEntries(logKinds.map(kind => [kind, _logFactory(enable, preamble, bg, color, kind)]));\n    const errorLoggers = fromEntries(errKinds.map(kind => [kind, _logFactory(true, preamble, bg, color, kind)]));\n    const loggers = { ...debugLoggers, ...errorLoggers };\n    // Inject `log` as default, keeping all loggers available to be invoked by name.\n    const log = loggers.log;\n    Object.assign(log, loggers);\n    return log;\n};\nlogFactory.flags = globalThis.config?.logFlags || {};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { EventEmitter } from './EventEmitter.js';\nimport { logFactory } from '../utils/log.js';\nconst customLogFactory = (id) => logFactory(logFactory.flags.arc, `Arc (${id})`, 'slateblue');\nconst { assign, keys, entries, create } = Object;\nconst values = (o) => Object.values(o);\nconst nob = () => create(null);\nexport class Arc extends EventEmitter {\n    log;\n    id;\n    meta;\n    stores;\n    hosts;\n    surface;\n    composer;\n    hostService;\n    constructor(id, meta, surface) {\n        super();\n        this.id = id;\n        this.meta = meta;\n        this.surface = surface;\n        this.hosts = nob();\n        this.stores = nob();\n        this.log = customLogFactory(id);\n    }\n    async addHost(host, surface) {\n        // to support hosts we need a composer\n        await this.ensureComposer();\n        // bookkeep\n        this.hosts[host.id] = host;\n        host.arc = this;\n        // TODO(sjmiles): support per host surfacing?\n        //await host.bindToSurface(surface ?? this.surface);\n        // begin work\n        this.updateHost(host);\n        return host;\n    }\n    async ensureComposer() {\n        if (!this.composer && this.surface) {\n            // create composer\n            this.composer = await this.surface.createComposer('root');\n            // pipeline for events from composer to this.onevent\n            // TODO(sjmiles): use 'bind' to avoid a closure and improve the stack trace\n            this.composer.onevent = this.onevent.bind(this);\n        }\n    }\n    rerender() {\n        values(this.hosts).forEach(h => h.rerender());\n    }\n    removeHost(id) {\n        this.hosts[id]?.detach();\n        delete this.hosts[id];\n    }\n    addStore(storeId, store) {\n        if (store && !this.stores[storeId]) {\n            this.stores[storeId] = store;\n            store.listen('change', () => this.storeChanged(storeId, store), this.id);\n        }\n    }\n    removeStore(storeId) {\n        const store = this.stores[storeId];\n        if (store) {\n            store.unlisten('change', this.id);\n        }\n        delete this.stores[storeId];\n    }\n    // TODO(sjmiles): 2nd param is used in overrides, make explicit\n    storeChanged(storeId, store) {\n        this.log(`storeChanged: \"${storeId}\"`);\n        const isBound = inputs => inputs && inputs.some(input => values(input)[0] == storeId || keys(input)[0] == storeId);\n        values(this.hosts).forEach(host => {\n            const inputs = host.meta?.inputs;\n            if (inputs === '*' || isBound(inputs)) {\n                this.log(`host \"${host.id}\" has interest in \"${storeId}\"`);\n                // TODO(sjmiles): we only have to update inputs for storeId, we lose efficiency here\n                this.updateHost(host);\n            }\n        });\n        this.fire('store-changed', storeId);\n    }\n    updateParticleMeta(hostId, meta) {\n        const host = this.hosts[hostId];\n        host.meta = meta;\n        this.updateHost(host);\n    }\n    updateHost(host) {\n        host.inputs = this.computeInputs(host);\n    }\n    // TODO(sjmiles): debounce? (update is sync-debounced already)\n    // complement to `assignOutputs`\n    computeInputs(host) {\n        const inputs = nob();\n        const inputBindings = host.meta?.inputs;\n        if (inputBindings === '*') {\n            // TODO(sjmiles): we could make the contract that the bindAll inputs are\n            // names (or names + meta) only. The Particle could look up values via\n            // service (to reduce throughput requirements)\n            entries(this.stores).forEach(([name, store]) => inputs[name] = store.pojo);\n        }\n        else {\n            const staticInputs = host.meta?.staticInputs;\n            assign(inputs, staticInputs);\n            if (inputBindings) {\n                inputBindings.forEach(input => this.computeInput(entries(input)[0], inputs));\n                this.log(`computeInputs(${host.id}) =`, inputs);\n            }\n        }\n        return inputs;\n    }\n    computeInput([name, binding], inputs) {\n        const storeName = binding || name;\n        const store = this.stores[storeName];\n        if (store) {\n            inputs[name] = store.pojo;\n        }\n        else {\n            this.log.warn(`computeInput: \"${storeName}\" (bound to \"${name}\") not found`);\n        }\n    }\n    // complement to `computeInputs`\n    assignOutputs({ id, meta }, outputs) {\n        const names = keys(outputs);\n        if (meta?.outputs && names.length) {\n            names.forEach(name => this.assignOutput(name, outputs[name], meta.outputs));\n            this.log(`[end][${id}] assignOutputs:`, outputs);\n        }\n    }\n    assignOutput(name, output, outputs) {\n        if (output !== undefined) {\n            const binding = this.findOutputByName(outputs, name) || name;\n            const store = this.stores[binding];\n            if (!store) {\n                if (outputs?.[name]) {\n                    this.log.warn(`assignOutputs: no \"${binding}\" store for output \"${name}\"`);\n                }\n            }\n            else {\n                // Note: users can mess up output data in any way they see fit, so we should\n                // probably invent `outputCleansing`.\n                this.log(`assignOutputs: \"${name}\" is dirty, updating Store \"${binding}\"`, output);\n                store.data = output;\n            }\n        }\n    }\n    findOutputByName(outputs, name) {\n        const output = outputs?.find(output => keys(output || 0)[0] === name);\n        if (output) {\n            return values(output)[0];\n        }\n    }\n    async render(packet) {\n        if (this.composer) {\n            this.composer.render(packet);\n        }\n        else {\n            //this.log.low('render called, but composer is null', packet);\n        }\n    }\n    onevent(pid, eventlet) {\n        const host = this.hosts[pid];\n        if (host) {\n            host.handleEvent(eventlet);\n        }\n    }\n    async service(host, request) {\n        let result = await this.surface?.service(request);\n        if (result === undefined) {\n            result = this.hostService?.(host, request);\n        }\n        return result;\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/*\n * update the fields of `obj` with the fields of `data`,\n * perturbing `obj` as little as possible (since it might be a magic proxy thing\n * like an Automerge document)\n */\nexport const shallowUpdate = (obj, data) => {\n    let result = data;\n    if (!data) {\n        //\n    }\n    else if (Array.isArray(data)) {\n        if (!Array.isArray(obj)) {\n            // TODO(sjmiles): eek, very perturbing to obj\n            obj = [];\n        }\n        for (let i = 0; i < data.length; i++) {\n            const value = data[i];\n            if (obj[i] !== value) {\n                obj[i] = value;\n            }\n        }\n        const overage = obj.length - data.length;\n        if (overage > 0) {\n            obj.splice(data.length, overage);\n        }\n    }\n    else if (typeof data === 'object') {\n        result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n        const seen = {};\n        // for each key in input data ...\n        Object.keys(data).forEach(key => {\n            // copy that data into output\n            result[key] = data[key];\n            // remember the key\n            seen[key] = true;\n        });\n        // for each key in the output data...\n        Object.keys(result).forEach(key => {\n            // if this key was not in the input, remove it\n            if (!seen[key]) {\n                delete result[key];\n            }\n        });\n    }\n    return result;\n};\nexport const shallowMerge = (obj, data) => {\n    if (data == null) {\n        return null;\n    }\n    if (typeof data === 'object') {\n        const result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n        Object.keys(data).forEach(key => result[key] = data[key]);\n        return result;\n    }\n    return data;\n};\nexport function deepCopy(datum) {\n    if (!datum) {\n        return datum;\n    }\n    else if (Array.isArray(datum)) {\n        // This is trivially type safe but tsc needs help\n        return datum.map(element => deepCopy(element));\n    }\n    else if (typeof datum === 'object') {\n        const clone = Object.create(null);\n        Object.entries(datum).forEach(([key, value]) => {\n            clone[key] = deepCopy(value);\n        });\n        return clone;\n    }\n    else {\n        return datum;\n    }\n}\nexport const deepEqual = (a, b) => {\n    const type = typeof a;\n    // must be same type to be equal\n    if (type !== typeof b) {\n        return false;\n    }\n    // we are `deep` because we recursively study object types\n    if (type === 'object' && a && b) {\n        const aProps = Object.getOwnPropertyNames(a);\n        const bProps = Object.getOwnPropertyNames(b);\n        // equal if same # of props, and no prop is not deepEqual\n        return (aProps.length == bProps.length) && !aProps.some(name => !deepEqual(a[name], b[name]));\n    }\n    // finally, perform simple comparison\n    return (a === b);\n};\nexport const deepUndefinedToNull = (obj) => {\n    if (obj === undefined) {\n        return null;\n    }\n    if (obj && (typeof obj === 'object')) {\n        // we are `deep` because we recursively study object types\n        const props = Object.getOwnPropertyNames(obj);\n        props.forEach(name => {\n            const prop = obj[name];\n            if (prop === undefined) {\n                delete obj[name];\n                //obj[name] = null;\n            }\n            else {\n                deepUndefinedToNull(prop);\n            }\n        });\n    }\n    return obj;\n};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nconst { floor, pow, random } = Math;\n// random n-digit number\nexport const key = (digits) => floor((1 + random() * 9) * pow(10, digits - 1));\n// random integer from [0..range)\nexport const irand = (range) => floor(random() * range);\n// random element from array\nexport const arand = (array) => array[irand(array.length)];\n// test if event has occured, where `probability` is between [0..1]\nexport const prob = (probability) => Boolean(random() < probability);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { deepCopy } from '../utils/object.js';\nconst log = logFactory(logFactory.flags.decorator, 'Decorator', 'plum');\nconst { values, entries } = Object;\nconst opaqueData = {};\nexport const Decorator = {\n    setOpaqueData(name, data) {\n        opaqueData[name] = data; //deepCopy(data);\n        return name;\n    },\n    getOpaqueData(name) {\n        return opaqueData[name];\n    },\n    maybeDecorateModel(model, particle) {\n        if (model && !Array.isArray(model)) {\n            // for each item in model, regardless of key\n            values(model).forEach((item) => {\n                // is an object?\n                if (item && (typeof item === 'object')) {\n                    // are there sub-models\n                    if (item['models']) {\n                        // the decorate this item\n                        log('applying decorator(s) to list:', item);\n                        this.maybeDecorateItem(item, particle);\n                    }\n                    else {\n                        // otherwise, check if there are sub-items to decorate\n                        if (model?.filter || model?.decorator || model?.collateBy) {\n                            log('scanning for lists in sub-model:', item);\n                            this.maybeDecorateModel(item, particle);\n                        }\n                    }\n                }\n            });\n        }\n        // possibly decorated model\n        return model;\n    },\n    maybeDecorateItem(item, particle) {\n        let models = (typeof item.models === 'string') ? this.getOpaqueData(item.models) : item.models;\n        if (models) {\n            // do a decorator\n            models = maybeDecorate(models, item.decorator, particle);\n            // do a filter\n            models = maybeFilter(models, item.filter, particle.impl);\n            // do a collator\n            models = maybeCollateBy(models, item);\n            // mutate items\n            item.models = models;\n            //console.log(JSON.stringify(models, null, '  '));\n        }\n    },\n};\nconst maybeDecorate = (models, decorator, particle) => {\n    decorator = particle.impl[decorator] ?? decorator;\n    const { inputs, state } = particle.internal;\n    if (decorator) {\n        // TODO(cromwellian): Could be expensive to do everything, store responsibility?\n        const immutableInputs = Object.freeze(deepCopy(inputs));\n        // we don't want the decorator to have access to mutable globals\n        const immutableState = Object.freeze(deepCopy(state));\n        // models become decorous\n        models = models.map(model => {\n            // use previously mutated data or initialize\n            // TODO(cromwellian): I'd like to do Object.freeze() here, also somehow not mutate the models inplace\n            // Possibly have setOpaqueData wrap the data so the privateData lives on the wrapper + internal immutable data\n            model.privateData = model.privateData || {};\n            // TODO(cromwellian): also could be done once during setOpaqueData() if we can track privateData differently\n            const immutableModel = Object.freeze(deepCopy(model));\n            const decorated = decorator(immutableModel, immutableInputs, immutableState);\n            // set new privateData from returned\n            model.privateData = decorated.privateData;\n            return { ...decorated, ...model, };\n        });\n        // sort (possible that all values undefined)\n        models.sort(sortByLc('sortKey'));\n        log('decoration was performed');\n    }\n    //models.forEach(model => delete model.privateData);\n    return models;\n};\nconst maybeFilter = (models, filter, impl) => {\n    filter = impl[filter] ?? filter;\n    if (filter && models) {\n        // models become filtrated\n        models = models.filter(filter);\n    }\n    return models;\n};\nconst maybeCollateBy = (models, item) => {\n    // construct requested sub-lists\n    entries(item).forEach(([name, collator]) => {\n        // generate named collations for items of the form `[name]: {collateBy}`\n        if (collator?.['collateBy']) {\n            // group the models into buckets based on the model-field named by `collateBy`\n            const collation = collate(models, collator['collateBy']);\n            models = collationToRenderModels(collation, name, collator['$template']);\n        }\n    });\n    return models;\n};\nconst sortByLc = key => (a, b) => sort(String(a[key]).toLowerCase(), String(b[key]).toLowerCase());\n//const sortBy = key => (a, b) => sort(a[key], b[key]);\nconst sort = (a, b) => a < b ? -1 : a > b ? 1 : 0;\nconst collate = (models, collateBy) => {\n    const collation = {};\n    models.forEach(model => {\n        const keyValue = model[collateBy];\n        if (keyValue) {\n            const category = collation[keyValue] || (collation[keyValue] = []);\n            category.push(model);\n        }\n    });\n    return collation;\n};\nconst collationToRenderModels = (collation, name, $template) => {\n    return entries(collation).map(([key, models]) => ({\n        key,\n        [name]: { models, $template },\n        single: !(models['length'] !== 1),\n        ...models?.[0]\n    }));\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { deepEqual, deepCopy } from '../utils/object.js';\nimport { arand } from '../utils/rand.js';\nimport { EventEmitter } from './EventEmitter.js';\nimport { Decorator } from './Decorator.js';\nconst { entries, keys } = Object;\nconst customLogFactory = (id) => logFactory(logFactory.flags.host, `Host (${id})`, arand(['#5a189a', '#51168b', '#48137b', '#6b2fa4', '#7b46ae', '#3f116c']));\n/**\n * Host owns metadata (e.g. `id`, `container`) that its Particle is not allowed to access.\n * Host knows how to talk, asynchronously, to its Particle (potentially using a bus).\n**/\n/* TODO(sjmiles):\nUpdate Cycle Documented Briefly\n1. when a Store changes it invokes it's listeners\n2. when an Arc hears a Store change, it updates Hosts bound to the Store\n3. Arc updates Host by creating an `inputs` object from Stores and metadata\n   - ignores fact inputs are accumulated\n   - ignores information about which Store has updated\n4. `inputs` object is assigned to `hosts.inputs` \uD83D\uDE43\n5. Host does an expensive `deepEqual` equality check. Turning on `host` logging should reveal `this.log('inputs are not interesting, skipping update');` if data is caught in this trap\n   - we can use reference testing here if we are more careful\n     about using immutable data\n6. the particle.inputs are assigned (but is really a *merge*)\n*/\nexport class Host extends EventEmitter {\n    arc;\n    id;\n    lastOutput;\n    lastPacket;\n    lastRenderModel;\n    log;\n    meta;\n    particle;\n    constructor(id) {\n        super();\n        this.log = customLogFactory(id);\n        this.id = id;\n    }\n    onevent(eventlet) {\n        this.arc?.onevent(eventlet);\n    }\n    // Particle and ParticleMeta are separate, host specifically integrates these on behalf of Particle\n    installParticle(particle, meta) {\n        if (this.particle) {\n            this.detachParticle();\n        }\n        if (particle) {\n            this.particle = particle;\n            this.meta = meta || this.meta;\n        }\n    }\n    get container() {\n        return this.meta?.container || 'root';\n    }\n    detach() {\n        this.detachParticle();\n        this.arc = null;\n    }\n    detachParticle() {\n        if (this.particle) {\n            this.render({ $clear: true });\n            this.particle = null;\n            this.meta = null;\n        }\n    }\n    async service(request) {\n        if (request?.decorate) {\n            return Decorator.maybeDecorateModel(request.model, this.particle);\n        }\n        return this.arc?.service(this, request);\n    }\n    output(outputModel, renderModel) {\n        if (outputModel) {\n            this.lastOutput = outputModel;\n            this.arc?.assignOutputs(this, outputModel);\n        }\n        if (this.template) {\n            Decorator.maybeDecorateModel(renderModel, this.particle);\n            this.lastRenderModel = { ...renderModel };\n            this.render(renderModel);\n        }\n    }\n    rerender() {\n        // does not re-render Frame/Slot content\n        // you probably want Arc::rerender\n        if (this.lastRenderModel) {\n            this.render(this.lastRenderModel);\n        }\n    }\n    render(model) {\n        const { id, container, template } = this;\n        const content = { model, template };\n        const packet = { id, container, content };\n        this.arc?.render(packet);\n        this.lastPacket = packet;\n    }\n    set inputs(inputs) {\n        if (this.particle && inputs) {\n            const lastInputs = this.particle.internal.inputs;\n            if (this.dirtyCheck(inputs, lastInputs, this.lastOutput)) {\n                // this.particle.inputs = {...this.meta?.staticInputs, ...deepCopy(inputs)}; //...inputs};\n                this.particle.inputs = deepCopy({ ...this.meta?.staticInputs, ...inputs });\n                this.fire('inputs-changed');\n            }\n            else {\n                this.log('inputs are uninteresting, skipping update');\n            }\n        }\n    }\n    dirtyCheck(inputs, lastInputs, lastOutput) {\n        const dirtyBits = ([n, v]) => (lastOutput?.[n] && !deepEqual(lastOutput[n], v))\n            || !deepEqual(lastInputs?.[n], v);\n        return !lastInputs\n            || entries(inputs).length !== this.lastInputsLength(lastInputs)\n            || entries(inputs).some(dirtyBits);\n    }\n    lastInputsLength(lastInputs) {\n        return keys(lastInputs).filter(key => !this.meta?.staticInputs?.[key] && key !== 'eventlet').length;\n    }\n    get config() {\n        return this.particle?.config;\n    }\n    get template() {\n        return this.config?.template;\n    }\n    invalidate() {\n        this.particle?.invalidate();\n    }\n    handleEvent(eventlet) {\n        return this.particle?.handleEvent(eventlet);\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { EventEmitter } from './EventEmitter.js';\nconst { create, keys } = Object;\nconst { stringify, parse } = JSON;\nexport class DataStore extends EventEmitter {\n    privateData;\n    constructor() {\n        super();\n    }\n    setPrivateData(data) {\n        this.privateData = data;\n    }\n    set data(data) {\n        this.setPrivateData(data);\n    }\n    get data() {\n        return this.privateData;\n    }\n    toString() {\n        return this.pretty;\n    }\n    get isObject() {\n        return this.data && typeof this.data === 'object';\n    }\n    get pojo() {\n        return this.data;\n    }\n    get json() {\n        return stringify(this.data);\n    }\n    set json(json) {\n        let value = null;\n        try {\n            value = parse(json);\n        }\n        catch (x) {\n            //\n        }\n        this.data = value;\n    }\n    get pretty() {\n        const sorted = {};\n        const pojo = this.pojo;\n        keys(pojo).sort().forEach(key => sorted[key] = pojo[key]);\n        return stringify(sorted, null, '  ');\n    }\n}\nclass ObservableStore extends DataStore {\n    change(mutator) {\n        mutator(this);\n        this.doChange();\n    }\n    doChange() {\n        this.fire('change', this);\n        this.onChange(this);\n    }\n    onChange(store) {\n        // override\n    }\n    set data(data) {\n        this.change(self => self.setPrivateData(data));\n    }\n    // TODO(sjmiles): one of the compile/build/bundle tools\n    // evacipates the inherited getter, so we clone it\n    get data() {\n        return this['privateData'];\n    }\n    set(key, value) {\n        if (!this.data) {\n            this.setPrivateData(create(null));\n        }\n        if (value !== undefined) {\n            this.change(self => self.data[key] = value);\n        }\n        else {\n            this.delete(key);\n        }\n    }\n    delete(key) {\n        this.change(doc => delete doc.data[key]);\n    }\n}\nclass PersistableStore extends ObservableStore {\n    meta;\n    constructor(meta) {\n        super();\n        this.meta = { ...meta };\n    }\n    toString() {\n        return `${JSON.stringify(this.meta, null, '  ')}, ${this.pretty}`;\n    }\n    get tags() {\n        return this.meta.tags ?? (this.meta.tags = []);\n    }\n    is(...tags) {\n        // true if every member of `tags` is also in `this.tags`\n        return tags.every(tag => this.tags.includes(tag));\n    }\n    isCollection() {\n        return this.meta.type?.[0] === '[';\n    }\n    shouldPersist() {\n        return this.is('persisted') && !this.is('volatile');\n    }\n    async doChange() {\n        // do not await\n        this.persist();\n        return super.doChange();\n    }\n    // TODO(sjmiles): as of now the persist/restore methods\n    // are bound in Runtime:addStore\n    async persist() {\n    }\n    async restore( /*value: any*/) {\n    }\n    // delete() {\n    //   this.persistor?.remove(this);\n    // }\n    save() {\n        return this.json;\n    }\n    load(serial, defaultValue) {\n        let value = defaultValue;\n        try {\n            if (serial) {\n                value = parse(serial);\n            }\n        }\n        catch (x) {\n            //\n        }\n        if (value !== undefined) {\n            this.data = value;\n        }\n    }\n}\nexport class Store extends PersistableStore {\n}\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { irand } from \"./rand.js\";\nexport const makeId = (pairs, digits, delim) => {\n    pairs = pairs || 2;\n    digits = digits || 2;\n    delim = delim || '-';\n    const min = Math.pow(10, digits - 1);\n    const range = Math.pow(10, digits) - min;\n    const result = [];\n    for (let i = 0; i < pairs; i++) {\n        result.push(`${irand(range - min) + min}`);\n    }\n    return result.join(delim);\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { Arc } from './core/Arc.js';\nimport { Host } from './core/Host.js';\nimport { Store } from './core/Store.js';\nimport { EventEmitter } from './core/EventEmitter.js';\nimport { logFactory } from './utils/log.js';\nimport { makeId } from './utils/id.js';\nconst log = logFactory(logFactory.flags.runtime, 'runtime', '#873600');\nconst particleFactoryCache = {};\nconst storeFactories = {};\nconst { keys } = Object;\nexport class Runtime extends EventEmitter {\n    log;\n    uid; // user id\n    nid; // network id\n    arcs;\n    stores;\n    peers;\n    shares;\n    endpoint;\n    network;\n    surfaces;\n    persistor;\n    prettyUid;\n    static securityLockdown;\n    static particleIndustry;\n    static particleOptions;\n    constructor(uid) {\n        uid = uid || 'user';\n        super();\n        this.arcs = {};\n        this.surfaces = {};\n        this.stores = {};\n        this.peers = new Set();\n        this.shares = new Set();\n        this.setUid(uid);\n        this.log = logFactory(logFactory.flags.runtime, `runtime:[${this.prettyUid}]`, '#873600');\n        //Runtime.securityLockdown?.(Runtime.particleOptions);\n    }\n    setUid(uid) {\n        this.uid = uid;\n        this.nid = `${uid}:${makeId(1, 2)}`;\n        this.prettyUid = uid.substring(0, uid.indexOf('@') + 1) || uid;\n    }\n    async bootstrapArc(name, meta, surface, service) {\n        // make an arc on `surface`\n        const arc = new Arc(name, meta, surface);\n        // install service handler\n        arc.hostService = this.serviceFactory(service);\n        // add `arc` to runtime\n        await this.addArc(arc);\n        // fin\n        return arc;\n    }\n    serviceFactory(service) {\n        return async (host, request) => service.handle(this, host, request);\n    }\n    async bootstrapParticle(arc, id, meta) {\n        // make a host\n        const host = new Host(id);\n        // make a particle\n        await this.marshalParticle(host, meta);\n        // add `host` to `arc`\n        const promise = arc.addHost(host);\n        // report\n        log('bootstrapped particle', id);\n        //log(host);\n        // we'll call you when it's ready\n        return promise;\n    }\n    // no-op surface mapping\n    addSurface(id, surface) {\n        this.surfaces[id] = surface;\n    }\n    getSurface(id) {\n        return this.surfaces[id];\n    }\n    // map arcs by arc.id\n    addArc(arc) {\n        const { id } = arc;\n        if (id && !this.arcs[id]) {\n            return this.arcs[id] = arc;\n        }\n        throw `arc has no id, or id \"${id}\" is already in use`;\n    }\n    removeArc(arc) {\n        const { id } = arc;\n        if (!id || !this.arcs[id]) {\n            throw !id ? `arc has no id` : `id \"${id}\" is not in use`;\n        }\n        delete this.arcs[id];\n    }\n    // create a particle inside of host\n    async marshalParticle(host, particleMeta) {\n        const particle = await this.createParticle(host, particleMeta.kind);\n        host.installParticle(particle, particleMeta);\n    }\n    // create a host, install a particle, add host to arc\n    async installParticle(arc, particleMeta, name) {\n        this.log('installParticle', name, particleMeta, arc.id);\n        // provide a default name\n        name = name || makeId();\n        // deduplicate name\n        if (arc.hosts[name]) {\n            let n = 1;\n            for (; (arc.hosts[`${name}-${n}`]); n++)\n                ;\n            name = `${name}-${n}`;\n        }\n        // build the structure\n        const host = new Host(name);\n        await this.marshalParticle(host, particleMeta);\n        arc.addHost(host);\n        return host;\n    }\n    // map a store by a Runtime-specific storeId\n    // Stores have no intrinsic id\n    addStore(storeId, store) {\n        // if the store needs to discuss things with Runtime\n        // TODO(sjmiles): this is likely unsafe for re-entry\n        if (store.marshal) {\n            store.marshal(this);\n        }\n        // bind to persist/restore functions\n        store.persist = async () => this.persistStore(storeId, store);\n        store.restore = async () => this.restoreStore(storeId, store);\n        // override the Store's own persistor to use the runtime persistor\n        // TODO(sjmiles): why?\n        // if (store.persistor) {\n        //   store.persistor.persist = store => this.persistor?.persist(storeId, store);\n        // }\n        // bind this.storeChanged to store.change (and name the binding)\n        const name = `${this.nid}:${storeId}-changed`;\n        const onChange = this.storeChanged.bind(this, storeId);\n        store.listen('change', onChange, name);\n        // map the store\n        this.stores[storeId] = store;\n        // evaluate for sharing\n        this.maybeShareStore(storeId);\n        // notify listeners that a thing happened\n        // TODO(sjmiles): makes no sense without id\n        //this.fire('store-added', store);\n    }\n    async persistStore(storeId, store) {\n        if (store.shouldPersist()) {\n            this.log(`persistStore \"${storeId}\"`);\n            return this.persistor.persist?.(storeId, store);\n        }\n    }\n    async restoreStore(storeId, store) {\n        if (store.shouldPersist()) {\n            this.log(`restoreStore \"${storeId}\"`);\n            return this.persistor.restore?.(storeId);\n        }\n    }\n    storeChanged(storeId, store) {\n        this.log('storeChanged', storeId);\n        this.network?.invalidatePeers(storeId);\n        this.onStoreChange(storeId, store);\n        this.fire('store-changed', { storeId, store });\n    }\n    // TODO(sjmiles): evacipate this method\n    onStoreChange(storeId, store) {\n        // override for bespoke response\n    }\n    do(storeId, task) {\n        task(this.stores[storeId]);\n    }\n    removeStore(storeId) {\n        this.do(storeId, store => {\n            store?.unlisten('change', `${this.nid}:${storeId}-changed`);\n        });\n        delete this.stores[storeId];\n    }\n    maybeShareStore(storeId) {\n        this.do(storeId, store => {\n            if (store?.is('shared')) {\n                this.shareStore(storeId);\n            }\n        });\n    }\n    addPeer(peerId) {\n        this.peers.add(peerId);\n        [...this.shares].forEach(storeId => this.maybeShareStoreWithPeer(storeId, peerId));\n    }\n    shareStore(storeId) {\n        this.shares.add(storeId);\n        [...this.peers].forEach(peerId => this.maybeShareStoreWithPeer(storeId, peerId));\n    }\n    maybeShareStoreWithPeer(storeId, peerId) {\n        this.do(storeId, store => {\n            const nid = this.uid.replace(/\\./g, '_');\n            if (!store.is('private') || (peerId.startsWith(nid))) {\n                this.shareStoreWithPeer(storeId, peerId);\n            }\n        });\n    }\n    shareStoreWithPeer(storeId, peerId) {\n        this.network?.shareStore(storeId, peerId);\n    }\n    async createParticle(host, kind) {\n        try {\n            const factory = await this.marshalParticleFactory(kind);\n            return factory(host);\n        }\n        catch (x) {\n            log.error(`createParticle(${kind}):`, x);\n        }\n    }\n    async marshalParticleFactory(kind) {\n        return particleFactoryCache[kind] ?? this.lateBindParticle(kind);\n    }\n    lateBindParticle(kind) {\n        return Runtime.registerParticleFactory(kind, Runtime?.particleIndustry(kind, Runtime.particleOptions));\n    }\n    static registerParticleFactory(kind, factoryPromise) {\n        return particleFactoryCache[kind] = factoryPromise;\n    }\n    requireStore(meta) {\n        let store = this.stores[meta.name];\n        if (!store) {\n            store = this.createStore(meta);\n            this.addStore(meta.name, store);\n        }\n        return store;\n    }\n    createStore(meta) {\n        const key = keys(storeFactories).find(tag => meta.tags?.includes?.(tag));\n        const storeClass = storeFactories[String(key)] || Store;\n        return new storeClass(meta);\n    }\n    static registerStoreClass(tag, storeClass) {\n        storeFactories[tag] = storeClass;\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nconst log = logFactory(logFactory.flags.recipe, 'flan', 'violet');\nconst { entries, create } = Object;\nexport class Parser {\n    stores;\n    particles;\n    slots;\n    meta;\n    constructor(recipe) {\n        this.stores = [];\n        this.particles = [];\n        this.slots = [];\n        this.meta = create(null);\n        if (recipe) {\n            this.parse(recipe);\n        }\n    }\n    parse(recipe) {\n        // `normalize` converts shorthand to longhand before parsing\n        const normalized = this.normalize(recipe);\n        this.parseSlotSpec(normalized, 'root', '');\n        return this;\n    }\n    normalize(recipe) {\n        if (typeof recipe !== 'object') {\n            throw Error('recipe must be an Object');\n        }\n        // TODO(sjmiles): would be great if `normalize` normalized all the things\n        return recipe;\n    }\n    parseSlotSpec(spec, slotName, parentName) {\n        // process entries\n        for (const key in spec) {\n            switch (key) {\n                case '$meta':\n                    // value is a dictionary\n                    this.meta = { ...this.meta, ...spec.$meta };\n                    break;\n                case '$stores':\n                    // value is a StoreSpec\n                    this.parseStoresNode(spec.$stores);\n                    break;\n                default: {\n                    // value is a ParticleSpec\n                    const container = parentName ? `${parentName}#${slotName}` : slotName;\n                    this.parseParticleSpec(container, key, spec[key]);\n                    break;\n                }\n            }\n        }\n    }\n    parseStoresNode(stores) {\n        for (const key in stores) {\n            this.parseStoreSpec(key, stores[key]);\n        }\n    }\n    parseStoreSpec(name, spec) {\n        if (this.stores.find(s => s.name === name)) {\n            log('duplicate store name');\n            return;\n        }\n        const meta = {\n            name,\n            type: spec.$type,\n            tags: spec.$tags,\n            value: spec.$value\n        };\n        this.stores.push(meta);\n    }\n    parseParticleSpec(container, id, spec) {\n        if (!spec.$kind) {\n            log.warn(`parseParticleSpec: malformed spec has no \"kind\":`, spec);\n            throw Error();\n        }\n        if (this.particles.find(s => s.id === id)) {\n            log('duplicate particle name');\n            return;\n        }\n        this.particles.push({ id, container, spec });\n        if (spec.$slots) {\n            this.parseSlotsNode(spec.$slots, id);\n        }\n    }\n    parseSlotsNode(slots, parent) {\n        entries(slots).forEach(([key, spec]) => this.parseSlotSpec(spec, key, parent));\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport function matches(candidateMeta, targetMeta) {\n    for (const property in targetMeta) {\n        if (candidateMeta[property] !== targetMeta[property]) {\n            return false;\n        }\n    }\n    return true;\n}\n;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { matches } from '../utils/matching.js';\nconst log = logFactory(logFactory.flags.recipe, 'StoreCook', '#99bb15');\nconst { values } = Object;\nconst findStores = (runtime, criteria) => {\n    return values(runtime.stores).filter(store => matches(store?.meta, criteria));\n};\nconst mapStore = (runtime, { name, type }) => {\n    // TODO(b/244191110): Type matching API to be wired here.\n    return findStores(runtime, { name, type })?.[0];\n};\nexport class StoreCook {\n    static async execute(runtime, arc, stores) {\n        return this.forEachStore(this.realizeStore, runtime, arc, stores);\n    }\n    static async evacipate(runtime, arc, stores) {\n        return this.forEachStore(this.derealizeStore, runtime, arc, stores);\n    }\n    static async forEachStore(task, runtime, arc, stores) {\n        return Promise.all(stores.map(store => task.call(this, runtime, arc, store)));\n    }\n    static async realizeStore(runtime, arc, rawMeta) {\n        const meta = this.constructMeta(runtime, arc, rawMeta);\n        let value = meta?.value;\n        let store = mapStore(runtime, meta);\n        if (store) {\n            log(`realizeStore: mapped \"${rawMeta.name}\" to \"${store.meta.name}\"`);\n        }\n        else {\n            store = runtime.createStore(meta);\n            log(`realizeStore: created \"${meta.name}\"`);\n            // TODO(sjmiles): Stores no longer know their own id, so there is a wrinkle here as we\n            // re-route persistence through runtime (so we can bind in the id)\n            // Also: the 'id' is known as 'meta.name' here, this is also a problem\n            // store && (store.persistor = {\n            //   restore: store => runtime.persistor?.restore(meta.name, store),\n            //   persist: () => {}\n            // });\n            // runtime.addStore(meta.name, store);\n            //await store?.restore(meta?.value)\n            runtime.addStore(meta.name, store);\n            if (store.shouldPersist()) {\n                const cached = await store.restore();\n                value = cached === undefined ? value : cached;\n            }\n        }\n        if (value !== undefined) {\n            log(`setting data to:`, value);\n            store.data = value;\n        }\n        arc.addStore(meta.name, store);\n    }\n    static async derealizeStore(runtime, arc, spec) {\n        runtime.removeStore(spec.$name);\n        arc.removeStore(spec.$name);\n    }\n    static constructMeta(runtime, arc, rawMeta) {\n        const meta = {\n            ...rawMeta,\n            arcid: arc.id,\n            uid: runtime.uid,\n        };\n        return {\n            ...meta,\n            owner: meta.uid,\n            shareid: `${meta.name}:${meta.arcid}:${meta.uid}`\n        };\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nconst log = logFactory(logFactory.flags.recipe, 'ParticleCook', '#5fa530');\nexport class ParticleCook {\n    static async execute(runtime, arc, particles) {\n        // serial\n        for (const particle of particles) {\n            await this.realizeParticle(runtime, arc, particle);\n        }\n        // parallel\n        //return Promise.all(particles.map(particle => this.realizeParticle(runtime, arc, particle)));\n    }\n    static async realizeParticle(runtime, arc, node) {\n        log('realizedParticle:', node.id);\n        // convert spec to metadata\n        const meta = this.specToMeta(node.spec);\n        meta.container ||= node.container;\n        // make a (hosted) particle\n        return runtime.bootstrapParticle(arc, node.id, meta);\n    }\n    static specToMeta(spec) {\n        if (spec.$bindings) {\n            console.warn(`Particle '${spec.$kind}' spec contains deprecated $bindings property (${JSON.stringify(spec.$bindings)})`);\n        }\n        // TODO(sjmiles): impedance mismatch here is likely to cause problems\n        const { $kind: kind, $container: container, $staticInputs: staticInputs } = spec;\n        const inputs = this.formatBindings(spec.$inputs);\n        const outputs = this.formatBindings(spec.$outputs);\n        return { kind, staticInputs, inputs, outputs, container };\n    }\n    static formatBindings(bindings) {\n        return bindings?.map?.(binding => typeof binding === 'string' ? { [binding]: binding } : binding);\n    }\n    static async evacipate(runtime, arc, particles) {\n        return Promise.all(particles.map(particle => this.derealizeParticle(runtime, arc, particle)));\n    }\n    static async derealizeParticle(runtime, arc, node) {\n        arc.removeHost(node.id);\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logFactory } from '../utils/log.js';\nimport { Parser } from './RecipeParser.js';\nimport { StoreCook } from './StoreCook.js';\nimport { ParticleCook } from './ParticleCook.js';\nconst log = logFactory(logFactory.flags.recipe, 'Chef', '#087f23');\nexport class Chef {\n    static async execute(recipe, runtime, arc) {\n        if (arc instanceof Promise) {\n            log.error('`arc` must be an Arc, not a Promise. Make sure `boostrapArc` is awaited.');\n            return;\n        }\n        //log.groupCollapsed('executing recipe...', recipe.$meta);\n        log('|-->...| executing recipe: ', recipe.$meta ?? '');\n        const plan = new Parser(recipe);\n        // `store` preparation\n        await StoreCook.execute(runtime, arc, plan.stores);\n        // `particle` preparation\n        await ParticleCook.execute(runtime, arc, plan.particles);\n        // seasoning\n        // TODO(sjmiles): what do we use this for?\n        arc.meta = { ...arc.meta, ...plan.meta };\n        log('|...-->| recipe complete: ', recipe.$meta ?? '');\n        //log.groupEnd();\n    }\n    static async evacipate(recipe, runtime, arc) {\n        //log.groupCollapsed('evacipating recipe...', recipe.$meta);\n        log('|-->...| evacipating recipe: ', recipe.$meta);\n        // TODO(sjmiles): this is work we already did\n        const plan = new Parser(recipe);\n        // `store` work\n        // TODO(sjmiles): not sure what stores are unique to this plan\n        //await StoreCook.evacipate(runtime, arc, plan);\n        // `particle` work\n        await ParticleCook.evacipate(runtime, arc, plan.particles);\n        // seasoning\n        // TODO(sjmiles): doh\n        //arc.meta = {...arc.meta, ...plan.meta};\n        log('|...-->| recipe evacipated: ', recipe.$meta);\n        //log.groupEnd();\n    }\n    static async executeAll(recipes, runtime, arc) {\n        for (const recipe of recipes) {\n            await this.execute(recipe, runtime, arc);\n        }\n        //return Promise.all(recipes?.map(recipe => this.execute(recipe, runtime, arc)));\n    }\n    static async evacipateAll(recipes, runtime, arc) {\n        return Promise.all(recipes?.map(recipe => this.evacipate(recipe, runtime, arc)));\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const PathMapper = class {\n    map;\n    constructor(root) {\n        this.map = {};\n        this.setRoot(root);\n    }\n    add(mappings) {\n        Object.assign(this.map, mappings || {});\n    }\n    resolve(path) {\n        const bits = path.split('/');\n        const top = bits.shift();\n        const prefix = this.map[top] || top;\n        return [prefix, ...bits].join('/');\n    }\n    setRoot(root) {\n        if (root.length && root[root.length - 1] === '/') {\n            root = root.slice(0, -1);\n        }\n        this.add({\n            '$root': root,\n            '$arcs': root\n        });\n    }\n    getAbsoluteHereUrl(meta, depth) {\n        // you are here\n        const localRelative = meta.url.split('/').slice(0, -(depth ?? 1)).join('/');\n        if (!globalThis?.document) {\n            return localRelative;\n        }\n        else {\n            // document root is here\n            let base = document.URL;\n            // if document URL has a filename, remove it\n            if (base[base.length - 1] !== '/') {\n                base = `${base.split('/').slice(0, -1).join('/')}/`;\n            }\n            // create absoute path to here (aka 'local')\n            let localAbsolute = new URL(localRelative, base).href;\n            // no trailing slash!\n            if (localAbsolute[localAbsolute.length - 1] === '/') {\n                localAbsolute = localAbsolute.slice(0, -1);\n            }\n            return localAbsolute;\n        }\n    }\n};\nconst root = import.meta.url.split('/').slice(0, -3).join('/');\nexport const Paths = globalThis['Paths'] = new PathMapper(root);\nPaths.add(globalThis.config?.paths);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { Paths } from '../utils/paths.js';\nimport { logFactory } from '../utils/log.js';\nconst log = logFactory(logFactory.flags.code, 'code', 'gold');\nconst defaultParticleBasePath = '$arcs/js/core/Particle.js';\nexport const requireParticleBaseCode = async (sourcePath) => {\n    if (!requireParticleBaseCode.source) {\n        const path = Paths.resolve(sourcePath || defaultParticleBasePath);\n        log('particle base code path: ', path);\n        const response = await fetch(path);\n        const moduleText = await response.text() + \"\\n//# sourceURL=\" + path + \"\\n\";\n        requireParticleBaseCode.source = moduleText.replace(/export /g, '');\n    }\n    return requireParticleBaseCode.source;\n};\nrequireParticleBaseCode.source = null;\nexport const requireParticleImplCode = async (kind, options) => {\n    const code = options?.code || await fetchParticleCode(kind);\n    // TODO(sjmiles): brittle content processing, needs to be documented\n    return code.slice(code.indexOf('({'));\n};\nexport const fetchParticleCode = async (kind) => {\n    if (kind) {\n        return await maybeFetchParticleCode(kind);\n    }\n    log.error(`fetchParticleCode: empty 'kind'`);\n};\nexport const maybeFetchParticleCode = async (kind) => {\n    const path = pathForKind(kind);\n    try {\n        const response = await fetch(path);\n        //if (response.ok) {\n        return await response.text();\n        //}\n    }\n    catch (x) {\n        log.error(`could not locate implementation for particle \"${kind}\" [${path}]`);\n    }\n};\nexport const pathForKind = (kind) => {\n    if (kind) {\n        if (!'$./'.includes(kind[0]) && !kind.includes('://')) {\n            kind = `$library/${kind}`;\n        }\n        if (!kind?.split('/').pop().includes('.')) {\n            kind = `${kind}.js`;\n        }\n        return Paths.resolve(kind);\n    }\n    return '404';\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { Paths } from '../utils/paths.js';\nimport { Runtime } from '../Runtime.js';\nimport { logFactory } from '../utils/log.js';\nimport { deepEqual } from '../utils/object.js';\nimport { requireParticleImplCode, pathForKind } from './code.js';\nconst log = logFactory(logFactory.flags.isolation, 'vanilla', 'goldenrod');\nconst harden = object => object;\nglobalThis.harden = harden;\nglobalThis.scope = {\n    harden\n};\nconst makeKey = () => `i${Math.floor((1 + Math.random() * 9) * 1e14)}`;\nconst timeout = async (func, delayMs) => new Promise(resolve => setTimeout(() => resolve(func()), delayMs));\nexport const initVanilla = (options) => {\n    // requiredLog.groupCollapsed('LOCKDOWN');\n    try {\n        log(deepEqual);\n        const utils = { log, resolve, html, makeKey, deepEqual, timeout };\n        const scope = {\n            // default injections\n            ...utils,\n            // app injections\n            ...options?.injections,\n        };\n        Object.assign(globalThis.scope, scope);\n        Object.assign(globalThis, scope);\n    }\n    finally {\n        /**/\n    }\n};\nconst resolve = Paths.resolve.bind(Paths);\nconst html = (strings, ...values) => `${strings[0]}${values.map((v, i) => `${v}${strings[i + 1]}`).join('')}`.trim();\nconst createParticleFactory = async (kind, options) => {\n    // ensure our canonical Particle class exists in the isolation chamber\n    const { Particle } = await import('../core/Particle.js');\n    //const Particle = await requireParticle();\n    // // evaluate custom code in isolation chamber\n    const implFactory = await requireImplFactory(kind, options);\n    // injections\n    const log = createLogger(kind);\n    const injections = { log, resolve, html, ...options?.injections };\n    // construct 3P prototype\n    const proto = implFactory(injections);\n    // // construct particleFactory\n    const particleFactory = (host) => {\n        const pipe = {\n            log,\n            output: host.output.bind(host),\n            service: host.service.bind(host)\n        };\n        return new Particle(proto, pipe, true);\n    };\n    return particleFactory;\n};\nconst requireImplFactory = async (kind, options) => {\n    // snatch up the custom particle code\n    const implCode = await requireParticleImplCode(kind, options);\n    let factory = (0, eval)(implCode);\n    // if it's an object\n    if (typeof factory === 'object') {\n        // repackage the code to eliminate closures\n        factory = repackageImplFactory(factory, kind);\n        log('repackaged factory:\\n', factory);\n    }\n    return globalThis.harden(factory);\n};\nconst { assign, keys, entries, values, create } = Object;\nglobalThis.SafeObject = {\n    create,\n    assign,\n    keys(o) {\n        return o ? keys(o) : [];\n    },\n    values(o) {\n        return o ? values(o) : [];\n    },\n    entries(o) {\n        return o ? entries(o) : [];\n    },\n    mapBy(a, keyGetter) {\n        return a ? values(a).reduce((map, item) => (map[keyGetter(item)] = item, map), {}) : {};\n    }\n};\nconst repackageImplFactory = (factory, kind) => {\n    const { constNames, rewriteConsts, funcNames, rewriteFuncs } = collectDecls(factory);\n    const proto = `{${[...constNames, ...funcNames]}}`;\n    const moduleRewrite = `\n({log, ...utils}) => {\n// protect utils\nglobalThis.harden(utils);\n// these are just handy\nconst {assign, keys, entries, values, create, mapBy} = globalThis.SafeObject;\n// declarations\n${[...rewriteConsts, ...rewriteFuncs].join('\\n\\n')}\n// hardened Object (map) of declarations,\n// suitable to be a prototype\nreturn globalThis.harden(${proto});\n// name the file for debuggers\n//# sourceURL=sandbox/${pathForKind(kind).split('/').pop()}\n};\n  `;\n    log('rewritten:\\n\\n', moduleRewrite);\n    return (0, eval)(moduleRewrite);\n};\nconst collectDecls = factory => {\n    // dictionary to 2-tuples\n    const props = Object.entries(factory);\n    // filter by typeof\n    const isFunc = ([n, p]) => typeof p === 'function';\n    // filter out forbidden names\n    const isForbidden = ([n, p]) => n == 'harden' || n == 'globalThis';\n    // get props that are functions\n    const funcs = props.filter(item => isFunc(item) && !isForbidden(item));\n    // rewrite object declarations as module declarations\n    const rewriteFuncs = funcs.map(([n, f]) => {\n        const code = f?.toString?.() ?? '';\n        const async = code.includes('async');\n        const body = code.replace('async ', '').replace('function ', '');\n        return `${async ? 'async' : ''} function ${body};`;\n    });\n    // array up the function names\n    const funcNames = funcs.map(([n]) => n);\n    // if it's not a Function, it's a const\n    const consts = props.filter(item => !isFunc(item) && !isForbidden(item));\n    // build const decls\n    const rewriteConsts = consts.map(([n, p]) => {\n        return `const ${n} = \\`${p}\\`;`;\n    });\n    // array up the const names\n    const constNames = consts.map(([n]) => n);\n    return {\n        constNames,\n        rewriteConsts,\n        funcNames,\n        rewriteFuncs\n    };\n};\nconst createLogger = kind => {\n    const _log = logFactory(logFactory.flags.particles, kind, '#002266');\n    return (msg, ...args) => {\n        const stack = msg?.stack?.split('\\n')?.slice(1, 2) || (new Error()).stack?.split('\\n').slice(2, 3);\n        const where = stack\n            .map(entry => entry\n            .replace(/\\([^()]*?\\)/, '')\n            .replace(/ \\([^()]*?\\)/, '')\n            .replace('<anonymous>, <anonymous>', '')\n            .replace('Object.', '')\n            .replace('eval at :', '')\n            .replace(/\\(|\\)/g, '')\n            .replace(/\\[[^\\]]*?\\] /, '')\n            .replace(/at (.*) (\\d)/, 'at \"$1\" $2'))\n            .reverse()\n            .join('\\n')\n            .trim();\n        if (msg?.message) {\n            _log.error(msg.message, ...args, `(${where})`);\n        }\n        else {\n            _log(msg, ...args, `(${where})`);\n        }\n    };\n};\n// give the runtime a safe way to instantiate Particles\nRuntime.particleIndustry = createParticleFactory;\nRuntime.securityLockdown = initVanilla;\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport * from './date.js';\nexport * from './id.js';\nexport * from './log.js';\nexport * from './matching.js';\nexport * from './object.js';\nexport * from './paths.js';\nexport * from './rand.js';\nexport * from './task.js';\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const computeAgeString = (date, now) => {\n    let deltaTime = Math.round((now - date) / 1000);\n    if (isNaN(deltaTime)) {\n        return `\u2022`;\n    }\n    let plural = '';\n    if (deltaTime < 60) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} second${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 60);\n    if (deltaTime < 60) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} minute${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 60);\n    if (deltaTime < 24) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} hour${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 24);\n    if (deltaTime < 30) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} day${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 30);\n    if (deltaTime < 12) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} month${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 12);\n    if (deltaTime > 1)\n        plural = 's';\n    return `${deltaTime} year${plural} ago`;\n};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/**\n * Perform `action` if `delay` ms have elapsed since last debounce call for `key`.\n *\n * ```\n * // invoke 'task' one second after last time this line executed\n * this.debounceTask = debounce(this.debounceTask, task, 1000);\n * ```\n */\nexport const debounce = (key, action, delay) => {\n    if (key) {\n        clearTimeout(key);\n    }\n    if (action && delay) {\n        return setTimeout(action, delay);\n    }\n};\nexport const async = task => {\n    return async (...args) => {\n        await Promise.resolve();\n        task(...args);\n    };\n};\nexport const asyncTask = (task, delayMs) => {\n    setTimeout(task, delayMs ?? 0);\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n\nexport * from '../js/Runtime.js';\nexport * from '../js/core/EventEmitter.js';\nexport * from '../js/core/Store.js';\nexport * from '../js/core/Arc.js';\nexport * from '../js/core/Host.js';\nexport * from '../js/core/Decorator.js';\nexport * from '../js/recipe/Chef.js';\nexport * from '../js/recipe/ParticleCook.js';\nexport * from '../js/recipe/StoreCook.js';\nexport * from '../js/recipe/RecipeParser.js';\nexport * from '../js/isolation/code.js';\nexport * from '../js/isolation/vanilla.js';\n\nimport * as utils from '../js/utils/utils.js';\nconst {logFactory, Paths} = utils;\nexport {logFactory, Paths, utils};\n\nconst root = import.meta.url.split('/').slice(0, -1).join('/');\nPaths.setRoot(root);\n"],
  "mappings": "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",
  "names": []
}
