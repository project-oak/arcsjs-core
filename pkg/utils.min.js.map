{
  "version": 3,
  "sources": ["js/utils/date.js", "js/utils/rand.js", "js/utils/id.js", "js/utils/types.js", "js/utils/log.js", "js/utils/matching.js", "js/utils/names.js", "js/utils/object.js", "js/utils/paths.js", "js/utils/task.js"],
  "sourcesContent": ["/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const computeAgeString = (date, now) => {\n    let deltaTime = Math.round((now - date) / 1000);\n    if (isNaN(deltaTime)) {\n        return `\u2022`;\n    }\n    let plural = '';\n    if (deltaTime < 60) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} second${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 60);\n    if (deltaTime < 60) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} minute${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 60);\n    if (deltaTime < 24) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} hour${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 24);\n    if (deltaTime < 30) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} day${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 30);\n    if (deltaTime < 12) {\n        if (deltaTime > 1)\n            plural = 's';\n        return `${deltaTime} month${plural} ago`;\n    }\n    deltaTime = Math.round(deltaTime / 12);\n    if (deltaTime > 1)\n        plural = 's';\n    return `${deltaTime} year${plural} ago`;\n};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nconst { floor, pow, random } = Math;\n// random n-digit number\nexport const key = (digits) => floor((1 + random() * 9) * pow(10, digits - 1));\n// random integer from [0..range)\nexport const irand = (range) => floor(random() * range);\n// random element from array\nexport const arand = (array) => array[irand(array.length)];\n// test if event has occured, where `probability` is between [0..1]\nexport const prob = (probability) => Boolean(random() < probability);\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { irand } from \"./rand.js\";\nexport const makeId = (pairs, digits, delim) => {\n    pairs = pairs || 2;\n    digits = digits || 2;\n    delim = delim || '-';\n    const min = Math.pow(10, digits - 1);\n    const range = Math.pow(10, digits) - min;\n    const result = [];\n    for (let i = 0; i < pairs; i++) {\n        result.push(`${irand(range - min) + min}`);\n    }\n    return result.join(delim);\n};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const logKinds = ['log', 'group', 'groupCollapsed', 'groupEnd', 'dir'];\nexport const errKinds = ['warn', 'error'];\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { logKinds, errKinds } from './types.js';\nconst { fromEntries } = Object;\nconst _logFactory = (enable, preamble, color, kind = 'log') => {\n    if (!enable) {\n        return () => { };\n    }\n    if (kind === 'dir') {\n        return console.dir.bind(console);\n    }\n    const style = `background: ${color || 'gray'}; color: white; padding: 1px 6px 2px 7px; border-radius: 6px 0 0 6px;`;\n    return console[kind].bind(console, `%c${preamble}`, style);\n};\nexport const logFactory = (enable, preamble, color = '') => {\n    const debugLoggers = fromEntries(logKinds.map(kind => [kind, _logFactory(enable, preamble, color, kind)]));\n    const errorLoggers = fromEntries(errKinds.map(kind => [kind, _logFactory(true, preamble, color, kind)]));\n    const loggers = { ...debugLoggers, ...errorLoggers };\n    // Inject `log` as default, keeping all loggers available to be invoked by name.\n    const log = loggers.log;\n    Object.assign(log, loggers);\n    return log;\n};\nlogFactory.flags = globalThis.config?.logFlags || {};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport function matches(candidateMeta, targetMeta) {\n    for (const property in targetMeta) {\n        if (candidateMeta[property] !== targetMeta[property]) {\n            return false;\n        }\n    }\n    return true;\n}\n;\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nimport { arand } from \"./rand.js\";\nexport const makeName = (delim) => {\n    return `${arand(name1)}${delim || '-'}${arand(name2)}`;\n};\nexport const makeCapName = () => {\n    return kebabToCaps(makeName());\n};\nexport const kebabToCaps = s => {\n    const neo = [];\n    for (let i = 0, c; (c = s[i]); i++) {\n        neo.push((i > 0) && (c !== '-') ? c : s[i > 0 ? ++i : i].toUpperCase());\n    }\n    return neo.join('');\n};\nconst name1 = [\"abandoned\", \"able\", \"absolute\", \"adorable\", \"adventurous\", \"academic\", \"acceptable\", \"acclaimed\", \"accomplished\", \"accurate\", \"aching\", \"acidic\", \"acrobatic\", \"active\", \"actual\", \"adept\", \"admirable\", \"admired\", \"adolescent\", \"adorable\", \"adored\", \"advanced\", \"afraid\", \"affectionate\", \"aged\", \"aggravating\", \"aggressive\", \"agile\", \"agitated\", \"agonizing\", \"agreeable\", \"ajar\", \"alarmed\", \"alarming\", \"alert\", \"alienated\", \"alive\", \"all\", \"altruistic\", \"amazing\", \"ambitious\", \"ample\", \"amused\", \"amusing\", \"anchored\", \"ancient\", \"angelic\", \"angry\", \"anguished\", \"animated\", \"annual\", \"another\", \"antique\", \"anxious\", \"any\", \"apprehensive\", \"appropriate\", \"apt\", \"arctic\", \"arid\", \"aromatic\", \"artistic\", \"ashamed\", \"assured\", \"astonishing\", \"athletic\", \"attached\", \"attentive\", \"attractive\", \"austere\", \"authentic\", \"authorized\", \"automatic\", \"avaricious\", \"average\", \"aware\", \"awesome\", \"awful\", \"awkward\", \"babyish\", \"bad\", \"back\", \"baggy\", \"bare\", \"barren\", \"basic\", \"beautiful\", \"belated\", \"beloved\", \"beneficial\", \"better\", \"best\", \"bewitched\", \"big\", \"big-hearted\", \"biodegradable\", \"bite-sized\", \"bitter\", \"black\", \"black-and-white\", \"bland\", \"blank\", \"blaring\", \"bleak\", \"blind\", \"blissful\", \"blond\", \"blue\", \"blushing\", \"bogus\", \"boiling\", \"bold\", \"bony\", \"boring\", \"bossy\", \"both\", \"bouncy\", \"bountiful\", \"bowed\", \"brave\", \"breakable\", \"brief\", \"bright\", \"brilliant\", \"brisk\", \"broken\", \"bronze\", \"brown\", \"bruised\", \"bubbly\", \"bulky\", \"bumpy\", \"buoyant\", \"burdensome\", \"burly\", \"bustling\", \"busy\", \"buttery\", \"buzzing\", \"calculating\", \"calm\", \"candid\", \"canine\", \"capital\", \"carefree\", \"careful\", \"careless\", \"caring\", \"cautious\", \"cavernous\", \"celebrated\", \"charming\", \"cheap\", \"cheerful\", \"cheery\", \"chief\", \"chilly\", \"chubby\", \"circular\", \"classic\", \"clean\", \"clear\", \"clear-cut\", \"clever\", \"close\", \"closed\", \"cloudy\", \"clueless\", \"clumsy\", \"cluttered\", \"coarse\", \"cold\", \"colorful\", \"colorless\", \"colossal\", \"comfortable\", \"common\", \"compassionate\", \"competent\", \"complete\", \"complex\", \"complicated\", \"composed\", \"concerned\", \"concrete\", \"confused\", \"conscious\", \"considerate\", \"constant\", \"content\", \"conventional\", \"cooked\", \"cool\", \"cooperative\", \"coordinated\", \"corny\", \"corrupt\", \"costly\", \"courageous\", \"courteous\", \"crafty\", \"crazy\", \"creamy\", \"creative\", \"creepy\", \"criminal\", \"crisp\", \"critical\", \"crooked\", \"crowded\", \"cruel\", \"crushing\", \"cuddly\", \"cultivated\", \"cultured\", \"cumbersome\", \"curly\", \"curvy\", \"cute\", \"cylindrical\", \"damaged\", \"damp\", \"dangerous\", \"dapper\", \"daring\", \"darling\", \"dark\", \"dazzling\", \"dead\", \"deadly\", \"deafening\", \"dear\", \"dearest\", \"decent\", \"decimal\", \"decisive\", \"deep\", \"defenseless\", \"defensive\", \"defiant\", \"deficient\", \"definite\", \"definitive\", \"delayed\", \"delectable\", \"delicious\", \"delightful\", \"delirious\", \"demanding\", \"dense\", \"dental\", \"dependable\", \"dependent\", \"descriptive\", \"deserted\", \"detailed\", \"determined\", \"devoted\", \"different\", \"difficult\", \"digital\", \"diligent\", \"dim\", \"dimpled\", \"dimwitted\", \"direct\", \"discrete\", \"distant\", \"downright\", \"dreary\", \"dirty\", \"disguised\", \"dishonest\", \"dismal\", \"distant\", \"distinct\", \"distorted\", \"dizzy\", \"dopey\", \"doting\", \"double\", \"downright\", \"drab\", \"drafty\", \"dramatic\", \"droopy\", \"dry\", \"dual\", \"dutiful\", \"each\", \"eager\", \"earnest\", \"early\", \"easy\", \"easy-going\", \"ecstatic\", \"edible\", \"educated\", \"elaborate\", \"elastic\", \"elated\", \"elderly\", \"electric\", \"elegant\", \"elementary\", \"elliptical\", \"embarrassed\", \"embellished\", \"eminent\", \"emotional\", \"empty\", \"enchanted\", \"enchanting\", \"energetic\", \"enlightened\", \"enormous\", \"enraged\", \"entire\", \"envious\", \"equal\", \"equatorial\", \"essential\", \"esteemed\", \"ethical\", \"euphoric\", \"even\", \"evergreen\", \"everlasting\", \"every\", \"evil\", \"exalted\", \"excellent\", \"exemplary\", \"exhausted\", \"excitable\", \"excited\", \"exciting\", \"exotic\", \"expensive\", \"experienced\", \"expert\", \"extraneous\", \"extroverted\", \"extra-large\", \"extra-small\", \"fabulous\", \"failing\", \"faint\", \"fair\", \"faithful\", \"fake\", \"false\", \"familiar\", \"famous\", \"fancy\", \"fantastic\", \"far\", \"faraway\", \"far-flung\", \"far-off\", \"fast\", \"fat\", \"fatal\", \"fatherly\", \"favorable\", \"favorite\", \"fearful\", \"fearless\", \"feisty\", \"feline\", \"female\", \"feminine\", \"few\", \"fickle\", \"filthy\", \"fine\", \"finished\", \"firm\", \"first\", \"firsthand\", \"fitting\", \"fixed\", \"flaky\", \"flamboyant\", \"flashy\", \"flat\", \"flawed\", \"flawless\", \"flickering\", \"flimsy\", \"flippant\", \"flowery\", \"fluffy\", \"fluid\", \"flustered\", \"focused\", \"fond\", \"foolhardy\", \"foolish\", \"forceful\", \"forked\", \"formal\", \"forsaken\", \"forthright\", \"fortunate\", \"fragrant\", \"frail\", \"frank\", \"frayed\", \"free\", \"French\", \"fresh\", \"frequent\", \"friendly\", \"frightened\", \"frightening\", \"frigid\", \"frilly\", \"frizzy\", \"frivolous\", \"front\", \"frosty\", \"frozen\", \"frugal\", \"fruitful\", \"full\", \"fumbling\", \"functional\", \"funny\", \"fussy\", \"fuzzy\", \"gargantuan\", \"gaseous\", \"general\", \"generous\", \"gentle\", \"genuine\", \"giant\", \"giddy\", \"gigantic\", \"gifted\", \"giving\", \"glamorous\", \"glaring\", \"glass\", \"gleaming\", \"gleeful\", \"glistening\", \"glittering\", \"gloomy\", \"glorious\", \"glossy\", \"glum\", \"golden\", \"good\", \"good-natured\", \"gorgeous\", \"graceful\", \"gracious\", \"grand\", \"grandiose\", \"granular\", \"grateful\", \"gray\", \"great\", \"green\", \"gregarious\", \"gripping\", \"grizzled\", \"grouchy\", \"grounded\", \"growing\", \"growling\", \"grown\", \"grubby\", \"gruesome\", \"grumpy\", \"guilty\", \"gullible\", \"gummy\", \"hairy\", \"half\", \"handmade\", \"handsome\", \"handy\", \"happy\", \"happy-go-lucky\", \"hard\", \"hard-to-find\", \"harmful\", \"harmless\", \"harmonious\", \"harsh\", \"hasty\", \"hateful\", \"haunting\", \"healthy\", \"heartfelt\", \"hearty\", \"heavenly\", \"heavy\", \"hefty\", \"helpful\", \"helpless\", \"hidden\", \"hideous\", \"high\", \"high-level\", \"hilarious\", \"hoarse\", \"hollow\", \"homely\", \"honest\", \"honorable\", \"honored\", \"hopeful\", \"horrible\", \"hospitable\", \"hot\", \"huge\", \"humble\", \"humiliating\", \"humming\", \"humongous\", \"hungry\", \"hurtful\", \"husky\", \"icky\", \"icy\", \"ideal\", \"idealistic\", \"identical\", \"idle\", \"idiotic\", \"idolized\", \"ignorant\", \"ill\", \"illegal\", \"ill-fated\", \"ill-informed\", \"illiterate\", \"illustrious\", \"imaginary\", \"imaginative\", \"immaculate\", \"immaterial\", \"immediate\", \"immense\", \"impassioned\", \"impeccable\", \"impartial\", \"imperfect\", \"imperturbable\", \"impish\", \"impolite\", \"important\", \"impossible\", \"impractical\", \"impressionable\", \"impressive\", \"improbable\", \"impure\", \"inborn\", \"incomparable\", \"incompatible\", \"incomplete\", \"inconsequential\", \"incredible\", \"indelible\", \"inexperienced\", \"indolent\", \"infamous\", \"infantile\", \"infatuated\", \"inferior\", \"infinite\", \"informal\", \"innocent\", \"insistent\", \"instructive\", \"insubstantial\", \"intelligent\", \"intent\", \"intentional\", \"interesting\", \"internal\", \"international\", \"intrepid\", \"ironclad\", \"itchy\", \"jaded\", \"jagged\", \"jam-packed\", \"jaunty\", \"jealous\", \"jittery\", \"joint\", \"jolly\", \"jovial\", \"joyful\", \"joyous\", \"jubilant\", \"judicious\", \"juicy\", \"jumbo\", \"junior\", \"jumpy\", \"juvenile\", \"kaleidoscopic\", \"keen\", \"key\", \"kind\", \"kindhearted\", \"kindly\", \"klutzy\", \"knobby\", \"knotty\", \"knowledgeable\", \"knowing\", \"known\", \"kooky\", \"kosher\", \"lanky\", \"large\", \"last\", \"lasting\", \"late\", \"lavish\", \"lawful\", \"lazy\", \"leading\", \"lean\", \"leafy\", \"left\", \"legal\", \"legitimate\", \"light\", \"lighthearted\", \"likable\", \"likely\", \"limited\", \"limp\", \"limping\", \"linear\", \"lined\", \"liquid\", \"little\", \"live\", \"lively\", \"livid\", \"lone\", \"lonely\", \"long\", \"long-term\", \"loose\", \"lopsided\", \"lost\", \"loud\", \"lovable\", \"lovely\", \"loving\", \"low\", \"loyal\", \"lucky\", \"lumbering\", \"luminous\", \"lumpy\", \"lustrous\", \"luxurious\", \"mad\", \"made-up\", \"magnificent\", \"majestic\", \"major\", \"male\", \"mammoth\", \"married\", \"marvelous\", \"masculine\", \"massive\", \"mature\", \"meager\", \"mealy\", \"mean\", \"measly\", \"meaty\", \"medical\", \"mediocre\", \"medium\", \"meek\", \"mellow\", \"melodic\", \"memorable\", \"menacing\", \"merry\", \"messy\", \"metallic\", \"mild\", \"milky\", \"mindless\", \"miniature\", \"minor\", \"minty\", \"miserable\", \"miserly\", \"misguided\", \"misty\", \"mixed\", \"modern\", \"modest\", \"moist\", \"monstrous\", \"monthly\", \"monumental\", \"moral\", \"mortified\", \"motherly\", \"motionless\", \"mountainous\", \"muddy\", \"muffled\", \"multicolored\", \"mundane\", \"murky\", \"mushy\", \"muted\", \"mysterious\", \"naive\", \"narrow\", \"nasty\", \"natural\", \"naughty\", \"nautical\", \"near\", \"neat\", \"necessary\", \"negligible\", \"neighboring\", \"nervous\", \"new\", \"next\", \"nice\", \"nifty\", \"nimble\", \"nippy\", \"nocturnal\", \"noisy\", \"nonstop\", \"normal\", \"notable\", \"noted\", \"noteworthy\", \"novel\", \"numb\", \"nutritious\", \"nutty\", \"obedient\", \"oblong\", \"oily\", \"oblong\", \"obvious\", \"occasional\", \"odd\", \"oddball\", \"offbeat\", \"offensive\", \"official\", \"old\", \"old-fashioned\", \"only\", \"open\", \"optimal\", \"optimistic\", \"opulent\", \"orange\", \"orderly\", \"organic\", \"ornate\", \"ornery\", \"ordinary\", \"original\", \"other\", \"our\", \"outlying\", \"outgoing\", \"outlandish\", \"outrageous\", \"outstanding\", \"oval\", \"overcooked\", \"overdue\", \"overjoyed\", \"overlooked\", \"palatable\", \"pale\", \"paltry\", \"parallel\", \"parched\", \"partial\", \"passionate\", \"past\", \"pastel\", \"peaceful\", \"peppery\", \"perfect\", \"perfumed\", \"periodic\", \"perky\", \"personal\", \"pertinent\", \"pesky\", \"pessimistic\", \"petty\", \"phony\", \"physical\", \"piercing\", \"pink\", \"pitiful\", \"plain\", \"plaintive\", \"plastic\", \"playful\", \"pleasant\", \"pleased\", \"pleasing\", \"plump\", \"plush\", \"polished\", \"polite\", \"political\", \"pointed\", \"pointless\", \"poised\", \"poor\", \"popular\", \"portly\", \"posh\", \"positive\", \"possible\", \"potable\", \"powerful\", \"powerless\", \"practical\", \"precious\", \"present\", \"prestigious\", \"pretty\", \"precious\", \"previous\", \"pricey\", \"prickly\", \"primary\", \"prime\", \"pristine\", \"private\", \"prize\", \"probable\", \"productive\", \"profitable\", \"profuse\", \"proper\", \"proud\", \"prudent\", \"punctual\", \"pungent\", \"puny\", \"pure\", \"purple\", \"pushy\", \"puzzled\", \"puzzling\", \"quaint\", \"qualified\", \"quarrelsome\", \"quarterly\", \"queasy\", \"querulous\", \"questionable\", \"quick\", \"quick-witted\", \"quiet\", \"quintessential\", \"quirky\", \"quixotic\", \"quizzical\", \"radiant\", \"ragged\", \"rapid\", \"rare\", \"rash\", \"raw\", \"recent\", \"reckless\", \"rectangular\", \"ready\", \"real\", \"realistic\", \"reasonable\", \"red\", \"reflecting\", \"regal\", \"regular\", \"reliable\", \"relieved\", \"remarkable\", \"remorseful\", \"remote\", \"repentant\", \"required\", \"respectful\", \"responsible\", \"repulsive\", \"revolving\", \"rewarding\", \"rich\", \"rigid\", \"right\", \"ringed\", \"ripe\", \"roasted\", \"robust\", \"rosy\", \"rotating\", \"rotten\", \"rough\", \"round\", \"rowdy\", \"royal\", \"rubbery\", \"rundown\", \"ruddy\", \"runny\", \"rural\", \"rusty\", \"sad\", \"safe\", \"salty\", \"same\", \"sandy\", \"sane\", \"sarcastic\", \"sardonic\", \"satisfied\", \"scaly\", \"scarce\", \"scared\", \"scary\", \"scented\", \"scholarly\", \"scientific\", \"scratchy\", \"scrawny\", \"second\", \"secondary\", \"second-hand\", \"secret\", \"self-assured\", \"self-reliant\", \"selfish\", \"sentimental\", \"separate\", \"serene\", \"serious\", \"serpentine\", \"several\", \"severe\", \"shabby\", \"shadowy\", \"shady\", \"shallow\", \"shameful\", \"shameless\", \"sharp\", \"shimmering\", \"shiny\", \"shocked\", \"shocking\", \"shoddy\", \"short\", \"short-term\", \"showy\", \"shrill\", \"shy\", \"sick\", \"silent\", \"silky\", \"silly\", \"silver\", \"similar\", \"simple\", \"simplistic\", \"sinful\", \"single\", \"sizzling\", \"skeletal\", \"skinny\", \"sleepy\", \"slight\", \"slim\", \"slimy\", \"slippery\", \"slow\", \"slushy\", \"small\", \"smart\", \"smoggy\", \"smooth\", \"smug\", \"snappy\", \"snarling\", \"sneaky\", \"sniveling\", \"snoopy\", \"sociable\", \"soft\", \"soggy\", \"solid\", \"somber\", \"some\", \"spherical\", \"sophisticated\", \"sore\", \"sorrowful\", \"soulful\", \"soupy\", \"sour\", \"Spanish\", \"sparkling\", \"sparse\", \"specific\", \"spectacular\", \"speedy\", \"spicy\", \"spiffy\", \"spirited\", \"spiteful\", \"splendid\", \"spotless\", \"spotted\", \"spry\", \"square\", \"squeaky\", \"squiggly\", \"stable\", \"staid\", \"stained\", \"stale\", \"standard\", \"starchy\", \"stark\", \"starry\", \"steep\", \"sticky\", \"stiff\", \"stimulating\", \"stingy\", \"stormy\", \"straight\", \"strange\", \"steel\", \"strict\", \"strident\", \"striking\", \"striped\", \"strong\", \"studious\", \"stunning\", \"stupendous\", \"sturdy\", \"stylish\", \"subdued\", \"submissive\", \"substantial\", \"subtle\", \"suburban\", \"sudden\", \"sugary\", \"sunny\", \"super\", \"superb\", \"superficial\", \"superior\", \"supportive\", \"sure-footed\", \"surprised\", \"suspicious\", \"svelte\", \"sweet\", \"sweltering\", \"swift\", \"sympathetic\", \"tall\", \"talkative\", \"tame\", \"tan\", \"tangible\", \"tart\", \"tasty\", \"tattered\", \"taut\", \"tedious\", \"teeming\", \"tempting\", \"tender\", \"tense\", \"tepid\", \"terrible\", \"terrific\", \"testy\", \"thankful\", \"that\", \"these\", \"thick\", \"thin\", \"third\", \"thirsty\", \"this\", \"thorough\", \"thorny\", \"those\", \"thoughtful\", \"threadbare\", \"thrifty\", \"thunderous\", \"tidy\", \"tight\", \"timely\", \"tinted\", \"tiny\", \"tired\", \"torn\", \"total\", \"tough\", \"traumatic\", \"treasured\", \"tremendous\", \"tragic\", \"trained\", \"tremendous\", \"triangular\", \"tricky\", \"trifling\", \"trim\", \"trivial\", \"troubled\", \"true\", \"trusting\", \"trustworthy\", \"trusty\", \"truthful\", \"tubby\", \"turbulent\", \"twin\", \"ugly\", \"ultimate\", \"unacceptable\", \"unaware\", \"uncomfortable\", \"uncommon\", \"unconscious\", \"understated\", \"unequaled\", \"uneven\", \"unfinished\", \"unfit\", \"unfolded\", \"unfortunate\", \"unhappy\", \"unhealthy\", \"uniform\", \"unimportant\", \"unique\", \"united\", \"unkempt\", \"unknown\", \"unlawful\", \"unlined\", \"unlucky\", \"unnatural\", \"unpleasant\", \"unrealistic\", \"unripe\", \"unruly\", \"unselfish\", \"unsightly\", \"unsteady\", \"unsung\", \"untidy\", \"untimely\", \"untried\", \"untrue\", \"unused\", \"unusual\", \"unwelcome\", \"unwieldy\", \"unwilling\", \"unwitting\", \"unwritten\", \"upbeat\", \"upright\", \"upset\", \"urban\", \"usable\", \"used\", \"useful\", \"useless\", \"utilized\", \"utter\", \"vacant\", \"vague\", \"vain\", \"valid\", \"valuable\", \"vapid\", \"variable\", \"vast\", \"velvety\", \"venerated\", \"vengeful\", \"verifiable\", \"vibrant\", \"vicious\", \"victorious\", \"vigilant\", \"vigorous\", \"villainous\", \"violet\", \"violent\", \"virtual\", \"virtuous\", \"visible\", \"vital\", \"vivacious\", \"vivid\", \"voluminous\", \"wan\", \"warlike\", \"warm\", \"warmhearted\", \"warped\", \"wary\", \"wasteful\", \"watchful\", \"waterlogged\", \"watery\", \"wavy\", \"wealthy\", \"weak\", \"weary\", \"webbed\", \"wee\", \"weekly\", \"weepy\", \"weighty\", \"weird\", \"welcome\", \"well-documented\", \"well-groomed\", \"well-informed\", \"well-lit\", \"well-made\", \"well-off\", \"well-to-do\", \"well-worn\", \"wet\", \"which\", \"whimsical\", \"whirlwind\", \"whispered\", \"white\", \"whole\", \"whopping\", \"wicked\", \"wide\", \"wide-eyed\", \"wiggly\", \"wild\", \"willing\", \"wilted\", \"winding\", \"windy\", \"winged\", \"wiry\", \"wise\", \"witty\", \"wobbly\", \"woeful\", \"wonderful\", \"wooden\", \"woozy\", \"wordy\", \"worldly\", \"worn\", \"worried\", \"worrisome\", \"worse\", \"worst\", \"worthless\", \"worthwhile\", \"worthy\", \"wrathful\", \"wretched\", \"writhing\", \"wrong\", \"wry\", \"yawning\", \"yearly\", \"yellow\", \"yellowish\", \"young\", \"youthful\", \"yummy\", \"zany\", \"zealous\", \"zesty\", \"zigzag\", \"rocky\"];\nconst name2 = [\"people\", \"history\", \"way\", \"art\", \"world\", \"information\", \"map\", \"family\", \"government\", \"health\", \"system\", \"computer\", \"meat\", \"year\", \"thanks\", \"music\", \"person\", \"reading\", \"method\", \"data\", \"food\", \"understanding\", \"theory\", \"law\", \"bird\", \"literature\", \"problem\", \"software\", \"control\", \"knowledge\", \"power\", \"ability\", \"economics\", \"love\", \"internet\", \"television\", \"science\", \"library\", \"nature\", \"fact\", \"product\", \"idea\", \"temperature\", \"investment\", \"area\", \"society\", \"activity\", \"story\", \"industry\", \"media\", \"thing\", \"oven\", \"community\", \"definition\", \"safety\", \"quality\", \"development\", \"language\", \"management\", \"player\", \"variety\", \"video\", \"week\", \"security\", \"country\", \"exam\", \"movie\", \"organization\", \"equipment\", \"physics\", \"analysis\", \"policy\", \"series\", \"thought\", \"basis\", \"boyfriend\", \"direction\", \"strategy\", \"technology\", \"army\", \"camera\", \"freedom\", \"paper\", \"environment\", \"child\", \"instance\", \"month\", \"truth\", \"marketing\", \"university\", \"writing\", \"article\", \"department\", \"difference\", \"goal\", \"news\", \"audience\", \"fishing\", \"growth\", \"income\", \"marriage\", \"user\", \"combination\", \"failure\", \"meaning\", \"medicine\", \"philosophy\", \"teacher\", \"communication\", \"night\", \"chemistry\", \"disease\", \"disk\", \"energy\", \"nation\", \"road\", \"role\", \"soup\", \"advertising\", \"location\", \"success\", \"addition\", \"apartment\", \"education\", \"math\", \"moment\", \"painting\", \"politics\", \"attention\", \"decision\", \"event\", \"property\", \"shopping\", \"student\", \"wood\", \"competition\", \"distribution\", \"entertainment\", \"office\", \"population\", \"president\", \"unit\", \"category\", \"cigarette\", \"context\", \"introduction\", \"opportunity\", \"performance\", \"driver\", \"flight\", \"length\", \"magazine\", \"newspaper\", \"relationship\", \"teaching\", \"cell\", \"dealer\", \"debate\", \"finding\", \"lake\", \"member\", \"message\", \"phone\", \"scene\", \"appearance\", \"association\", \"concept\", \"customer\", \"death\", \"discussion\", \"housing\", \"inflation\", \"insurance\", \"mood\", \"woman\", \"advice\", \"blood\", \"effort\", \"expression\", \"importance\", \"opinion\", \"payment\", \"reality\", \"responsibility\", \"situation\", \"skill\", \"statement\", \"wealth\", \"application\", \"city\", \"county\", \"depth\", \"estate\", \"foundation\", \"grandmother\", \"heart\", \"perspective\", \"photo\", \"recipe\", \"studio\", \"topic\", \"collection\", \"depression\", \"imagination\", \"passion\", \"percentage\", \"resource\", \"setting\", \"ad\", \"agency\", \"college\", \"connection\", \"criticism\", \"debt\", \"description\", \"memory\", \"patience\", \"secretary\", \"solution\", \"administration\", \"aspect\", \"attitude\", \"director\", \"personality\", \"psychology\", \"recommendation\", \"response\", \"selection\", \"storage\", \"version\", \"alcohol\", \"argument\", \"complaint\", \"contract\", \"emphasis\", \"highway\", \"loss\", \"membership\", \"possession\", \"preparation\", \"steak\", \"union\", \"agreement\", \"cancer\", \"currency\", \"employment\", \"engineering\", \"entry\", \"interaction\", \"limit\", \"mixture\", \"preference\", \"region\", \"republic\", \"seat\", \"tradition\", \"virus\", \"actor\", \"classroom\", \"delivery\", \"device\", \"difficulty\", \"drama\", \"election\", \"engine\", \"football\", \"guidance\", \"hotel\", \"match\", \"owner\", \"priority\", \"protection\", \"suggestion\", \"tension\", \"variation\", \"anxiety\", \"atmosphere\", \"awareness\", \"bread\", \"climate\", \"comparison\", \"confusion\", \"construction\", \"elevator\", \"emotion\", \"employee\", \"employer\", \"guest\", \"height\", \"leadership\", \"mall\", \"manager\", \"operation\", \"recording\", \"respect\", \"sample\", \"transportation\", \"boring\", \"charity\", \"cousin\", \"disaster\", \"editor\", \"efficiency\", \"excitement\", \"extent\", \"feedback\", \"guitar\", \"homework\", \"leader\", \"mom\", \"outcome\", \"permission\", \"presentation\", \"promotion\", \"reflection\", \"refrigerator\", \"resolution\", \"revenue\", \"session\", \"singer\", \"tennis\", \"basket\", \"bonus\", \"cabinet\", \"childhood\", \"church\", \"clothes\", \"coffee\", \"dinner\", \"drawing\", \"hair\", \"hearing\", \"initiative\", \"judgment\", \"lab\", \"measurement\", \"mode\", \"mud\", \"orange\", \"poetry\", \"police\", \"possibility\", \"procedure\", \"queen\", \"ratio\", \"relation\", \"restaurant\", \"satisfaction\", \"sector\", \"signature\", \"significance\", \"song\", \"tooth\", \"town\", \"vehicle\", \"volume\", \"wife\", \"accident\", \"airport\", \"appointment\", \"arrival\", \"assumption\", \"baseball\", \"chapter\", \"committee\", \"conversation\", \"database\", \"enthusiasm\", \"error\", \"explanation\", \"farmer\", \"gate\", \"girl\", \"hall\", \"historian\", \"hospital\", \"injury\", \"instruction\", \"maintenance\", \"manufacturer\", \"meal\", \"perception\", \"pie\", \"poem\", \"presence\", \"proposal\", \"reception\", \"replacement\", \"revolution\", \"river\", \"son\", \"speech\", \"tea\", \"village\", \"warning\", \"winner\", \"worker\", \"writer\", \"assistance\", \"breath\", \"buyer\", \"chest\", \"chocolate\", \"conclusion\", \"contribution\", \"cookie\", \"courage\", \"desk\", \"drawer\", \"establishment\", \"examination\", \"garbage\", \"grocery\", \"honey\", \"impression\", \"improvement\", \"independence\", \"insect\", \"inspection\", \"inspector\", \"king\", \"ladder\", \"menu\", \"penalty\", \"piano\", \"potato\", \"profession\", \"professor\", \"quantity\", \"reaction\", \"requirement\", \"salad\", \"sister\", \"supermarket\", \"tongue\", \"weakness\", \"wedding\", \"affair\", \"ambition\", \"analyst\", \"apple\", \"assignment\", \"assistant\", \"bathroom\", \"bedroom\", \"beer\", \"birthday\", \"celebration\", \"championship\", \"cheek\", \"client\", \"consequence\", \"departure\", \"diamond\", \"dirt\", \"ear\", \"fortune\", \"friendship\", \"funeral\", \"gene\", \"girlfriend\", \"hat\", \"indication\", \"intention\", \"lady\", \"midnight\", \"negotiation\", \"obligation\", \"passenger\", \"pizza\", \"platform\", \"poet\", \"pollution\", \"recognition\", \"reputation\", \"shirt\", \"speaker\", \"stranger\", \"surgery\", \"sympathy\", \"tale\", \"throat\", \"trainer\", \"uncle\", \"youth\", \"time\", \"work\", \"film\", \"water\", \"money\", \"example\", \"while\", \"business\", \"study\", \"game\", \"life\", \"form\", \"air\", \"day\", \"place\", \"number\", \"part\", \"field\", \"fish\", \"back\", \"process\", \"heat\", \"hand\", \"experience\", \"job\", \"book\", \"end\", \"point\", \"type\", \"home\", \"economy\", \"value\", \"body\", \"market\", \"guide\", \"interest\", \"state\", \"radio\", \"course\", \"company\", \"price\", \"size\", \"card\", \"list\", \"mind\", \"trade\", \"line\", \"care\", \"group\", \"risk\", \"word\", \"fat\", \"force\", \"key\", \"light\", \"training\", \"name\", \"school\", \"top\", \"amount\", \"level\", \"order\", \"practice\", \"research\", \"sense\", \"service\", \"piece\", \"web\", \"boss\", \"sport\", \"fun\", \"house\", \"page\", \"term\", \"test\", \"answer\", \"sound\", \"focus\", \"matter\", \"kind\", \"soil\", \"board\", \"oil\", \"picture\", \"access\", \"garden\", \"range\", \"rate\", \"reason\", \"future\", \"site\", \"demand\", \"exercise\", \"image\", \"case\", \"cause\", \"coast\", \"action\", \"age\", \"bad\", \"boat\", \"record\", \"result\", \"section\", \"building\", \"mouse\", \"cash\", \"class\", \"period\", \"plan\", \"store\", \"tax\", \"side\", \"subject\", \"space\", \"rule\", \"stock\", \"weather\", \"chance\", \"figure\", \"man\", \"model\", \"source\", \"beginning\", \"earth\", \"program\", \"chicken\", \"design\", \"feature\", \"head\", \"material\", \"purpose\", \"question\", \"rock\", \"salt\", \"act\", \"birth\", \"car\", \"dog\", \"object\", \"scale\", \"sun\", \"note\", \"profit\", \"rent\", \"speed\", \"style\", \"war\", \"bank\", \"craft\", \"half\", \"inside\", \"outside\", \"standard\", \"bus\", \"exchange\", \"eye\", \"fire\", \"position\", \"pressure\", \"stress\", \"advantage\", \"benefit\", \"box\", \"frame\", \"issue\", \"step\", \"cycle\", \"face\", \"item\", \"metal\", \"paint\", \"review\", \"room\", \"screen\", \"structure\", \"view\", \"account\", \"ball\", \"discipline\", \"medium\", \"share\", \"balance\", \"bit\", \"black\", \"bottom\", \"choice\", \"gift\", \"impact\", \"machine\", \"shape\", \"tool\", \"wind\", \"address\", \"average\", \"career\", \"culture\", \"morning\", \"pot\", \"sign\", \"table\", \"task\", \"condition\", \"contact\", \"credit\", \"egg\", \"hope\", \"ice\", \"network\", \"north\", \"square\", \"attempt\", \"date\", \"effect\", \"link\", \"post\", \"star\", \"voice\", \"capital\", \"challenge\", \"friend\", \"self\", \"shot\", \"brush\", \"couple\", \"exit\", \"front\", \"function\", \"lack\", \"living\", \"plant\", \"plastic\", \"spot\", \"summer\", \"taste\", \"theme\", \"track\", \"wing\", \"brain\", \"button\", \"click\", \"desire\", \"foot\", \"gas\", \"influence\", \"notice\", \"rain\", \"wall\", \"base\", \"damage\", \"distance\", \"feeling\", \"pair\", \"savings\", \"staff\", \"sugar\", \"target\", \"text\", \"animal\", \"author\", \"budget\", \"discount\", \"file\", \"ground\", \"lesson\", \"minute\", \"officer\", \"phase\", \"reference\", \"register\", \"sky\", \"stage\", \"stick\", \"title\", \"trouble\", \"bowl\", \"bridge\", \"campaign\", \"character\", \"club\", \"edge\", \"evidence\", \"fan\", \"letter\", \"lock\", \"maximum\", \"novel\", \"option\", \"pack\", \"park\", \"quarter\", \"skin\", \"sort\", \"weight\", \"baby\", \"background\", \"carry\", \"dish\", \"factor\", \"fruit\", \"glass\", \"joint\", \"master\", \"muscle\", \"red\", \"strength\", \"traffic\", \"trip\", \"vegetable\", \"appeal\", \"chart\", \"gear\", \"ideal\", \"librarychen\", \"land\", \"log\", \"mother\", \"net\", \"party\", \"principle\", \"relative\", \"sale\", \"season\", \"signal\", \"spirit\", \"street\", \"tree\", \"wave\", \"belt\", \"bench\", \"commission\", \"copy\", \"drop\", \"minimum\", \"path\", \"progress\", \"project\", \"sea\", \"south\", \"status\", \"stuff\", \"ticket\", \"tour\", \"angle\", \"blue\", \"breakfast\", \"confidence\", \"daughter\", \"degree\", \"doctor\", \"dot\", \"dream\", \"duty\", \"essay\", \"father\", \"fee\", \"finance\", \"hour\", \"juice\", \"luck\", \"milk\", \"mouth\", \"peace\", \"pipe\", \"stable\", \"storm\", \"substance\", \"team\", \"trick\", \"afternoon\", \"bat\", \"beach\", \"blank\", \"catch\", \"chain\", \"consideration\", \"cream\", \"crew\", \"detail\", \"gold\", \"interview\", \"kid\", \"mark\", \"mission\", \"pain\", \"pleasure\", \"score\", \"screw\", \"sex\", \"shop\", \"shower\", \"suit\", \"tone\", \"window\", \"agent\", \"band\", \"bath\", \"block\", \"bone\", \"calendar\", \"candidate\", \"cap\", \"coat\", \"contest\", \"corner\", \"court\", \"cup\", \"district\", \"door\", \"east\", \"finger\", \"garage\", \"guarantee\", \"hole\", \"hook\", \"implement\", \"layer\", \"lecture\", \"lie\", \"manner\", \"meeting\", \"nose\", \"parking\", \"partner\", \"profile\", \"rice\", \"routine\", \"schedule\", \"swimming\", \"telephone\", \"tip\", \"winter\", \"airline\", \"bag\", \"battle\", \"bed\", \"bill\", \"bother\", \"cake\", \"code\", \"curve\", \"designer\", \"dimension\", \"dress\", \"ease\", \"emergency\", \"evening\", \"extension\", \"farm\", \"fight\", \"gap\", \"grade\", \"holiday\", \"horror\", \"horse\", \"host\", \"husband\", \"loan\", \"mistake\", \"mountain\", \"nail\", \"noise\", \"occasion\", \"package\", \"patient\", \"pause\", \"phrase\", \"proof\", \"race\", \"relief\", \"sand\", \"sentence\", \"shoulder\", \"smoke\", \"stomach\", \"string\", \"tourist\", \"towel\", \"vacation\", \"west\", \"wheel\", \"wine\", \"arm\", \"aside\", \"associate\", \"bet\", \"blow\", \"border\", \"branch\", \"breast\", \"brother\", \"buddy\", \"bunch\", \"chip\", \"coach\", \"cross\", \"document\", \"draft\", \"dust\", \"expert\", \"floor\", \"god\", \"golf\", \"habit\", \"iron\", \"judge\", \"knife\", \"landscape\", \"league\", \"mail\", \"mess\", \"native\", \"opening\", \"parent\", \"pattern\", \"pin\", \"pool\", \"pound\", \"request\", \"salary\", \"shame\", \"shelter\", \"shoe\", \"silver\", \"tackle\", \"tank\", \"trust\", \"assist\", \"bake\", \"bar\", \"bell\", \"bike\", \"blame\", \"boy\", \"brick\", \"chair\", \"closet\", \"clue\", \"collar\", \"comment\", \"conference\", \"devil\", \"diet\", \"fear\", \"fuel\", \"glove\", \"jacket\", \"lunch\", \"monitor\", \"mortgage\", \"nurse\", \"pace\", \"panic\", \"peak\", \"plane\", \"reward\", \"row\", \"sandwich\", \"shock\", \"spite\", \"spray\", \"surprise\", \"till\", \"transition\", \"weekend\", \"welcome\", \"yard\", \"alarm\", \"bend\", \"bicycle\", \"bite\", \"blind\", \"bottle\", \"cable\", \"candle\", \"clerk\", \"cloud\", \"concert\", \"counter\", \"flower\", \"grandfather\", \"harm\", \"knee\", \"lawyer\", \"leather\", \"load\", \"mirror\", \"neck\", \"pension\", \"plate\", \"purple\", \"ruin\", \"ship\", \"skirt\", \"slice\", \"snow\", \"specialist\", \"stroke\", \"switch\", \"trash\", \"tune\", \"zone\", \"anger\", \"award\", \"bid\", \"bitter\", \"boot\", \"bug\", \"camp\", \"candy\", \"carpet\", \"cat\", \"champion\", \"channel\", \"clock\", \"comfort\", \"cow\", \"crack\", \"engineer\", \"entrance\", \"fault\", \"grass\", \"guy\", \"hell\", \"highlight\", \"incident\", \"island\", \"joke\", \"jury\", \"leg\", \"lip\", \"mate\", \"motor\", \"nerve\", \"passage\", \"pen\", \"pride\", \"priest\", \"prize\", \"promise\", \"resident\", \"resort\", \"ring\", \"roof\", \"rope\", \"sail\", \"scheme\", \"script\", \"sock\", \"station\", \"toe\", \"tower\", \"truck\", \"witness\", \"can\", \"will\", \"other\", \"use\", \"make\", \"good\", \"look\", \"help\", \"go\", \"great\", \"being\", \"still\", \"public\", \"read\", \"keep\", \"start\", \"give\", \"human\", \"local\", \"general\", \"specific\", \"long\", \"play\", \"feel\", \"high\", \"put\", \"common\", \"set\", \"change\", \"simple\", \"past\", \"big\", \"possible\", \"particular\", \"major\", \"personal\", \"current\", \"national\", \"cut\", \"natural\", \"physical\", \"show\", \"try\", \"check\", \"second\", \"call\", \"move\", \"pay\", \"let\", \"increase\", \"single\", \"individual\", \"turn\", \"ask\", \"buy\", \"guard\", \"hold\", \"main\", \"offer\", \"potential\", \"professional\", \"international\", \"travel\", \"cook\", \"alternative\", \"special\", \"working\", \"whole\", \"dance\", \"excuse\", \"cold\", \"commercial\", \"low\", \"purchase\", \"deal\", \"primary\", \"worth\", \"fall\", \"necessary\", \"positive\", \"produce\", \"search\", \"present\", \"spend\", \"talk\", \"creative\", \"tell\", \"cost\", \"drive\", \"green\", \"support\", \"glad\", \"remove\", \"return\", \"run\", \"complex\", \"due\", \"effective\", \"middle\", \"regular\", \"reserve\", \"independent\", \"leave\", \"original\", \"reach\", \"rest\", \"serve\", \"watch\", \"beautiful\", \"charge\", \"active\", \"break\", \"negative\", \"safe\", \"stay\", \"visit\", \"visual\", \"affect\", \"cover\", \"report\", \"rise\", \"walk\", \"white\", \"junior\", \"pick\", \"unique\", \"classic\", \"final\", \"lift\", \"mix\", \"private\", \"stop\", \"teach\", \"western\", \"concern\", \"familiar\", \"fly\", \"official\", \"broad\", \"comfortable\", \"gain\", \"rich\", \"save\", \"stand\", \"young\", \"heavy\", \"lead\", \"listen\", \"valuable\", \"worry\", \"handle\", \"leading\", \"meet\", \"release\", \"sell\", \"finish\", \"normal\", \"press\", \"ride\", \"secret\", \"spread\", \"spring\", \"tough\", \"wait\", \"brown\", \"deep\", \"display\", \"flow\", \"hit\", \"objective\", \"shoot\", \"touch\", \"cancel\", \"chemical\", \"cry\", \"dump\", \"extreme\", \"push\", \"conflict\", \"eat\", \"fill\", \"formal\", \"jump\", \"kick\", \"opposite\", \"pass\", \"pitch\", \"remote\", \"total\", \"treat\", \"vast\", \"abuse\", \"beat\", \"burn\", \"deposit\", \"print\", \"raise\", \"sleep\", \"somewhere\", \"advance\", \"consist\", \"dark\", \"double\", \"draw\", \"equal\", \"fix\", \"hire\", \"internal\", \"join\", \"sensitive\", \"tap\", \"win\", \"attack\", \"claim\", \"constant\", \"drag\", \"drink\", \"guess\", \"minor\", \"pull\", \"raw\", \"soft\", \"solid\", \"wear\", \"weird\", \"wonder\", \"annual\", \"count\", \"dead\", \"doubt\", \"feed\", \"forever\", \"impress\", \"repeat\", \"round\", \"sing\", \"slide\", \"strip\", \"wish\", \"combine\", \"command\", \"dig\", \"divide\", \"equivalent\", \"hang\", \"hunt\", \"initial\", \"march\", \"mention\", \"spiritual\", \"survey\", \"tie\", \"adult\", \"brief\", \"crazy\", \"escape\", \"gather\", \"hate\", \"prior\", \"repair\", \"rough\", \"sad\", \"scratch\", \"sick\", \"strike\", \"employ\", \"external\", \"hurt\", \"illegal\", \"laugh\", \"lay\", \"mobile\", \"nasty\", \"ordinary\", \"respond\", \"royal\", \"senior\", \"split\", \"strain\", \"struggle\", \"swim\", \"train\", \"upper\", \"wash\", \"yellow\", \"convert\", \"crash\", \"dependent\", \"fold\", \"funny\", \"grab\", \"hide\", \"miss\", \"permit\", \"quote\", \"recover\", \"resolve\", \"roll\", \"sink\", \"slip\", \"spare\", \"suspect\", \"sweet\", \"swing\", \"twist\", \"upstairs\", \"usual\", \"abroad\", \"brave\", \"calm\", \"concentrate\", \"estimate\", \"grand\", \"male\", \"mine\", \"prompt\", \"quiet\", \"refuse\", \"regret\", \"reveal\", \"rush\", \"shake\", \"shift\", \"shine\", \"steal\", \"suck\", \"surround\", \"bear\", \"brilliant\", \"dare\", \"dear\", \"delay\", \"drunk\", \"female\", \"hurry\", \"inevitable\", \"invite\", \"kiss\", \"neat\", \"pop\", \"punch\", \"quit\", \"reply\", \"representative\", \"resist\", \"rip\", \"rub\", \"silly\", \"smile\", \"spell\", \"stretch\", \"tear\", \"temporary\", \"tomorrow\", \"wake\", \"wrap\", \"yesterday\"];\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/*\n * update the fields of `obj` with the fields of `data`,\n * perturbing `obj` as little as possible (since it might be a magic proxy thing\n * like an Automerge document)\n */\nexport const shallowUpdate = (obj, data) => {\n    let result = data;\n    if (!data) {\n        //\n    }\n    else if (Array.isArray(data)) {\n        if (!Array.isArray(obj)) {\n            // TODO(sjmiles): eek, very perturbing to obj\n            obj = [];\n        }\n        for (let i = 0; i < data.length; i++) {\n            const value = data[i];\n            if (obj[i] !== value) {\n                obj[i] = value;\n            }\n        }\n        const overage = obj.length - data.length;\n        if (overage > 0) {\n            obj.splice(data.length, overage);\n        }\n    }\n    else if (typeof data === 'object') {\n        result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n        const seen = {};\n        // for each key in input data ...\n        Object.keys(data).forEach(key => {\n            // copy that data into output\n            result[key] = data[key];\n            // remember the key\n            seen[key] = true;\n        });\n        // for each key in the output data...\n        Object.keys(result).forEach(key => {\n            // if this key was not in the input, remove it\n            if (!seen[key]) {\n                delete result[key];\n            }\n        });\n    }\n    return result;\n};\nexport const shallowMerge = (obj, data) => {\n    if (data == null) {\n        return null;\n    }\n    if (typeof data === 'object') {\n        const result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n        Object.keys(data).forEach(key => result[key] = data[key]);\n        return result;\n    }\n    return data;\n};\nexport function deepCopy(datum) {\n    if (!datum) {\n        return datum;\n    }\n    else if (Array.isArray(datum)) {\n        // This is trivially type safe but tsc needs help\n        return datum.map(element => deepCopy(element));\n    }\n    else if (typeof datum === 'object') {\n        const clone = Object.create(null);\n        Object.entries(datum).forEach(([key, value]) => {\n            clone[key] = deepCopy(value);\n        });\n        return clone;\n    }\n    else {\n        return datum;\n    }\n}\nexport const deepEqual = (a, b) => {\n    const type = typeof a;\n    // must be same type to be equal\n    if (type !== typeof b) {\n        return false;\n    }\n    // we are `deep` because we recursively study object types\n    if (type === 'object' && a && b) {\n        const aProps = Object.getOwnPropertyNames(a);\n        const bProps = Object.getOwnPropertyNames(b);\n        // equal if same # of props, and no prop is not deepEqual\n        return (aProps.length == bProps.length) && !aProps.some(name => !deepEqual(a[name], b[name]));\n    }\n    // finally, perform simple comparison\n    return (a === b);\n};\nexport const deepUndefinedToNull = (obj) => {\n    if (obj === undefined) {\n        return null;\n    }\n    if (obj && (typeof obj === 'object')) {\n        // we are `deep` because we recursively study object types\n        const props = Object.getOwnPropertyNames(obj);\n        props.forEach(name => {\n            const prop = obj[name];\n            if (prop === undefined) {\n                delete obj[name];\n                //obj[name] = null;\n            }\n            else {\n                deepUndefinedToNull(prop);\n            }\n        });\n    }\n    return obj;\n};\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\nexport const PathMapper = class {\n    map;\n    constructor(root) {\n        this.map = {};\n        this.setRoot(root);\n    }\n    add(mappings) {\n        Object.assign(this.map, mappings || {});\n    }\n    resolve(path) {\n        const bits = path.split('/');\n        const top = bits.shift();\n        const prefix = this.map[top] || top;\n        return [prefix, ...bits].join('/');\n    }\n    setRoot(root) {\n        if (root.length && root[root.length - 1] === '/') {\n            root = root.slice(0, -1);\n        }\n        this.add({\n            '$root': root,\n            '$arcs': root\n        });\n    }\n    getAbsoluteHereUrl(meta, depth) {\n        // you are here\n        const localRelative = meta.url.split('/').slice(0, -(depth ?? 1)).join('/');\n        if (!globalThis?.document) {\n            return localRelative;\n        }\n        else {\n            // document root is here\n            let base = document.URL;\n            // if document URL has a filename, remove it\n            if (base[base.length - 1] !== '/') {\n                base = base.split('/').slice(0, -1).join('/');\n            }\n            // create absoute path to here (aka 'local')\n            let localAbsolute = new URL(localRelative, base).href;\n            // no trailing slash!\n            if (localAbsolute[localAbsolute.length - 1] === '/') {\n                localAbsolute = localAbsolute.slice(0, -1);\n            }\n            return localAbsolute;\n        }\n    }\n};\nconst root = import.meta.url.split('/').slice(0, -3).join('/');\nexport const Paths = globalThis['Paths'] = new PathMapper(root);\nPaths.add(globalThis.config?.paths);\n", "/**\n * Copyright 2022 Google LLC\n *\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://developers.google.com/open-source/licenses/bsd\n */\n/**\n * Perform `action` if `delay` ms have elapsed since last debounce call for `key`.\n *\n * ```\n * // invoke 'task' one second after last time this line executed\n * this.debounceTask = debounce(this.debounceTask, task, 1000);\n * ```\n */\nexport const debounce = (key, action, delay) => {\n    if (key) {\n        clearTimeout(key);\n    }\n    if (action && delay) {\n        return setTimeout(action, delay);\n    }\n};\nexport const async = task => {\n    return async (...args) => {\n        await Promise.resolve();\n        task(...args);\n    };\n};\nexport const asyncTask = (task, delayMs) => {\n    setTimeout(task, delayMs ?? 0);\n};\n"],
  "mappings": "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AAa,QAAS,UAAW,UAAW,SAAU,UAAW,OAAQ,WAAY,UAAW,WAAY,OAAQ,OAAQ,MAAO,QAAS,MAAO,MAAO,SAAU,QAAS,MAAO,OAAQ,SAAU,OAAQ,QAAS,QAAS,MAAO,OAAQ,QAAS,OAAQ,SAAU,UAAW,WAAY,MAAO,WAAY,MAAO,OAAQ,WAAY,WAAY,SAAU,YAAa,UAAW,MAAO,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,SAAU,OAAQ,SAAU,YAAa,OAAQ,UAAW,OAAQ,aAAc,SAAU,QAAS,UAAW,MAAO,QAAS,SAAU,SAAU,OAAQ,SAAU,UAAW,QAAS,OAAQ,OAAQ,UAAW,UAAW,SAAU,UAAW,UAAW,MAAO,OAAQ,QAAS,OAAQ,YAAa,UAAW,SAAU,MAAO,OAAQ,MAAO,UAAW,QAAS,SAAU,UAAW,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,QAAS,UAAW,YAAa,SAAU,OAAQ,OAAQ,QAAS,SAAU,OAAQ,QAAS,WAAY,OAAQ,SAAU,QAAS,UAAW,OAAQ,SAAU,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,QAAS,SAAU,OAAQ,MAAO,YAAa,SAAU,OAAQ,OAAQ,OAAQ,SAAU,WAAY,UAAW,OAAQ,UAAW,QAAS,QAAS,SAAU,OAAQ,SAAU,SAAU,SAAU,WAAY,OAAQ,SAAU,SAAU,SAAU,UAAW,QAAS,YAAa,WAAY,MAAO,QAAS,QAAS,QAAS,UAAW,OAAQ,SAAU,WAAY,YAAa,OAAQ,OAAQ,WAAY,MAAO,SAAU,OAAQ,UAAW,QAAS,SAAU,OAAQ,OAAQ,UAAW,OAAQ,OAAQ,SAAU,OAAQ,aAAc,QAAS,OAAQ,SAAU,QAAS,QAAS,QAAS,SAAU,SAAU,MAAO,WAAY,UAAW,OAAQ,YAAa,SAAU,QAAS,OAAQ,QAAS,cAAe,OAAQ,MAAO,SAAU,MAAO,QAAS,YAAa,WAAY,OAAQ,SAAU,SAAU,SAAU,SAAU,OAAQ,OAAQ,OAAQ,QAAS,aAAc,OAAQ,OAAQ,UAAW,OAAQ,WAAY,UAAW,MAAO,QAAS,SAAU,QAAS,SAAU,OAAQ,QAAS,OAAQ,YAAa,aAAc,WAAY,SAAU,SAAU,MAAO,QAAS,OAAQ,QAAS,SAAU,MAAO,UAAW,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,O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",
  "names": ["computeAgeString", "date", "now", "deltaTime", "plural", "floor", "pow", "random", "key", "digits", "irand", "range", "arand", "array", "prob", "probability", "makeId", "pairs", "digits", "delim", "min", "range", "result", "i", "irand", "logKinds", "errKinds", "fromEntries", "_logFactory", "enable", "preamble", "color", "kind", "style", "logFactory", "debugLoggers", "logKinds", "errorLoggers", "errKinds", "loggers", "log", "matches", "candidateMeta", "targetMeta", "property", "makeName", "delim", "arand", "name1", "name2", "makeCapName", "kebabToCaps", "s", "neo", "i", "c", "shallowUpdate", "obj", "data", "result", "i", "value", "overage", "seen", "key", "shallowMerge", "deepCopy", "datum", "element", "clone", "deepEqual", "a", "b", "type", "aProps", "bProps", "name", "deepUndefinedToNull", "prop", "PathMapper", "root", "mappings", "path", "bits", "top", "meta", "depth", "localRelative", "base", "localAbsolute", "Paths", "debounce", "key", "action", "delay", "async", "task", "args", "asyncTask", "delayMs"]
}
